{"meta":{"title":"KINGWDYの博客","subtitle":"KINGWDYの博客","description":"这是KINGWDYの博客","author":"KINGWDY","url":"https://kingwdy.avosapps.us","root":"/"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2022-05-20T03:03:17.585Z","comments":false,"path":"about/index.html","permalink":"https://kingwdy.avosapps.us/about/index.html","excerpt":"","text":"[KINGWDYのブログ] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()"},{"title":"","date":"2022-06-02T05:18:08.228Z","updated":"2022-05-20T07:18:05.450Z","comments":true,"path":"bvtoav/index.html","permalink":"https://kingwdy.avosapps.us/bvtoav/index.html","excerpt":"","text":"BV号转AV号 AV 号转 BV 号 BV 号转 AV 号 结果： 别问我为何这么丑，这玩意叫简洁风！！！ 改写自 mcfx 的纸糊回答，并加上一些适当的处理。 可以的话，下面赏我杯咖啡~~~谢谢！！！ // 改写自 https://www.zhihu.com/question/381784377/answer/1099438784，并加上一些适当的处理 'use strict'; const table = [...'fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF']; const s = [11, 10, 3, 8, 4, 6]; const xor = 177451812; const add = 8728348608; const av2bv = (av) => { let num = NaN; if (Object.prototype.toString.call(av) === '[object Number]') { num = av; } else if (Object.prototype.toString.call(av) === '[object String]') { num = parseInt(av.replace(/[^0-9]/gu, '')); }; if (isNaN(num) || num { let result = bv2av(document.getElementById('bv').value); if (result !== '¿你在想桃子？') { document.getElementById('result').innerHTML = `结果：${result}`; } else { document.getElementById('result').innerHTML = `结果：${result}`; }; }; document.getElementById('av').addEventListener('keydown', (event) => { if (event.keyCode === 13) { av(); }; }); document.getElementById('bv').addEventListener('keydown', (event) => { if (event.keyCode === 13) { bv(); }; });"},{"title":"categories","date":"2018-09-30T09:25:30.000Z","updated":"2022-05-14T05:02:56.926Z","comments":true,"path":"categories/index.html","permalink":"https://kingwdy.avosapps.us/categories/index.html","excerpt":"","text":""},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2022-05-20T02:50:59.552Z","comments":false,"path":"bangumi/index.html","permalink":"https://kingwdy.avosapps.us/bangumi/index.html","excerpt":"","text":""},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2021-11-08T22:13:18.000Z","comments":false,"path":"client/index.html","permalink":"https://kingwdy.avosapps.us/client/index.html","excerpt":"","text":"直接下载 or 扫码下载："},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2021-11-08T22:13:18.000Z","comments":true,"path":"comment/index.html","permalink":"https://kingwdy.avosapps.us/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》"},{"title":"contact","date":"2022-05-15T06:42:36.000Z","updated":"2022-05-15T06:43:02.587Z","comments":true,"path":"contact/index.html","permalink":"https://kingwdy.avosapps.us/contact/index.html","excerpt":"","text":""},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2021-11-08T22:13:18.000Z","comments":false,"path":"donate/index.html","permalink":"https://kingwdy.avosapps.us/donate/index.html","excerpt":"","text":""},{"title":"charts","date":"2022-05-14T02:11:25.000Z","updated":"2022-05-14T02:15:15.721Z","comments":true,"path":"charts/index.html","permalink":"https://kingwdy.avosapps.us/charts/index.html","excerpt":"","text":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","updated":"2022-05-14T05:04:07.792Z","comments":true,"path":"friends/index.html","permalink":"https://kingwdy.avosapps.us/friends/index.html","excerpt":"","text":""},{"title":"census","date":"2020-10-31T02:11:28.000Z","updated":"2022-05-14T05:38:56.638Z","comments":true,"path":"census/index.html","permalink":"https://kingwdy.avosapps.us/census/index.html","excerpt":"","text":""},{"title":"gallery","date":"2020-10-03T09:01:05.000Z","updated":"2022-01-18T13:04:44.000Z","comments":true,"path":"gallery/index.html","permalink":"https://kingwdy.avosapps.us/gallery/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2021-11-08T22:13:18.000Z","comments":false,"path":"lab/index.html","permalink":"https://kingwdy.avosapps.us/lab/index.html","excerpt":"","text":"sakura主题balabala"},{"title":"journal","date":"2022-05-18T12:26:14.000Z","updated":"2022-05-18T12:27:23.497Z","comments":true,"path":"journal/index.html","permalink":"https://kingwdy.avosapps.us/journal/index.html","excerpt":"","text":""},{"title":"map","date":"2022-05-27T00:16:54.000Z","updated":"2022-05-30T01:15:48.068Z","comments":true,"path":"map/index.html","permalink":"https://kingwdy.avosapps.us/map/index.html","excerpt":"","text":""},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2022-05-26T11:13:44.457Z","comments":true,"path":"links/index.html","permalink":"https://kingwdy.avosapps.us/links/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2022-05-23T03:09:19.273Z","comments":false,"path":"music/index.html","permalink":"https://kingwdy.avosapps.us/music/index.html","excerpt":"","text":""},{"title":"musics","date":"2022-05-16T02:15:12.000Z","updated":"2022-05-18T10:11:37.691Z","comments":true,"path":"musics/index.html","permalink":"https://kingwdy.avosapps.us/musics/index.html","excerpt":"","text":""},{"title":"photos","date":"2022-05-20T11:12:54.000Z","updated":"2022-05-20T11:12:54.697Z","comments":true,"path":"photos/index.html","permalink":"https://kingwdy.avosapps.us/photos/index.html","excerpt":"","text":""},{"title":"artitalk","date":"2022-05-29T02:15:35.217Z","updated":"2022-05-20T12:21:58.588Z","comments":false,"path":"shuoshuo/index.html","permalink":"https://kingwdy.avosapps.us/shuoshuo/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","updated":"2022-05-14T05:03:15.982Z","comments":true,"path":"tags/index.html","permalink":"https://kingwdy.avosapps.us/tags/index.html","excerpt":"","text":""},{"title":"ticktack","date":"2020-10-14T09:01:05.000Z","updated":"2022-01-18T13:04:44.000Z","comments":true,"path":"ticktack/index.html","permalink":"https://kingwdy.avosapps.us/ticktack/index.html","excerpt":"","text":""},{"title":"vlog","date":"2020-10-10T09:08:05.000Z","updated":"2022-01-18T13:04:44.000Z","comments":true,"path":"videos/index.html","permalink":"https://kingwdy.avosapps.us/videos/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2021-11-08T22:13:18.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://kingwdy.avosapps.us/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro"},{"title":"laboratory","date":"2022-05-18T12:26:14.000Z","updated":"2022-06-02T04:51:45.700Z","comments":true,"path":"laboratory/index.html","permalink":"https://kingwdy.avosapps.us/laboratory/index.html","excerpt":"","text":""},{"title":"itsNeko博主的绘画作品","date":"2020-10-05T15:00:17.000Z","updated":"2022-01-18T13:04:44.000Z","comments":true,"path":"gallery/itsNeko博主的绘画作品/index.html","permalink":"https://kingwdy.avosapps.us/gallery/itsNeko%E5%8D%9A%E4%B8%BB%E7%9A%84%E7%BB%98%E7%94%BB%E4%BD%9C%E5%93%81/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","updated":"2022-06-02T04:41:01.869Z","comments":true,"path":"tags/悦读/index.html","permalink":"https://kingwdy.avosapps.us/tags/%E6%82%A6%E8%AF%BB/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","updated":"2022-05-14T05:03:15.982Z","comments":true,"path":"tags/图集/index.html","permalink":"https://kingwdy.avosapps.us/tags/%E5%9B%BE%E9%9B%86/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-29T02:15:35.923Z","updated":"2022-05-24T12:24:53.893Z","comments":true,"path":"census/未命名文件夹/1.css","permalink":"https://kingwdy.avosapps.us/census/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9/1.css","excerpt":"","text":".timeline{ margin-top:20px; position:relative; } .timeline:before{ position:absolute; content:''; width:4px; height:calc(100% + 50px); background: rgb(138,145,150); background: -moz-linear-gradient(left, rgba(138,145,150,1) 0%, rgba(122,130,136,1) 60%, rgba(98,105,109,1) 100%); background: -webkit-linear-gradient(left, rgba(138,145,150,1) 0%,rgba(122,130,136,1) 60%,rgba(98,105,109,1) 100%); background: linear-gradient(to right, rgba(138,145,150,1) 0%,rgba(122,130,136,1) 60%,rgba(98,105,109,1) 100%); filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8a9196', endColorstr='#62696d',GradientType=1 ); left:14px; top:5px; border-radius:4px; } .timeline-month{ position:relative; padding:4px 15px 4px 35px; background-color:#444950; display:inline-block; width:auto; border-radius:40px; border:1px solid #17191B; border-right-color:black; margin-bottom:30px; } .timeline-month span{ position:absolute; top:-1px; left:calc(100% - 10px); z-index:-1; white-space:nowrap; display:inline-block; background-color:#111; padding:4px 10px 4px 20px; border-top-right-radius:40px; border-bottom-right-radius:40px; border:1px solid black; box-sizing:border-box; } .timeline-month:before{ position:absolute; content:''; width:20px; height:20px; background: rgb(138,145,150); background: -moz-linear-gradient(top, rgba(138,145,150,1) 0%, rgba(122,130,136,1) 60%, rgba(112,120,125,1) 100%); background: -webkit-linear-gradient(top, rgba(138,145,150,1) 0%,rgba(122,130,136,1) 60%,rgba(112,120,125,1) 100%); background: linear-gradient(to bottom, rgba(138,145,150,1) 0%,rgba(122,130,136,1) 60%,rgba(112,120,125,1) 100%); filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8a9196', endColorstr='#70787d',GradientType=0 ); border-radius:100%; border:1px solid #17191B; left:5px; } .timeline-section{ padding-left:35px; display:block; position:relative; margin-bottom:30px; } .timeline-date{ margin-bottom:15px; padding:2px 15px; background:linear-gradient(#74cae3, #5bc0de 60%, #4ab9db); position:relative; display:inline-block; border-radius:20px; border:1px solid #17191B; color:#fff; text-shadow:1px 1px 1px rgba(0,0,0,0.3); } .timeline-section:before{ content:''; position:absolute; width:30px; height:1px; background-color:#444950; top:12px; left:20px; } .timeline-section:after{ content:''; position:absolute; width:10px; height:10px; background:linear-gradient(to bottom, rgba(138,145,150,1) 0%,rgba(122,130,136,1) 60%,rgba(112,120,125,1) 100%); top:7px; left:11px; border:1px solid #17191B; border-radius:100%; } .timeline-section .col-sm-4{ margin-bottom:15px; } .timeline-box{ position:relative; background-color:#444950; border-radius:15px; border-top-left-radius:0px; border-bottom-right-radius:0px; border:1px solid #17191B; transition:all 0.3s ease; overflow:hidden; } .box-icon{ position:absolute; right:5px; top:0px; } .box-title{ padding:5px 15px; border-bottom: 1px solid #17191B; } .box-title i{ margin-right:5px; } .box-content{ padding:5px 15px; background-color:#17191B; } .box-content strong{ color:#666; font-style:italic; margin-right:5px; } .box-item{ margin-bottom:5px; } .box-footer{ padding:5px 15px; border-top: 1px solid #17191B; background-color:#444950; text-align:right; font-style:italic; }"},{"title":"","date":"2022-05-29T02:15:35.919Z","updated":"2022-05-24T07:23:55.412Z","comments":true,"path":"census/未命名文件夹/index.html","permalink":"https://kingwdy.avosapps.us/census/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9/index.html","excerpt":"","text":"来自闲花手札的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？ 哪怕是有什么想吃的，都可以告诉我哦~ 自动书记人偶竭诚为您服务！ 来自闲花手札的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？ 哪怕是有什么想吃的，都可以告诉我哦~"},{"title":"","date":"2022-05-29T02:15:35.921Z","updated":"2022-05-24T12:26:46.610Z","comments":true,"path":"census/未命名文件夹/index的副本.html","permalink":"https://kingwdy.avosapps.us/census/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9/index%E7%9A%84%E5%89%AF%E6%9C%AC.html","excerpt":"","text":"August, 2018 3 Entries 21, Tuesday Job Created Details Loss Type: A/C Leak Loss Territory: Texas Start Date: 08/22/2018 - Tyler Job Edited Details Project Manager: Marlyn Supervisor: Carol - Tyler 22, Wednesday Job Edited Details Extraction Type: Carpet Heavy Water Category: 4 No. Of Tech: 6 Est. Complation: 09/01/2018 - Carol New Job To Do Details Employee: Sam To Do: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nisi nulla, viverra quis felis sit amet, lacinia feugiat odio. Aliquam sed orci elementum, volutpat dolor eget, venenatis nunc - Marlyn New Job To Do Details Employee: Jones To Do: Proin sit amet aliquet neque, eget sagittis nunc. Proin convallis lectus quis volutpat pharetra. Donec quis ultrices eros. Ut eget mi faucibus. - Marlyn Pschrometrics Temp.: 23 oC Rh : 42 Comments: Integer nec placerat ipsum. Aliquam id ligula suscipit, ornare dui nec, laoreet tortor. - Jones Room Created Name: Kitchen Floor Level : 2 Dimensions: 26 x 11 x 8 - Sam 23, Thursday Job To Do Completed Details Employee: Sam Employee Response: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nisi nulla, viverra quis felis sit amet, lacinia feugiat odio. Aliquam sed orci elementum, volutpat dolor eget, venenatis nunc - Carol Equipment Entry Details ID: TW-3232 Name: HEPA 600 Date In: 08/22/2018 - Jones"}],"posts":[{"title":"回看全职高手（日更）","slug":"回看全职高手","date":"2022-06-02T05:37:56.000Z","updated":"2022-06-02T06:05:28.767Z","comments":true,"path":"posts/1355.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/1355.html","excerpt":"","text":"第一季第一集 第二集 第三集 第四集 第五集 第六集 第七集 第八集 第九集 第十集 第十一集 第十二集 【目前就更新到这，若出现502，复制url后的链接，在新一页打开】","categories":[{"name":"随笔","slug":"随笔","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://kingwdy.avosapps.us/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"全职高手","slug":"全职高手","permalink":"https://kingwdy.avosapps.us/tags/%E5%85%A8%E8%81%8C%E9%AB%98%E6%89%8B/"}],"author":"KINGWDY"},{"title":"YLUI高级特性","slug":"YLUIAPP 高级特性","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:35:18.543Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"APP高级特性APP的表现形式不仅仅可以是一个个窗口，还可以为动态壁纸，小工具，后台服务等，取决于开发者的想象力。 下面我们将以几个特殊APP为例，探索如何利用APP的高级特性。 便签便签用于快速记录信息，设计为一个小窗口，自启动于屏幕右上角。 https://cdn.jsdelivr.net/gh/yuri2peter/ylui@master/documents/assets/4.png 便签作为小工具，需要低调。设置plugin:true，默认隐藏标题栏 每次启动自动出现在右上角，设置上对齐，右对齐，偏移4px 自启动级别设置为2 不需要用户改动url，设置地址栏默认隐藏addressBar: false 固定一个合适的尺寸宽度250px，高度320px ​ 完整的便签APP数据 \"plugin-note\": { \"addressBar\": false, \"autoRun\": 2, \"background\": false, \"badge\": 0, \"desc\": \"\", \"icon\": { \"type\": \"fa\", \"bg\": \"orange\", \"content\": \"sticky-note-o\" }, \"openMode\": \"normal\", \"plugin\": true, \"position\": { \"x\": \"4\", \"y\": \"4\", \"left\": false, \"top\": true, \"autoOffset\": false }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": true, \"size\": { \"width\": 250, \"height\": 326 }, \"title\": \"便签\", \"url\": \"./res/apps/note/index.html\", \"customTile\": \"\" } 时钟类似于便签，但是时钟不需要交互操作，可以变得更低调。 我们希望用户根本不会触碰到它，设置background:true开启背景模式，让这个时钟成为一个背景装饰。 完整的时钟APP数据 \"plugin-clock\": { \"addressBar\": true, \"autoRun\": 2, \"background\": true, \"badge\": 0, \"desc\": \"\", \"icon\": { \"type\": \"fa\", \"bg\": \"rgb(238,37,96)\", \"content\": \"clock-o\" }, \"openMode\": \"normal\", \"plugin\": true, \"position\": { \"left\": false, \"top\": false, \"x\": \"0\", \"y\": \"0\" }, \"poweredBy\": \"unknown\", \"resizable\": true, \"single\": true, \"size\": { \"width\": 336, \"height\": 383 }, \"title\": \"创意时钟\", \"url\": \"./res/apps/React Morph Clock/index.html\", \"customTile\": \"\" } 动态壁纸那么动态壁纸的特性是什么？ 覆盖整个屏幕 自动启动 无交互 位于最底层 结合上述两个例子，你是否能写出一个动态壁纸的APP数据？ 位于最底层意味着该APP的启动顺序要足够靠前，它优先启动，后启动的的APP才能正确的覆盖在它上方。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI全局配置","slug":"YLUI全局配置","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:20:55.264Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"全局配置全局配置文件定义于根目录下configs.js文件，它决定了整个系统的基本属性，原则上来说不推荐频繁修改。 其中 lockedApps 和 trustedApps 一定要认真按需填写。如果信任了有害的APP，可能会侵犯用户利益。 属性名 说明 默认值 softwareName 项目名，展示到关于界面 ‘YLUI示例网站’ version 项目版本 ’1.0.0‘ lang 界面语言，设为auto可自动判断 ’zh-cn‘ iconBtnStart 主要图标，取自font-awesome ‘html5’ author 作者签名 ‘null’ contactInformation 作者联系方式 ‘null’ officialWebsite 项目官网 ‘null’ welcome 控制台欢迎信息 ’null‘ copyrightDetail 版权声明 ‘null’ otherStatements 其他信息，展示到关于界面 ’‘ authorization 授权信息 ‘待授权’ serialNumber YLUI序列号 ‘NULL’ changeable 存档数据可变(是否开启数据可视化变更) true dataCenter 是否展示数据管理中心 true localStorageName 浏览器存储字段名，建议保留默认 ’ylui-storage‘ lockedApps 锁定应用列表，被锁定应用不会被覆盖或卸载 [‘yl-system’,’yl-color-picker’,’yl-browser’,’yl-server’] trustedApps 可信应用列表，被信任应用有更高的操作权限 [‘yl-server‘] debug 调试模式，开启后有更多调试信息 true beforeOnloadEnable 离开页面时询问 true WarningPerformanceInIE IE下提示体验不佳 true languages 语言数据，语言数据会根据语言配置，从文件自动加载，如需扩展请模仿默认语言文件添加 {}","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存储数——开始菜单","slug":"YLUI存档数据开始菜单","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:40:21.967Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"开始菜单https://cdn.jsdelivr.net/gh/yuri2peter/ylui@master/documents/assets/3.png 开始菜单包括左部侧边栏和菜单列表两部分，其数据结构示例如下。 \"startMenu\": { \"sidebar\": [ { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-system\", \"title\": \"系统设置\", \"params\": {}, \"hash\": \"\" } ], \"menu\": { \"itemPushed-85\": { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-89\": { \"app\": \"yl-app-home\", \"title\": \"YLUI 官网\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-96\": { \"app\": \"yl-system\", \"title\": \"系统设置\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-111\": { \"title\": \"分组\", \"children\": { \"itemPushed-87\": { \"app\": \"yl-server-import\", \"title\": \"立即同步\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-86\": { \"app\": \"yl-server-login\", \"title\": \"切换用户\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-88\": { \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"params\": {}, \"hash\": \"\" } } } } } app,title,params,hash 属性想必不用多说。 其中，对于每个菜单项，都有唯一的id标识，如\"itemPushed-85\",\"itemPushed-86\"。菜单项可以用children字段表示子菜单，支持无限极分层菜单。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存档数据——应用程序池","slug":"YLUI存档数据应用程序池","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:41:15.365Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"应用程序池（apps）应用程序池是一系列应用（APP）的集合，而APP是YLUI的主要管理对象。 \"apps\": { \"app1\": {...}, \"app2\": {...}, \"app3\": {...}, ... } 其中，app1,app2,app3是APP的id。 可以说是很关键的 一章了。 APP每个APP需要一个永不重复的id（很重要），如果开发者想要自建APP，请确保有一个合理的id分配方案。 每个APP是用json格式描述的，其完整描述形式如下 { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": '', \"icon\": { \"type\": \"fa\", \"content\": \"wpforms\", \"bg\": 'green' }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"autoOffset\": true, \"left\": true, \"top\": true, \"x\": \"x*0.05\", \"y\": \"y*0.05\" }, \"version\":\"1.0.0\", \"poweredBy\": \"\", \"resizable\": true, \"single\": false, \"size\": { \"height\": \"y*0.8-80\", \"width\": \"x*0.8\" }, \"title\": \"\", \"url\": \"\", \"customTile\": \"\", \"urlRandomToken\": true } 字段 类型 描述 addressBar bool 是否显示地址栏 autoRun int 自启动。0表示不自启动，数字越大启动顺序越靠后。 background bool 是否后置模式 badge int 角标 desc string 说明性文字 icon json 图标形式描述 openMode string 打开方式。normal,max,min,outer plugin bool 是否是插件型窗口 position json 窗口位置描述 version string 版本号 powerdBy string 应用版权声明 resizable bool 是否可变窗体尺寸 single bool 是否单例模式（不能多开） size json 描述窗体大小 title string 标题，应用名 url string url地址，推荐使用绝对地址，并以//开头 customTile string 自定义磁贴的url地址，留空则使用默认磁贴样式 urlRandomToken bool 是否为url自动添加随机token（减少浏览器读取页面缓存的概率） title和url字段是必须的 icon支持三种模式 a. \"type\":\"fa\"使用font-awesome字体图标，\"content\"字段填写图标名（如\"star\"，表示星星图标）。fa图标库可于fa官网查看 http://www.fontawesome.com.cn。 b. \"type\":\"img\"使用图片图标，\"content\"字段填写图标的url。 c. \"type\":\"str\"使用文字图标，\"content\"字段填写文字 。在一时找不到合适图标的情况下，算是一种偷懒的办法了。 \"bg\"字段填写图标背景色，符合css3规范即可，如\"red\"。 position 描述窗口位置 autoOffset bool，表示是否启用自动偏移。自动偏移会给窗口位置偏移5px左右，防止重复打开多个窗口的时候完全重叠在一起。 left bool，是否左对齐。false表示右对齐。 top bool，是否顶部对齐。false表示底部对齐。 x int/string，横向位移量，支持尺寸表达式，单位px。 y int/string，纵向位移量，支持尺寸表达式，单位px。 size描述窗口尺寸 width int/string，宽度，支持尺寸表达式，单位px。 height int/string，高度，支持尺寸表达式，单位px。 尺寸表达式 一种很简单的表达式用来计算动态尺寸，可以使用简单的四则运算表达式，其中x代表屏幕宽度，y表示屏幕高度。 以\"x*0.8\"为例，假如屏幕尺寸1000px，那么计算结果为800px。 如果你希望一个宽200px，高100px应用打开后位于屏幕正中央，只需要在position中设置： \"x\": \"(x-200)/2\" \"y\": \"(y-100)/2\" 为什么不设置类似”center”,”topLeft”这种预定义的位置描述呢？因为我认为给出一个表达式解析是最万能的解决方案。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存档数据——桌面图标","slug":"YLUI存档数据桌面图标","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:41:50.201Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"桌面图标桌面图标是最常用的UI表现形式，它是APP的快捷方式。 \"shortcuts\": [ { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-app-home\", \"title\": \"YLUI 官网\", \"params\": {}, \"hash\": \"\" }, { \"title\": \"图标组\", \"children\": [ { \"app\": \"yl-server-login\", \"title\": \"切换用户\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-server-import\", \"title\": \"立即同步\", \"params\": {}, \"hash\": \"\" } ] }, ], 字段 类型 描述 app string APP id title string 标题文字 params json url query 键值对，如{\"a\":\"A\",\"b\":\"B\"} hash string url 锚点 children array 描述一个图标组，内部包含多个图标。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI全局API","slug":"YLUI全局API","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:20:53.561Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"全局APIYL.init(data)data object|null 待加载的数据 初始化 YLUI。如果data不存在，YLUI将尝试用空数据启动。 YL.import(data)data object 待加载的数据 重新加载 YLUI。 YL.export()return object 返回当前数据存档对象。 YL.lang(key)key string 语言字段 返回对应字段的语言数据。语言请参考文件langs/zh-cn.json。 YL.reset()将YLUI转变为空数据状态。 YL.msg(title,content)title string 标题 content string 正文 推送一个消息。 YL.open(appId,options)appId string|object 应用的id或应用数据 options object 覆盖应用数据的键值对 return string 窗口id 打开一个窗口。如果appId为object，表示appId为一个APP的json数据结构，可以临时打开一个窗口而不依赖已有的APP。 YL.aboutUs()打开关于窗口。 YL.uninstall(appId)appId string 应用的id 卸载一个应用。 YL.addApp(appId,data)appId string 应用的id data object 应用的数据 return bool 是否成功 添加一个APP。APP数据格式可以参考6.3应用的文档。 YL.addShortcut(appId)appId string|object 应用的id或桌面图标数据 添加一个桌面图标。如果appId 为string，添加对应APP的图标；如果为object，则以此为图标数据创建桌面图标。 桌面图标的数据格式可以参考6.4桌面图标的文档。 YL.addMenuItem(appId)appId string|object 应用的id或菜单项数据 添加一个菜单项。如果appId 为string，添加对应APP的菜单项；如果为object，则以此为菜单项数据创建菜单项。 菜单项的数据格式可以参考6.6开始菜单的文档。 YL.addSidebarBtn(appId)appId string|object 应用的id或侧边栏图标数据 添加一个侧边栏图标。如果appId 为string，添加对应APP的侧边栏图标；如果为object，则以此为侧边栏图标数据创建侧边栏图标。 侧边栏图标的数据格式可以参考6.6开始菜单的文档。 YL.addTile(appId, n)appId string|object 应用的id或磁贴数据 n int 磁贴组位置，默认为0（第一组） 添加一个磁贴。如果appId 为string，添加对应APP的磁贴；如果为object，则以此为磁贴数据创建磁贴。 磁贴的数据格式可以参考6.5磁贴的文档。 YL.addTileGroup(groupTitle)groupTitle string|null 磁贴组的标题 return int 磁贴组位置 添加磁贴组，返回添加后的位置。 YL.setThemeColor(color)color string 颜色 设置主题色。 YL.setWallpaper(urlImg)urlImg string 壁纸图片的url 设置壁纸。 YL.debug(log)log mixed 打印的内容 在debug模式下打印内容。 YL.onLoad(cb)cb function 函数 YLUI加载前将调用cb。此API可以被多次调用。 YL.onReady(cb)cb function 函数 YL.init()完毕后将调用cb。此API可以被多次调用。 YL.f5()重载网页。 YL.util.isTrustedApp(id)appId string 应用的id return bool 应用是否是被信任的。 YL.util.simpleMsg(msg)msg string 消息内容 弹出一个消息框。 YL.util.simpleConfirm(msg, cb)msg string 消息内容 cb function 回调函数 弹出一个确认框。 YL.util.getID()return int 返回一个不重复的数字（递增）。 YL.util.getRandomColor()return string 返回一个随机颜色。 YL.util.getAppDataTemplate()return object 返回一个APP数据模板。 YL.util.enableFullScreen()进入全屏。 YL.util.disableFullScreen()退出全屏。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存储数——数据概念","slug":"YLUI存档数据概念","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:40:45.464Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"概念定义类似于单机游戏的存档，存档数据记录了当前系统运行状态，并能随时还原为这一状态，便于用户将自己的桌面状态保存或上传到远程服务器上，并能随时同步还原。 另外，如果开发者熟悉存档数据结构，能够通过编写程序批量修改存档数据。 结构存档数据以JSON格式存在，保证了数据传输过程中的可序列化。如果用js对象转化为JSON字符串，请保证这种转化是完全可逆的。 js对象可以被JSON.stringify转化为JSON字符串，但是如果js对象成员中有函数，无限嵌套，带方法的对象等复杂的成员，则它的数据很可能会丢失。合法的存档数据应该由一系列的键名-&gt;键值(字符串、数字)及层级关系组成，是可以无损序列化的。 JSON数据的最外层形式如下，其中，...表示内部内容被省略。 { \"configs\": {...}, \"apps\": {...}, \"shortcuts\": [...], \"tiles\":[...], \"startMenu\": {...} } 键名 意义 configs 运行配置 apps 应用程序池 shortcuts 桌面图标数据 tiles 磁贴数据 startMenu 开始菜单数据 快速上手官方的存档数据basic.json可以渲染出一个简单的、标准的桌面，参考此文件可以基本理解存档数据的结构。 https://cdn.jsdelivr.net/gh/yuri2peter/ylui@master/documents/assets/1.png 附basic.json代码（v1.0.0） { \"configs\": { \"topTaskBar\": false, \"pathRes\": \"./res\", \"sound\": false, \"shortcutsSortAuto\": true, \"wallpaper\": \"./res/img/wallpapers/bg1.jpg\", \"wallpaperBlur\": true, \"wallpaperSlide\": false, \"wallpaperSlideRandom\": true, \"wallpaperSlideItv\": 1, \"wallpaperSlideTime\": 1519442460788, \"wallpaperSlideIndex\": 8, \"openMax\": 9, \"idCounter\": 94, \"themeColor\": \"rgba(2,35,64,1)\", \"autoThemeColor\": true, \"wallpapers\": [ { \"image\": \"./res/img/wallpapers/bg1.jpg\", \"preview\": \"./res/img/wallpapers/bg1_1.jpg\" }, { \"image\": \"./res/img/wallpapers/bg2.jpg\", \"preview\": \"./res/img/wallpapers/bg2_1.jpg\" }, { \"image\": \"./res/img/wallpapers/bg3.jpg\", \"preview\": \"./res/img/wallpapers/bg3_1.jpg\" }, ], \"debug\": false, \"winBlur\": true }, \"apps\": { \"yl-system\": { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"YL-UI 系统设置面板\", \"icon\": { \"type\": \"fa\", \"bg\": \"gray\", \"content\": \"gear\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"x\": \"(x-860)/2\", \"y\": \"y*0.1\", \"left\": true, \"top\": true, \"autoOffset\": false }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": true, \"size\": { \"width\": \"860\", \"height\": \"y*0.8\" }, \"title\": \"系统设置\", \"url\": \"./res/apps/system/index.html\", \"customTile\": \"\" }, \"yl-color-picker\": { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"简单的取色器\", \"icon\": { \"type\": \"fa\", \"bg\": \"#3289c7\", \"content\": \"eyedropper\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"x\": \"(x-207)/2\", \"y\": \"(y-239)/2\", \"left\": true, \"top\": true, \"autoOffset\": false }, \"poweredBy\": \"Yuri2\", \"resizable\": false, \"single\": true, \"size\": { \"width\": \"207\", \"height\": \"239\" }, \"title\": \"取色器\", \"url\": \"./res/apps/colorPicker/colorPicker.html\", \"customTile\": \"\" }, \"yl-browser\": { \"addressBar\": true, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"浏览器\", \"icon\": { \"type\": \"fa\", \"content\": \"internet-explorer\", \"bg\": \"#3a55c2\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"autoOffset\": true, \"left\": true, \"top\": true, \"x\": \"x*0.1\", \"y\": \"y*0.1\" }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": false, \"size\": { \"height\": \"y*0.8\", \"width\": \"x*0.8\" }, \"title\": \"浏览器\", \"url\": \"./res/apps/browser/index.html\", \"customTile\": \"\" }, \"yl-server-import\": { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"\", \"icon\": { \"type\": \"fa\", \"content\": \"cloud\", \"bg\": \"#4da85b\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"autoOffset\": true, \"left\": true, \"top\": true, \"x\": \"x*0.1\", \"y\": \"y*0.1\" }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": true, \"size\": { \"height\": \"y*0.8\", \"width\": \"x*0.8\" }, \"title\": \"YLUI云服务-同步\", \"url\": \"https://ylui.yuri2.cn/index.php/home/main/import\", \"customTile\": \"\" }, \"yl-server-login\": { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"\", \"icon\": { \"type\": \"fa\", \"content\": \"cloud\", \"bg\": \"#4da85b\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"autoOffset\": true, \"left\": true, \"top\": true, \"x\": \"x*0.1\", \"y\": \"y*0.1\" }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": true, \"size\": { \"height\": \"y*0.8\", \"width\": \"x*0.8\" }, \"title\": \"YLUI云服务-登录\", \"url\": \"https://ylui.yuri2.cn/index.php/home/main/login\", \"customTile\": \"\" }, \"yl-app-store\": { \"addressBar\": false, \"autoRun\": 0, \"background\": false, \"badge\": 0, \"desc\": \"\", \"icon\": { \"type\": \"fa\", \"content\": \"shopping-bag\", \"bg\": \"#b36aba\" }, \"openMode\": \"normal\", \"plugin\": false, \"position\": { \"autoOffset\": true, \"left\": true, \"top\": true, \"x\": \"x*0.1\", \"y\": \"y*0.1\" }, \"poweredBy\": \"Yuri2\", \"resizable\": true, \"single\": true, \"size\": { \"height\": \"y*0.8\", \"width\": \"x*0.8\" }, \"title\": \"应用商店\", \"url\": \"./res/apps/app-store/index.html\", \"customTile\": \"\" } }, \"shortcuts\": [ { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-server-login\", \"title\": \"切换用户\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-server-import\", \"title\": \"立即同步\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"params\": {}, \"hash\": \"\" } ], \"tiles\": [ { \"title\": \"系统\", \"data\": [ { \"x\": 0, \"y\": 0, \"w\": 6, \"h\": 3, \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"i\": \"91\", \"params\": {}, \"hash\": \"\" } ] } ], \"startMenu\": { \"sidebar\": [ { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, { \"app\": \"yl-system\", \"title\": \"系统设置\" } ], \"menu\": { \"itemPushed-85\": { \"app\": \"yl-browser\", \"title\": \"浏览器\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-86\": { \"app\": \"yl-server-login\", \"title\": \"切换用户\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-87\": { \"app\": \"yl-server-import\", \"title\": \"立即同步\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-88\": { \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"params\": {}, \"hash\": \"\" }, \"itemPushed-89\": { \"app\": \"yl-system\", \"title\": \"系统设置\", \"params\": {}, \"hash\": \"\" } } } }","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存储数——据磁贴","slug":"YLUI存档数据磁贴","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:40:58.724Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"磁贴磁贴是一种视觉冲击力很强的UI形式，但是其数据结构比较复杂，推荐用YLUI的可视化工具编辑。 \"tiles\": [ { \"title\": \"系统\", \"data\": [ { \"x\": 0, \"y\": 0, \"w\": 6, \"h\": 3, \"app\": \"yl-app-store\", \"title\": \"应用商店\", \"i\": \"91\", \"params\": {}, \"hash\": \"\" }, { \"x\": 0, \"y\": 3, \"w\": 2, \"h\": 2, \"app\": \"yl-system\", \"title\": \"系统设置\", \"i\": \"110\", \"params\": {}, \"hash\": \"\" } ] }, { \"title\": \"工具\", \"data\": [ { \"x\": 0, \"y\": 0, \"w\": 2, \"h\": 2, \"app\": \"yl-calculator\", \"title\": \"计算器\", \"i\": \"109\", \"params\": {}, \"hash\": \"\" } ] } ] 磁贴本身由 x,y,w,h,app,title,i,params,hash描述 字段 类型 描述 x int 左偏移 y int 上偏移 w int 宽度 h int 高度 app string APP id title string 标题 i int key，对所有磁贴唯一 params json 类似于桌面图标的params定义 hash string 类似于桌面图标的hash定义 而磁贴是按组归类的，如上文的“工具”，“系统”。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存储数——数据配置","slug":"YLUI存档数据配置","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:41:28.189Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"配置（configs）配置定义了UI的一些行为，它们大部分是视觉相关的。 属性名 类型 说明 topTaskBar bool 任务栏是否置顶 sound bool 是否开启声音（声音尚未实现） wallpaper string 当前壁纸url wallpaperBlur bool 壁纸是否模糊处理 wallpaperSlide… - 幻灯片相关记录，由系统自动处理 openMax int 最多可以打开几个窗口 idCounter int 内部计数器，由系统自动处理 themeColor string 主题色 autoThemeColor bool 是否从壁纸获取主题色（跨域壁纸无效） wallpapers array 壁纸相册。数据机构: [{\"image\":\"壁纸url\",\"preview\":\"壁纸预览url\"},{...},{...}]，其中preview字段可以省略 debug bool 是否开启debug模式","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI存储数据——窗体数据。","slug":"YLUI存档数据窗体数据","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:42:04.784Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"窗体数据首先，窗体数据是存在于运行时（runtime）的，它不需要保存到存档数据中，之所以把它放于此处，是因为它与APP的数据结构有很多相似之处（继承）。 窗体和APP的关系正如windows进程与exe文件之间的关系。窗体依赖于APP存在，是它的运行状态。 窗体数据的可操作字段如下 字段 意义 例子 addressBar 显示地址栏 true background 后置模式 true badge 角标 0 icon 图标 { bg: “rgb(118,168,92)”,content: “wpforms”,type: “fa” } min 最小化 true plugin 插件模式 true resizable 可变尺寸 true title 标题 ‘win title’ style 尺寸、位置、浮动层级 {index: 12,position: Object,size: Object} 在阅读文档7.3窗体API后，你可以通过getWinData和setWinData方法动态地调整窗体的参数。 窗体API中还有一些方法是间接调整窗体参数的，例如hide(最小化)实际上是改变了窗体的min属性。推荐使用间接的方法而不是直接调用setWinData来修改窗体数据。 你可以随时在主窗口控制台输入YL.vue.wins来查看所有窗体的数据，这对于debug是很有帮助的。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI目录结构","slug":"YLUI目录结构","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:37:47.092Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"目录结构---- langs/ //语言文件目录 |- en.json //英语 |- zh-cn.json //简体中文 |- zh-tw.json //繁体中文 ---- res/ //资源文件目录 |- apps/ //系统APP目录 |- componenets/ //web组件 |- css/ //web资源 |- img/ //web资源 |- js/ //web资源 |- yl.child.js //APP功能支持 |- yl.js //全局API支持 ---- saves/ //存档存放目录 |- basic.json //基本存档 ---- configs.js //配置文件 ---- index.html //入口文件 ---- onLoad.js //载入行为文件","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI安装","slug":"YLUI安装","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:37:13.088Z","comments":true,"path":"posts/48201.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48201.html","excerpt":"","text":"如何获取请通过官方途径获取软件及使用授权，否则按侵权处理。官网：ylui.yuri2.cn 部署方案1和方案2任选其一。 1. http-server（仅用于开发预览）需要已安装Node.js+npm环境。 在项目目录输入命令： npm ci npm start 访问网址，默认：http://localhost:5000 2. 借助web服务（部署至生产环境）将代码部署至您的web服务目录，如nginx、apache服务器的www目录下，访问对应网址（如http://127.0.0.1/ylui/）。 能将web服务打包为独立应用的平台，如electron，Hbuilder云打包，也能正常工作。切忌直接在文件管理器打开页面，将不能正常工作。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI前言","slug":"YLUI前言","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:20:56.528Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"前言YLUI是什么YLUI是一款纯前端框架，是对WEB桌面UI的一个大胆尝试。 它凝聚了作者近一年的心血，作为WIN10UI开源项目的升级版，承载了作者对WEB桌面设计风格的追求。 在前端技术日新月异的背景下，YLUI力图提供一种新的web应用组织形式。 如果你正在寻找一个漂亮的UI组件库，你应该选择bootstrap,layui,element-ui等项目。而你想要让这些应用建立联系，构成组织，并提供一个统一的门户，那么YLUI将会是一个不错的选择。 YLUI提供的是应用组织框架，而不是应用开发工具，更不要因为它长得像浏览器就把它当浏览器使用，毕竟我们已经有太多浏览器可供选择了，不是吗？ 特色 纯前端，高兼容性 延续windows界面操作逻辑，普通用户上手难度较低 简单直观的多APP管理，像桌面程序一样呈现你的web应用 统一的APP交互模型，保持各APP之间的独立性，降低子系统耦合度，支持跨域的APP通信 完美复刻桌面操作系统的菜单、磁贴、通知元素，良好的视觉表现力 兼容PC、平板电脑、手机等各大主流分辨率 可视化开发，降低开发者的学习难度 基于VUE.JS开发，支持数据序列化（可配置化），方便与后台做数据存取接口 推荐使用场景 个人云桌面 企业办公平台 云盘类应用 中大型管理信息系统 导航门户网站 H5打包应用 web开发工程师个人工具集","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI窗体通信","slug":"YLUI窗体通信","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:42:40.516Z","comments":true,"path":"posts/60349.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/60349.html","excerpt":"","text":"窗体通信YLApp.onReady(cb)cb fucntion 回调函数 完成基本通信对接后触发的回调。任何涉及到窗体通信和窗体主动调用的API都应该放在cb处。 YLApp.idYLApp 属性，string类型， 只读； 当前窗体的id，由YLUI随机分配，在YLApp.onReady有效时被初始化。 YLApp.onEvent(cb)cb fucntion 回调函数 接受到YLUI事件时触发，cb为事件处理函数。 YLApp.onEvent(function (msg) { console.log(msg) }); 示例中，msg是一个对象，主要包含了以下几个属性 属性名 类型 描述 event string 事件名 data mixed 事件数据，一般是js对象 from string 事件发送来源的id sameOrigin bool 发送方与本窗体是否同源（同源有更高的可信度） target array 事件传播目标窗体的id集合 YLApp.emit(event,data,target)event string 事件名 data mixed 数据 target string|array|true 广播对象 发送一个事件。其中。如果target是string类型，表示发送给对应id的窗口；如果target是数组，表示发送给数组中所有id对应的窗体；如果target为true，表示发送给所有窗体。 特别的，YLUI主体的id为0。 设计思路借助于onEvent事件监听和emit事件发送，窗体和其他窗体、窗体和YLUI主体都直接可以实现实时通讯，且这种通讯是跨域的、可定向的。这就意味着你可以开发出工具类窗口（如系统自带的APP取色器），和父子联动式窗口。 以一个经典业务场景为例：一些产品信息需要被编辑，用户首先进入的是产品列表，然后点击其中的某一项产品去编辑信息。 在一般的单页布局界面中，这种操作需要用户（或系统自动的）在列表页、详情页、编辑页之间跳转。 而多选项卡布局就好得多了，列表页只需要打开一次，通过新建选项卡来编辑各个产品信息。 对于YLUI，我们有更优雅的解决方案。以列表页为入口，通过YLApp.open打开产品编辑页，新建出一个子窗口。 打开编辑页时，我们可以通过url传递产品id，也可以通过YLApp的data域来传递（推荐）。 有关data域请参考7.1和7.3 。 在编辑页提交信息后，可以通过事件信息发送“已提交”的信息给列表页（让列表页更新视图），然后窗体API关闭自身。 像极了windows的操作模式，不是吗？","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI更新日志","slug":"YLUI更新日志","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:39:57.747Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"开发记录TODO 升级至FA5 模拟浏览器前进后退有问题 nwjs版 APP STORE 声音 IOS iframe的问题 -webkit-overflow-scrolling:touch skin字段 文档 APP STORE 合并小文件 手机点击抽屉闪烁 毛玻璃 版本更新2.1.20 删除弃用的APP“yl-server”。 2.1.10 静态预览由serve改为http-server，并且锁死npm包版本号。新版本的serve出现子页面无法打开的问题，感谢QQ 32998**** Mr张 反馈此问题。 2.1.9 修正2.1.8磁贴hover在chrome浏览器下的样式bug 2.1.8 yl.app.js 添加更多常量定义，方便代码提示 修正一些文档和代码的单词拼写错误 添加菜单和磁贴开启动画 删除默认的启动消息 2.1.7 支持根据版本号自动更新缓存 2.1.6 APP封面将会在页面加载完毕（或10秒后）才消失，类似于手机APP的加载逻辑；添加loading动画 2.1.5 支持ctrl+f5重载并刷新缓存（f5依然是刷新桌面） 替换最大化、最小化、还原、关闭、消息的图标（修复360浏览器图标显示不正常的bug） 压缩按钮间距 底部时间样式优化，鼠标悬浮显示完整时间 2.1.4 修正子菜单图标样式bug 修正背景图片宽高比计算算法 添加默认图床app 2.1.3 可选url参数，使用本地缓存初始化桌面。如http://demo.ylui.yuri2.cn/?load=ylui-storage onLoad文件更好的注释，以及针对加载缓存的更新 修正子菜单没有缩进的bug 2.1.2 过滤其他窗体事件类型 新增子窗体API simpleMsg, getVersion 更多基础设置注释 使用经典壁纸 桌面新增代码库图标 增加FA应用，配置图标时提供快捷方式 2.1.1 新增子窗体的hide,show方法，详见文档7.3窗体API 补全文档6.7窗体数据 优化一些文档描述 2.1.0 开始菜单改为非全屏并且可拉伸 开始菜单、任务栏、操作中心、抽屉改为非半透明背景 移除了无效的配置（内部优化） configs.highPerformance boxOpen lowEffect 修复日历插件不可点击的bug 优化信息框样式 修改了默认存档（主要调整了磁贴位置） 日志 180927 2.1.0 微调文档 180730 2.0.6 修正文档和文件中resizeable(resizable)的笔误 180801 2.0.6 修正一处笔误（壁纸切换频率6分钟实际为1分钟）； 180517 2.0.5 代码缩进改为2；更多公共事件；文档存放于代码库； 180517 2.0.4 修复抽屉打开闪烁；修复抽屉打开时底部任务栏打开无效；更好的壁纸比例控制 180517 2.0.3 减少postMessage的频率，优化导航栏样式 180517 2.0.2 修复图标组不能解散的bug；修改英文菜单溢出的bug（litins） 180514 删除demo APP；添加社区版的提示信息； 180430 细节优化，冗余清理;优化child的api；关于界面，分离YLUI的介绍； 180429 更正拼写错误 resizeable =&gt; resizable 180416 有缓存的情况下，省去启动画面；删去了jsonp请求，所有服务转入yl-server(未完成) 180412 优化app管理页面；新增APP属性version以及对应app函数getAppVersion 180411 新增dataCenter配置（是否展示数据管理）；添加数据格式不正确提示（ｅ啲缌唸提出） 180409 修复了_baseData返回不正确的bug;添加了信任APP eval的方法。 180406 修复了菜单打不开的bug;优化右键菜单css 180403 添加了一个日历插件；修复了卸载时依赖清除有残余的bug 180402 css微调，更多阴影； 180330 微调窗体阴影，取消边框； 180329 微调任务栏css;添加app动态壁纸;添加应用商店app安装模板;窗体位置以iframe为准;basic存档添加了一个纯黑壁纸；默认onload支持从load参数读取存档； 180328 窗体右键菜单显示尺寸位置;自动打开的应用没有source（关于“记住位置”功能）;打开菜单时隐藏桌面图标; 180327 引入了4个纤细的图标 180322 YL.init自动对数据格式化，参数省略时尝试读取ls（ylui-storage）; 180321 修复了IIS下xhr请求400的错误;修复了端口号不为80时丢失端口的bug; 移除错误回报机制； 180320 前缀统一为YL;修复了改前缀引起的一些bug； 180319 APP STORE雏形 180316 移除system的app store ，转为独立页面处理（yl-app-store，未完成） 180314 优化消息栏清空逻辑；不默认读取云存档；去除内嵌式应用商店框架；移除hbuilder工程代码（hbuilder打包需要mui配合） 180313 配合ylui.yuri2.cn完成后端demo; 180312 移除localStorage和loadsaveurl，统一由子页实现。 180309 安装接口加入依赖检测;磁贴也加入了角标;锁定应用将不可被卸载、覆盖修改;简化 sideBar btns;为第三方接口添加完成提示； 180308 删除信任体系；删除app回调体系;slider更正为sidebar;修复了卸载时侧边栏依赖bug；为第三方网站提供安装/卸载app的功能，更方便提供服务。为第三方网站提供setAppBadge设置徽标。 180307 添加官方APP浏览器;优化css；自动语言支持（默认英文，识别中文请求）; 180306 多语言支持完成;修正了jsonp的bug；防止图标重复打开（时间锁） 180305 部分国际化;手机自动低特效（可配置）;微调小图标css;完成子窗口安全重构，添加了同源检测和身份检测,发送源字段统一为from,添加close函数； 180302 部分完成子窗口安全重构;窗口可拖动;窗口的定位方式可选左对齐和顶部对齐了 180228 支持触屏拖动图标;优化右键菜单的css； 180227 一些设置转移到configs.js;lockApps机制;在线验证记录机制的雏形； 180226 winID更随机；全屏应用隐藏还原按钮；更多常量定义；新增官网ylui.yuri2.cn 180224 常量定义的软件名;在YL.static下添加了一些常量;优化css;大改图标逻辑代码，改为线性排列，更好的拖拽和排序效果 180223 添加了一个新的时钟插件； 180214 修复了一些浏览器卡在loading界面的bug；body背景设置为黑色，用于更顺眼的过渡；微调css;优化子窗口支持js 180211 修复了卸载产生的依赖性bug；新增很多菜单图标；打开方式新增“外部窗口”； 180209 窗口打开封面;优化快捷设置表单行为;磁贴支持按分组添加;子窗口token由可选变为默认；去除了刷新的图片动画；新建app的url过滤token； 180206 优化了一些css;修复了磁贴轻微拖拽误打开的bug;磁贴iframe现在带randomToken来保证最新；yl-system页面由hash传参改为post data传参 180205 磁贴可设置url自定义展示；修复磁贴点击和拖动事件的冲突；磁贴的也支持发送到、打开等功能了；手机浏览壁纸样式修正防止失真； 180201 微调drawer样式;win.childSupport表示子页是否加载了高级支持，并在地址栏做对应的微调; 180131 小菜单支持二级，优化右键菜单;磁贴列数固定为6; 180126 更好的响应式;slider.btns由对象改为数组 180125 可分组的磁贴，更好的响应式支持,使用了弹性盒使布局更紧凑;弹框样式优化； 180124 图标样式微调（减肥）;更丰富的右键菜单；可添加的侧边栏；菜单项可以剪切粘贴了;移动端菜单和磁贴滑动切换； 180122 可选高性能模式（禁用一些模糊和半透明） 180122 优化背景图片渲染效率；优化了取色器的数据交互，自动回传颜色值； 180118 手机端时，应用最大化,插件隐藏到底部;修复窗口通信bug； 180117 修改了系统设置的响应式; 180116 图标样式微调,做了一点点响应式; 180115 磁贴的基本样式；IE下，提高不透明度； 180112 快速添加网址到新建应用;完善菜单项drawer的图标样式;分组的重命名 180111 桌面图标和菜单可以相互复制子项，都可以高级配置了;窗口交互和通信模块完成；新开的窗口稳定浮于上面; 180109 部分窗口交互代码;vue.min.js进行了格式化，修复了IE的未知原因的bug;子页使用child.js后可以F5刷新自身；更好的子页刷新动画;app运行脚本添加了用户信任的限制； 180108 winSetActive设置了200ms的惰性检测;可视化添加app;应用管理的同步；添加resizable属性；微调窗口样式；添加调色板app； 180105 应用管理的前端; 180104 移除win的window属性（用不上）;带参数地打开窗口;根据app的启动源，可记录位置和大小;新增窗口是否可resize;layer皮肤;更多动画;beforeOpen..等函数添加了第二个形参win;更好的urlBuilder;winOpend改为监听属性 180103 美化了loading界面，添加更多的预加载； 180102 为默认壁纸添加了缩略图;管理中心打开时也模糊桌面;小便签工具;优化了过渡动画；支持图片图标； 171229 子页刷新时通过产生一个随机token来禁用缓存;减少父页对子页postMessage的自由度（eval改select）,解决跨域页面的安全隐患 171228 针对IE修复了Vue一些冲突的代码，修复了一些css，并对不能高斯模糊这一点表强烈谴责； 171225 清空消息加了动画;实时保存到localStorage；修正msg的预览html不解析的bug；简单的读取get的autoSave值来决定存档位置；抽屉的z-index设置为99999，解决了动态计算带来的卡顿；优化了一些css 171225 圣诞节！初步完成数据管理，已实现导入导出json文件，保存、读取localStorage； 171222 完成序列化和导入导出功能，数据格式统一为json；删除了一些冗余代码；重构初始化代码，添加函数onLoad和onReady对应资源文件加载完毕和实例化完毕后触发。 171220 添加YL.ready()函数，在init前调用；自启动的实现和管理；设置页的图标也使用组件了，需要注意模板统一； 171214 多级菜单组件完成；添加全屏的API； 171213 壁纸可简单添加/删除；磁贴列数可自定义（但是保存并刷新生效）；图标组件化；菜单组件化； 171211 小游戏“太空防御者”的编写 171208 引入element-ui，完善主题色设置；单例会激活已打开的窗口；完成壁纸设置功能； 171207 优化子窗口css，开始菜单全屏打开并隐藏普通窗口 171206 开始菜单全屏化；磁贴自适应尺寸；背景模糊效果；菜单关闭逻辑优化 171205 可以将插件置底，作为背景，不可交互；统一了窗体右键菜单；优化窗体样式 171204 任务栏右键置顶或置底 171123 父子页可以通过postMessage的API通信（yl.app.js）;添加窗体地址栏;开始菜单右键窗体添加“窗体置中”；子窗口点击置顶 171120 为菜单、磁贴、消息中心添加了滚动条插件;任务栏可置顶；标题文字省略号；loading界面 171117 可以从应用管理往桌面加图标了;为了统一，固定了菜单宽度，暂时禁用了横向缩放；图标右键添加磁贴； 171116 插件可以记住位置了；抽屉图标也有对应的右键菜单；双击窗口标题最大化；引用组件vue-grid-layout用于高级磁贴；优化了组件加载（尤其是layer的特殊加载方式） 171020 窗口实例不再依赖app引用，可以临时创建一个窗体；app管理雏形 171023 右下角消息提示改为框式 踩坑记录 IE11 需要受信任才能使用localstorage?安全设置的问题 IE11 blur的方法？答：只能对图片模糊，鸡肋 IE11 z-index不按常理，在父级加入样式z-index:0 IE11 鼠标拖动触发的事件结构不太一样(vue) IE11 不支持filter:blur (脑残？？) IE11 不支持link prefetch 的onload回调 IE11 iframe的src有hash（锚点）的情况下，document.activeElement居然是错误（喵喵喵？），任何试图读取它的代码都会导致致命错误；解决方案：提前element.focus() IE11 vue.min.js莫名其妙的报错，格式化后修复；推测为js编译器辣鸡 FUCK IE Chrome字体必须是100%（默认） url尽量使用全路径（带协议,带index.html） 图标改为数组不是个好主意，需要唯一标识方便增删操作 谷歌浏览器最新版样式比起旧版有细微差别，另外在磁贴中，height 100% 的 iframe发生溢出，父容器高度设为99%解决，原因未知 遍历数组条件删除元素可以使用倒序遍历来避免splice出错的问题","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI说明","slug":"YLUI说明","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:34:22.877Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"YLUI YLUI是一款纯前端框架，是对WEB桌面UI的一个大胆尝试。 它凝聚了作者近一年的心血，作为WIN10UI开源项目的升级版，承载了作者对WEB桌面设计风格的追求。 在前端技术日新月异的背景下，YLUI力图提供一种新的web应用组织形式。 如果你正在寻找一个漂亮的UI组件库，你应该选择bootstrap,layui,element-ui等项目。而你想要让这些应用建立联系，构成组织，并提供一个统一的门户，那么YLUI将会是一个不错的选择。 YLUI提供的是应用组织框架，而不是应用开发工具，更不要因为它长得像浏览器就把它当浏览器使用，毕竟我们已经有太多浏览器可供选择了，不是吗？ 注意，这不是一个免费软件，请仔细阅读版权声明信息Lisense.txt 快速开始http-server预览（推荐）需要已安装Node.js+npm环境。 在项目目录输入命令： npm ci npm start 访问网址，默认：http://localhost:5000 借助web服务环境将代码部署至您的web服务目录，如nginx、apache服务器的www目录下，访问对应网址（如http://127.0.0.1/ylui/）。 更多使用说明，请参阅本地文档/documents或在线文档。 特色 纯前端实现，高兼容性 延续windows界面操作逻辑，普通用户上手难度较低 简单直观的多APP管理，像桌面程序一样呈现你的web应用 统一的APP交互模型，保持各APP之间的独立性，降低子系统耦合度，支持跨域的APP通信 完美复刻桌面操作系统的菜单、磁贴、通知元素，良好的视觉表现力 兼容PC、平板电脑、手机等各大主流分辨率 可视化开发，降低开发者的学习难度 基于VUE.JS开发，支持数据序列化（可配置化），方便与后台做数据存取接口 详尽的开发文档 推荐使用场景 个人云桌面 企业办公平台 云盘类应用 中大型管理信息系统 导航门户网站 H5打包应用 web开发工程师个人工具集 当前版本2.1.20 相关链接YLUI官网 | GITHUB | 码外社区 | 官方交流群","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI运行流程","slug":"YLUI运行流程","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:20:50.804Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"运行流程最简模型 接收到web请求，引入yl.js主文件，建立基本架构 引入onLoad.js文件，注册onload事件响应函数 读取basic存档数据，并以此发起系统初始化 系统读取所需资源，完成初始化，渲染桌面 响应用户操作 高级应用最简模型往往不能满足我们的需求。定制化改动推荐实现于YL.onLoad函数（位于onLoad.js）。 例如，我们希望存档数据来源于网络，而不是固定值，则可以用以下代码实现 YL.onLoad(function () { var getDataFromServer=function(){ //由自己实现，从远程获取存档数据，如ajax、jsonp } var data=getDataFromServer(); YL.init(data); console.log('正在加载数据'); } 在之后的文档中我们将学习存档数据的结构，它是整个框架的核心。 又或者我们希望用户在加载完桌面后，通过登录账号，自己选择存档数据，则需要相关API的配合。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"YLUI窗体API","slug":"YLUI窗体API","date":"2022-05-31T04:18:00.000Z","updated":"2022-05-31T05:42:23.800Z","comments":true,"path":"posts/48198.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/48198.html","excerpt":"","text":"窗体API窗体API指窗体在运行过程中可以使用的API，得益于YLUI精巧的设计，跨域的窗体也能实现一些强大的功能。 对于同域的窗体，可以使用parent.window来获取父窗体（YLUI主体）的所有全局对象，自然也就可以为所欲为。但是我们依然推荐开发者使用YLUI的窗体API模式，来获取更安全、更低耦合的开发体验。 开始首先要使用 窗体API ，我们需要在窗体页面引入js文件：/res/yl.app.js，你可以将这个文件放置在其他位置，只要能正确加载到即可。 没错，对于最基本的使用，只需要加载yl.app.js文件，你甚至不需要写其他代码。 功能成功接入窗体API 后，窗体将获得以下特性 支持在YLUI的地址栏中前进后退 支持F5刷新窗体而不是整个页面 直接获取同域的，其他子窗体的window对象 检测窗体是否运行于YLUI框架下，如果是，触发回调 窗体通信（高级） YLApp.id每个窗体被打开，YLUI都会为它分配一个id。子窗口通过YLApp.id可以获取。 如果获取后为空，可能是当前APP不是运行在YLUI下，或尚未初始化。 YLApp.datadata是这个窗体在被创造时赋予的数据，常被用于窗体通信。 例如，通过这个窗体a新建一个窗体b，可以为b的data赋值parent:a的id来标记创建者。 YLApp.open(url)url string 打开新窗体的url地址 立即在YLUI中打开一个新窗口。此处参数只有一个url，简单而常用的一个API。 可以替代传统的a标签打开新窗口。 YLApp.onEvent(cb)cb function 回调函数 接受到YLUI事件时触发，cb为事件处理函数（高级）。 YLUI主体会广播一些公共事件，它们分别为 dataChanged 存档数据已被用户变更（监听此事件，上传用户的最新存档数据至你的数据库） open 某窗体被打开 close 某窗体被关闭 desktopMouseMove 桌面鼠标移动 desktopMouseDown 桌面鼠标按下 desktopMouseUp 桌面鼠标抬起 desktopClick 桌面鼠标点击 resize 主窗体尺寸改变 未来会加入更多公共事件 ###YLApp.getWinObject(id) id string 目标窗体id return window object 获取指定窗体的window对象，仅在同域有效。 YLApp.onEvent(cb)cb function 回调函数 接受到YLUI事件时触发，cb为事件处理函数（高级）。 YLApp.emit(event,data,target)event string 事件名 data mixed 数据 target string|array|true 广播对象 发送一个事件。其中。如果target是string类型，表示发送给对应id的窗口；如果target是数组，表示发送给数组中所有id对应的窗体；如果target为true，表示发送给所有窗体。 特别的，YLUI主体的id为0。 YLApp.eval(method,data, cb)method string 方法名 data mixed 数据 cb function 回调函数 主动向YLUI发布指令或请求数据，完成后触发回调，请求结果会传递到回调函数的第一个参数上。 YLUI提供了很多方法可供窗体使用，它们统一使用YLApp.eval的形式。 参数为id的方法，如果id为空，则默认是当前窗体的id method data return 描述 getID int 返回YLUI的一个id流水号 getVersion string 返回YLUI的当前版本 historyBack string id 指定id窗体后退 historyBackAvailable string id bool 指定id窗体是否可以后退 historyForward string id 指定id窗体前进 historyForwardAvailable string id bool 指定id窗体是否可以前进 refresh string id 刷新指定id窗体 setWinData object data 设置当前窗体的数据 getWinData object 获取当前窗体的数据 setWallpaper string urlImg 设置壁纸为urlImg图片 setThemeColor string color 设置主题色 getConfigs object 获取配置 getRuntime object 获取运行时数据 open object|array data string 打开窗体，返回窗体id。具体调用方式参看7.1全局API YL.open，其中，data为array对应了YL.open两个参数的用法 close string id 关闭指定id的窗体，如果未指定id，关闭本窗体 minimize string id 最小化指定id的窗体 maximize string id 最大化指定id的窗体 hide string id 隐藏指定id的窗体 show string id 显示指定id的窗体 restore string id 还原指定id的窗体 msg array data 推送消息。data[0]为标题，data[1]为正文 simpleMsg string data 发送简单的文本提示信息 setAppBadge array|string|int data bool 设置APP的角标值；如果data为数组，data[0]为角标值，data[1]为APP id；如果data为数字或字符串，设置窗口所属APP的角标为data；返回操作是否成功 getAppVersion string id string 返回指定id窗体或当前窗体所属APP的版本号 uninstall string|array data 卸载应用。data为string卸载指定id的应用，data为array卸载多个应用 import object data 【需要受信任APP权限】导入数据，重载YLUI export object 【需要受信任APP权限】导出YLUI存档数据 eval string data 【需要受信任APP权限】在YLUI主体执行eval setup object data 安装。见下文 setupsetup是比较复杂而强大的指令，可以为YLUI动态添加APP和快捷方式。利用它你可以很快打造出一个YLUI应用商店。 data 的数据结构如下。其中，每一项不是必须存在的（比如只想添加图标不想添加磁贴，则可以省去tiles属性）。 { apps:{...}, shortcuts:[...], sidebar:[...], tiles:[...], menu:{...}, } apps 需要传入多个新增/修改app的数据结构，形如{my_app1_id:{my app1 data ...},my_app2_id:{my app2 data ...}}。 APP的数据格式可以参阅6.3应用程序池。 shortcuts 需要新增的多个桌面图标数据，形如[{data1 ...},'my_app2_id']，相当于调用了YL.addShortcut函数。 sidebar 需要新增的多个侧边栏按钮的数据，形如[{data1 ...},'my_app2_id']，相当于调用了YL.addSidebarBtn函数。 tiles 需要新增的多个磁贴的数据，形如[{data1 ...},'my_app2_id']，相当于调用了YL.addTile函数。 menu 需要新增的多个菜单项的数据，形如{item1_id:{item1_data ...},item2_id:{item2_data ...}}。 注意菜单项的id不能与其他项重复。菜单项的数据格式可以参阅6.6开始菜单。","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"}],"author":"KINGWDY"},{"title":"在hexo插入ppt的测试文档","slug":"在hexo插入ppt的测试文档","date":"2022-05-30T05:27:44.000Z","updated":"2022-05-30T05:41:19.207Z","comments":true,"path":"posts/30884.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/30884.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hexo（sakura）设置私密文章","slug":"Hexo（sakura）设置私密文章","date":"2022-05-26T02:02:34.000Z","updated":"2022-05-29T05:29:48.704Z","comments":true,"path":"posts/64683.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/64683.html","excerpt":"","text":"一、前言博客文章置顶是基于Next主题的优化：hexo博客优化之文章置顶+置顶标签实践证明：直接按照轮子造车是开不了滴关键因素：在于sakura版本中，主题作者在themes\\sakura\\layout_partial\\ archive.ejs 和 category-archive.ejs 中设置了：按照日期的排序法，不同主题的Hexo需要针对性设置哦！ 文章加密安装插件 npm install hexo-blog-encrypt --save 主配置文件MyWeb_config.yml文末添加： # 文章加密 encrypt: enable: true default_abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。 default_message: 输入密码，查看文章。 encrypt: enable: true default_abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。 default_message: 输入密码，查看文章。 启用博文加密。3-21修改:去掉default_ encrypt: enable: true abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。 message: 输入密码，查看文章。 文章Front-matter中加上password: 123456即可： --- title: Hello World abbrlink: 3eeb password: 123456 --- 效果如下： 自定义提示语： --- title: Hello World abbrlink: 3eeb password: 123456 abstract: 密码：123456 message: 看不到吧，hhhh，不告诉你密码是123456 --- 其中： password: 是该博客加密使用的密码abstract: 是该博客的摘要，会显示在博客的列表页message: 这个是博客查看时，密码输入框上面的描述性文字效果：（此页面是不支持复制功能的o！） 如果你开启了 字数统计功能 的话，那么本文的统计也会失效。加密文章，显示了评论，是不是很奇怪？？需要额外隐藏浏览数、评论、作者信息等 在任何需要加密的地方加上一句： &lt;% if (post.encrypt == true) { %&gt;style=\"display:none\" &lt;% } %&gt; 例如: ps.需要时加上password，提示语message，abstract摘要，后两者不能设置为空哦。","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"npm","slug":"npm","permalink":"https://kingwdy.avosapps.us/tags/npm/"},{"name":"博客优化","slug":"博客优化","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"},{"name":"文章加密","slug":"文章加密","permalink":"https://kingwdy.avosapps.us/tags/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"}],"author":"KINGWDY"},{"title":"关于hexo博客的note标签美化","slug":"关于hexo博客的note标签美化","date":"2022-05-25T12:29:00.000Z","updated":"2022-05-25T23:01:06.539Z","comments":true,"path":"posts/4901.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/4901.html","excerpt":"","text":"前言：为了美化hexo博客文章，所以加入note标签并加以美化 引入FontAwesome v4.7.0 版本的 CSS 文件&lt;link type='text/css' rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css\" media='all'/&gt; 上面的代码添加至_post.ejs 接着添加一段自定义css代码，复制即可 /* note 公共样式 */ .note { position: relative; padding: 15px; margin-top: 10px; margin-bottom: 10px; border: initial; border-left: 3px solid #eee; background-color: #f9f9f9; border-radius: 3px; font-size: var(--content-font-size); } .note:not(.no-icon):before { position: absolute; font-family: FontAwesome; font-size: larger; top: 11px; left: 15px; } .note:not(.no-icon) { padding-left: 45px; } .note.info { background-color: #eef7fa; border-left-color: #428bca; } .note.info:not(.no-icon):before { content: \"\\f05a\"; color: #428bca; } .note.warning { background-color: #fdf8ea; border-left-color: #f0ad4e; } .note.warning:not(.no-icon):before { content: \"\\f06a\"; color: #f0ad4e; } .note.primary { background-color: #f5f0fa; border-left-color: #6f42c1; } .note.primary:not(.no-icon):before { content: \"\\f055\"; color: #6f42c1; } .note.danger { background-color: #fcf1f2; border-left-color: #d9534f; } .note.danger:not(.no-icon):before { content: \"\\f056\"; color: #d9534f; } 最后，在写 md 文件时以 html 标签方式引入即可注意：每个div标签结束后面必须空一行 &lt;div class=\"note info\"&gt;这里是 info 标签样式&lt;/div&gt; &lt;div class=\"note info no-icon\"&gt;这里是不带符号的 info 标签样式&lt;/div&gt; &lt;div class=\"note primary\"&gt;这里是 primary 标签样式&lt;/div&gt; &lt;div class=\"note primary no-icon\"&gt;这里是不带符号的 primary 标签样式&lt;/div&gt; &lt;div class=\"note warning\"&gt;这里是 warning 标签样式&lt;/div&gt; &lt;div class=\"note warning no-icon\"&gt;这里是不带符号的 warning 标签样式&lt;/div&gt; &lt;div class=\"note danger\"&gt;这里是 danger 标签样式&lt;/div&gt; &lt;div class=\"note danger no-icon\"&gt;这里是不带符号的 danger 标签样式&lt;/div&gt; 这里是 info 标签样式 这里是不带符号的 info 标签样式 这里是 primary 标签样式 这里是不带符号的 primary 标签样式 这里是 warning 标签样式 这里是不带符号的 warning 标签样式 这里是 danger 标签样式 这里是不带符号的 danger 标签样式","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"博客优化","slug":"博客优化","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"},{"name":"note标签","slug":"note标签","permalink":"https://kingwdy.avosapps.us/tags/note%E6%A0%87%E7%AD%BE/"}],"author":"KINGWDY"},{"title":"关于WEBP图像","slug":"关于WEBP图像","date":"2022-05-25T04:49:00.000Z","updated":"2022-05-29T05:35:25.908Z","comments":true,"path":"posts/25797.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/25797.html","excerpt":"","text":"hello，大家好，今天我们来谈谈WEBP在平时我们常用的图像格式有jpg，jpeg，png，但是，这些格式碰到高清图片就会变得很大，在服务器上加载会拖慢网页速度，所以WEBP就出现了，他尽可能减少空间，目前大部分的网站都是使用WEBP的格式，接下来我介绍一个免费的转换器（在线）。 这里基本是免费的，非常好用━(｀∀´)ノ亻! 网址https://convertio.co/zh/webp-converter/","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"网站分享","slug":"网站分享","permalink":"https://kingwdy.avosapps.us/tags/%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/"},{"name":"图像处理","slug":"图像处理","permalink":"https://kingwdy.avosapps.us/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"WEBP","slug":"WEBP","permalink":"https://kingwdy.avosapps.us/tags/WEBP/"},{"name":"转换","slug":"转换","permalink":"https://kingwdy.avosapps.us/tags/%E8%BD%AC%E6%8D%A2/"}],"author":"KINGWDY"},{"title":"HEXO-admin安装和使用（汉化版）","slug":"HEXO-admin加速安装和使用（汉化版）","date":"2022-05-24T02:27:00.000Z","updated":"2022-05-25T12:51:50.711Z","comments":true,"path":"posts/27498.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/27498.html","excerpt":"","text":"hi，大家好，我是KINGWDY，众所周知我用的是hexo，写博文首先要在终端输入hexo n xxxxx，然后打开MWeb PRO开始写md，但是，这很麻烦，就在我一筹莫展之际，我看到了这篇博文——原文链接这位博主介绍的插件是HEXO-admin，我看了一下，觉得很不错，就开始研究！他的github地址https://github.com/jaredly/hexo-admin1.安装进入 hexo 源文件目录，执行命令：npm install --save hexo-admin hexo server -d open http://localhost:4000/admin/ 2.配置编辑根目录下：_config.yml 文件，添加：admin: username: myfavoritename password_hash: be121740bf988b2225a313fa1f107ca1 secret: a secret something 其中：username 为登录的用户名，password_hash 为密码的 bcrypt 哈希值，secret 用于使 cookie 安全，可以尽可能复杂。password_hash 的生成首先需安装模块：sudo npm install bcrypt-nodejs 执行：$ node &gt; const bcrypt = require('bcrypt-nodejs') &gt; bcrypt.hashSync('your_password') 其中的 your_password 为登录密码。若部署到远程服务器，就可以使用：http://ip:4000/admin/ 进行访问，在线发布 hexo 博客。一般的链接是http://localhost:4000/admin/本博客即是通过 hexo-admin 在线编辑并发布的。但是，你以为就结束了么？当我打开浏览器，发现hexo-admin里面全是英文，我直接就王**。最后，我还是做出了一个伟大的决定！汉化他。其实汉化他还蛮简单的，打开myblog/node_modules/hexo-admin/www/bundle.js然后把bundle.js的内容换成我的代码：https://gitlab.com/KINGWDY/tgbb/-/raw/main/bundle.js 就可以愉快的play啦~~~ THE END感谢观看，可以的话请我喝杯咖啡吧~~~大家不会弄的话直接从这里下载源码，替换掉原来的就好了！链接 汉化不易，希望大家可以打赏一下，谢谢！（本文会同步到csdn，大家也可以前往CDSN下载资源，就几个C币，行行好，赏我吧~~~）http://t.csdn.cn/leQ2Z","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"插件","slug":"插件","permalink":"https://kingwdy.avosapps.us/tags/%E6%8F%92%E4%BB%B6/"},{"name":"npm","slug":"npm","permalink":"https://kingwdy.avosapps.us/tags/npm/"},{"name":"教程","slug":"教程","permalink":"https://kingwdy.avosapps.us/tags/%E6%95%99%E7%A8%8B/"},{"name":"汉化","slug":"汉化","permalink":"https://kingwdy.avosapps.us/tags/%E6%B1%89%E5%8C%96/"}],"author":"KINGWDY"},{"title":"关于游戏加速器（Steam++）","slug":"关于游戏加速器（Steam-）","date":"2022-05-24T02:03:00.000Z","updated":"2022-05-29T05:44:13.611Z","comments":true,"path":"posts/29462.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/29462.html","excerpt":"","text":"hi，大家好，好久不见，我是KINGWDY，作为一名资深玩家，游戏加速器肯定都不陌生，但是目前市面上的加速器大多都是要钱💰的，想我一样的白嫖怪肯定不会当冤大头，那Steam++就是最好的选择。所以，今天我介绍的就是——steam++首先，我介绍steam++的原因 简洁优质★免费★ 先上界面图片： 他支持加速的项目是： Steam加速Discord语音聊天Twitch直播OriginUply公共CDN国外验证码平台github微软商店其他杂七杂八的功能 并且这个加速器可以个性化内容，换了字体，主题颜色和背景图片，一下子就好康了不少最后贴出Steam++的链接【提取码：1234】1.mac2.windows！！！Windwos 仅支持 64 位系统！！！3.linux4.安卓目前ios还没上架！ 更多信息前往STEAM++官网查看THE END感谢观看，可以的话请博主喝杯咖啡吧~~~","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"加速器","slug":"加速器","permalink":"https://kingwdy.avosapps.us/tags/%E5%8A%A0%E9%80%9F%E5%99%A8/"},{"name":"应用分享","slug":"应用分享","permalink":"https://kingwdy.avosapps.us/tags/%E5%BA%94%E7%94%A8%E5%88%86%E4%BA%AB/"}],"author":"KINGWDY"},{"title":"关于新添加的游戏板块一事","slug":"关于新添加的游戏板块一事","date":"2022-05-23T12:16:00.000Z","updated":"2022-05-29T05:36:34.358Z","comments":true,"path":"posts/11908.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/11908.html","excerpt":"","text":"hi，大家好(๑╹◡╹)ﾉ”，我是KINGWDY本次我的博客更新内容你有游戏板块，为此我说明一下！本游戏板块原作者地址》》这里《《,我搬运修改了他的代码，侵删！！！！！！这里感谢FanHeart大大的源码！！！ 本篇博文附属音乐是","categories":[{"name":"随笔","slug":"随笔","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"声明","slug":"声明","permalink":"https://kingwdy.avosapps.us/tags/%E5%A3%B0%E6%98%8E/"},{"name":"游戏板块","slug":"游戏板块","permalink":"https://kingwdy.avosapps.us/tags/%E6%B8%B8%E6%88%8F%E6%9D%BF%E5%9D%97/"}],"author":"KINGWDY"},{"title":"免费在线抠图网站分享","slug":"免费在线抠图网站分享","date":"2022-05-23T04:11:00.000Z","updated":"2022-05-29T05:38:11.637Z","comments":true,"path":"posts/51618.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/51618.html","excerpt":"","text":"无论工作或生活中难免会碰到抠图的事情，今天我就为大家总结了好用且免费的在线抠图网站来解放你的双手，网址文章中已贴出，如果今天的内容对你有帮助还请大家请我喝杯咖啡哈~~~。1.FocoClippinghttps://www.fococlipping.com FocoClipping 去除背景后可以快速套用特定颜色背景、模板或自行上传背景图，也有提供裁切、翻转、加入阴影或是边框效果，支持高解析度画质（最大 3000×3000 像素）2.Erase.bghttps://www.erase.bg/en Erase.bg 是新上线的图片去背服务，任何人都可以在几秒钟时间快速从任何图片去除背景，并且以原始分辨率下载，没有额外的设定选项，这些工作都能在浏览器完成。3.PhotoKithttps://photokit.com/editor/?lang=zh PhotoKit是一个在线的图片编辑器，抠图只是它的一个功能，总之网站的功能很强大，可以自己体验一下，抠图效果不错，可以直接保存原图尺寸，无需付费4.PhotoRoomhttps://www.photoroom.com/background-remover/ PhotoRoom 是免费在线图片去背工具，可以在用户上传图片后自动将背景移除，除了可选择以透明图作为背景，也能够选择任何颜色，再将编辑图片结果保存下载到计算机，可以将背景套用为透明图或是任何颜色。5.inPixio Remove Backgroundhttps://www.inpixio.com/remove-background/ inPixio Remove Background 是来自一家名为 inPixio 图片编辑软件开发商，网站提供免费去背工具可用来去除图片相片背景，只要将图片上传或直接贴上图片网址，透过算法计算出轮廓范围，短时间就能快速移除图片背景、转换为透明背景。6.Remove.bghttps://www.remove.bg/zh 老牌在线抠图网站，有Win / Mac 版可使用，抠图效果应该是在线平台中最好的，同样只可以免费下载有大小限制的预览图，不过下载原图则需要付费7.Pixlrhttps://pixlr.com/tw/remove-background/ Pixlr的先进AI工具可让您从自拍照，个人资料照片和其他照片中删除背景，而无需进行繁琐的手动操作，不用登录便可以保存原图，虽然抠图质量略微差了一点，但好在免费好了，本期就介绍这么多，如果你有更好用的在线抠图网站可以告诉我.今天分享的歌是Tommee Profitt,Fleurie,Mellen Gi翻唱的《In The End (Mellen Gi Remix)》 歌词作词 : Chester Bennington/Mike Shinoda/Robert Bourdon/Joseph Hahn/Brad Delson作曲 : Chester Bennington/Mike Shinoda/Robert Bourdon/Joseph Hahn/Brad DelsonIt starts with one从一开始All I know我都明白It’s so unreal它虚无缥缈Watch you go目送你离去I tried so hard and got so far奋力拼搏，方得今日But in the end但是到了最后It doesn’t even matter却也无济于事I had to fall自甘堕落To lose it all满盘皆失But in the end但是到了最后It doesn’t even matter却也无济于事I tried so hard and got so far奋力拼搏，方得今日But in the end但是到了最后It doesn’t even matter却也无济于事I had to fall自甘堕落To lose it all满盘皆失But in the end但是到了最后It doesn’t even matter却也无济于事It starts with one从一开始All I know我都明白It’s so unreal它虚无缥缈Watch you go目送你离去I tried so hard and got so far奋力拼搏，方得今日But in the end但是到了最后It doesn’t even matter却也无济于事I had to fall自甘堕落To lose it all满盘皆失But in the end但是到了最后It doesn’t even matter却也无济于事I tried so hard and got so far奋力拼搏，方得今日But in the end但是到了最后It doesn’t even matter却也无济于事I had to fall自甘堕落To lose it all满盘皆失But in the end但是到了最后It doesn’t even matter却也无济于事 精彩评论：低温沸水：这个版本的跟我的震撼就好像在未来世界，地球被外星人入侵，高耸入云的山峰一座接着一座，人类和机器人站在山峰看着山峰下方的战争机械残骸，和满满的赛博朋克气息，震撼心灵的空灵的音乐回荡在山谷间。寻觅的玉玉子：“如果你不花时间，去创造你想要的生活。你将被迫花很多时间，去应付你不想要的生活。成功的路上，没有人会叫你起床，也没有人为你买单。你需要自我管理，自我约束，自我突破。” —— 摘自《人民日报》 ​​​THE END","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"网站分享","slug":"网站分享","permalink":"https://kingwdy.avosapps.us/tags/%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/"},{"name":"好物推荐","slug":"好物推荐","permalink":"https://kingwdy.avosapps.us/tags/%E5%A5%BD%E7%89%A9%E6%8E%A8%E8%8D%90/"},{"name":"图像处理","slug":"图像处理","permalink":"https://kingwdy.avosapps.us/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]},{"title":"关于未来本博客的发展","slug":"关于未来本博客的发展","date":"2022-05-22T08:06:21.000Z","updated":"2022-05-22T08:19:22.470Z","comments":true,"path":"posts/27604.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/27604.html","excerpt":"","text":"hi，大家好，好久不见~~~今天我们谈谈未来博客的发展目前博客大体搭建完成，我一开始使用的是matery，但是看到uncle大大的surkey，我就转型为surkey，这款主题很美观，并且功能很多，我比较推荐。未来我会陆续加入新功能：1.集合工具箱【目前的wormatap，bv转av，云签将来会集合为工具箱，然后会添加API图片，导航，音乐免费解析等（目前正在加速开发中）】 如果大家有什么好的意见或发现我的bug，可以留言评论（未来会加入吐槽区）。最后，分享一首歌,是RYLLZ的《Nemesis》 要的可以点击这里下载","categories":[{"name":"随想","slug":"随想","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E6%83%B3/"}],"tags":[{"name":"声明","slug":"声明","permalink":"https://kingwdy.avosapps.us/tags/%E5%A3%B0%E6%98%8E/"}]},{"title":"歌评《lovely》","slug":"歌评《lovely》","date":"2022-05-22T02:53:19.000Z","updated":"2022-05-25T12:54:01.684Z","comments":true,"path":"posts/25381.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/25381.html","excerpt":"","text":"hello,大家好，今天我来分享一首欧美流行音乐《lovely》废话不多说，先上音乐（这是我爬过来的，侵删） 歌手比莉·艾利什（Billie Eilish），2001年12月18日出生于美国加利福尼亚州洛杉矶，美国女歌手、词曲作者、模特。2015年，她在网上发布了个人首支单曲《Ocean Eyes》，并因该曲受到了关注。2016年，签入环球音乐旗下的新视镜唱片公司。2017年，推出个人首张EP《Don’t Smile at Me》。2018年，在欧美地区举办了首次个人巡回演唱会。2019年，首张个人录音室专辑《When We All Fall Asleep, Where Do We Go?》正式发行 ，专辑内的单曲《Bad Guy》获得了美国公告牌百强单曲榜冠军。2020年，获得第62届格莱美奖年度制作、年度专辑、年度歌曲等五个奖项。2021年，其演唱的歌曲《everything i wanted》《No Time To Die》分别获得第63届格莱美奖年度制作、最佳影视原创歌曲 ；同年，发行第二张个人录音室专辑《Happier Than Ever》 ，入选《时代周刊》“全球最具影响力百人榜”。2022年，其演唱歌曲《No Time To Die》获得第94届奥斯卡金像奖最佳原创歌曲 。可以说是这首歌整的非常震撼，压迫感十足！！！歌词大致意思Thought I found a way我以为我找到了方法Thought I found a way out (Found)我以为我看到了希望But you never go away (Never go away)但你永远不会消失（从没离开过我）So I guess I gotta stay now所以我想现在我得留下来Oh, I hope some day I’ll make it out of here噢 我希望有一天我能活着离开这Even if it takes all night or a hundred years即使这得耗上整夜乃至百年之力Need a place to hide, but I can’t find one near亟需藏身之地 可眼下我却寻不到一处Wanna feel alive, outside I can fight my fear想感到自己还活着 想置身事外 这样我就能战胜我的恐惧Isn’t it lovely, all alone空寂是如此惬意, 不是吗?Heart made of glass, my mind of stone心本如玻璃般脆弱 而我却是铁石心肠Tear me to pieces, skin to bone将我撕碎 削皮除骨Hello, welcome home你好，欢迎回家……Walking out of town步出小镇Looking for a better place (Looking for a better place)去寻找一个更美好的地方Something’s on my mind有些思绪萦于心间Always in my headspace永远悬在我的头顶But I hope some day I’ll make it out of here但我知道总有一天我会离开这里Even if it takes all night or a hundred years即使这得耗上整夜乃至百年之力Need a place to hide, but I can’t find one near亟需藏身之地 可眼下我却寻不到一处Wanna feel alive, outside I can fight my fear想感到自己还活着 想置身事外 这样我就能战胜我的恐惧Isn’t it lovely, all alone空寂是如此惬意, 不是吗?Heart made of glass, my mind of stone心如玻璃般易碎 因而我才铁石心肠Tear me to pieces, skin to bone将我撕碎 削皮除骨Hello, welcome home你好，欢迎回家Woah, yeah……Yeah, ah……Woah, woah…………Hello, welcome home你好，欢迎回家 网抑云高赞评论摘录：1.大腰花花瑜：歌名叫lovely,但我只感觉到lonely.2.该吃药了了了：这前奏，我还以为下一句是 水中贵族，百岁山3.鹿笙笙笙笙笙笙笙笙：真正热爱祖国的年轻人，即便他们是日本动漫游戏的铁杆粉丝，他们也会在大是大非的问题面前维护自己国家的主权和民族尊严。而那些没有脊梁骨、双膝发软的人，即便他们对日本没兴趣，也迟早会跪倒在其他人面前，嘲笑着中国的一切，包括中国的主权和民族的尊严。——共青团中央4.是一个骗子：今年3月被查出了癌症晚期，一切来得这么快。我不只过19岁而己还有很多事还没来得及做呢，还没和自己的女孩表白呢。就要结束了不知道自己能不能撑过去了这是我在这最后的痕迹了。各位我就先行一步了哈哈，下次见我就是来生了，拜拜了云村的伙伴们5.狮安山山：六级听力也拖这么慢就好了","categories":[{"name":"生活","slug":"生活","permalink":"https://kingwdy.avosapps.us/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"音乐","slug":"音乐","permalink":"https://kingwdy.avosapps.us/tags/%E9%9F%B3%E4%B9%90/"},{"name":"评价","slug":"评价","permalink":"https://kingwdy.avosapps.us/tags/%E8%AF%84%E4%BB%B7/"},{"name":"Billie Eilish","slug":"Billie-Eilish","permalink":"https://kingwdy.avosapps.us/tags/Billie-Eilish/"},{"name":"流行音乐","slug":"流行音乐","permalink":"https://kingwdy.avosapps.us/tags/%E6%B5%81%E8%A1%8C%E9%9F%B3%E4%B9%90/"}]},{"title":"Hexo-Theme-Sakura(转载)","slug":"Hexo-Theme-Sakura","date":"2022-05-20T08:19:01.000Z","updated":"2022-05-29T05:40:49.414Z","comments":true,"path":"posts/22338.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/22338.html","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&uin=954655431&site=qq&menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置 如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 < (￣︶￣)> items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"web","slug":"web","permalink":"https://kingwdy.avosapps.us/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"https://kingwdy.avosapps.us/tags/%E6%82%A6%E8%AF%BB/"}],"author":"hojun"},{"title":"小破站av号BV号转换","slug":"小破站av号BV号转换","date":"2022-05-20T07:14:28.000Z","updated":"2022-05-25T12:53:02.201Z","comments":true,"path":"posts/22294.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/22294.html","excerpt":"","text":"啊…这两天发现小破站的av号都变成BV号了…记起来贼麻烦…下载B站视频的工具也还没更新，所以就扒了扒av转BV的各种脚本，我觉得这个做的还不错，改了改就搬过来了…还可以对吧！&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width\"&gt; &lt;title&gt;BV 号跋扈 ～ Who done it!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;BV号转AV号&lt;/p&gt; &lt;input type=\"text\" id=\"av\"&gt;&lt;button onclick=\"return av() &amp;&amp; false\"&gt;AV 号转 BV 号&lt;/button&gt; &lt;input type=\"text\" id=\"bv\"&gt;&lt;button onclick=\"return bv() &amp;&amp; false\"&gt;BV 号转 AV 号&lt;/button&gt; &lt;p id=\"result\"&gt;结果：&lt;/p&gt; &lt;p&gt;别问我为何这么丑，这玩意叫简洁风！！！&lt;/p&gt; &lt;p&gt;改写自 &lt;a href=\"https://www.zhihu.com/question/381784377/answer/1099438784\"&gt;mcfx 的纸糊回答&lt;/a&gt;，并加上一些适当的处理。&lt;/p&gt; &lt;p&gt;可以的话，下面赏我杯咖啡~~~谢谢！！！&lt;/p&gt; &lt;script&gt; // 改写自 https://www.zhihu.com/question/381784377/answer/1099438784，并加上一些适当的处理 'use strict'; const table = [...'fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF']; const s = [11, 10, 3, 8, 4, 6]; const xor = 177451812; const add = 8728348608; const av2bv = (av) =&gt; { let num = NaN; if (Object.prototype.toString.call(av) === '[object Number]') { num = av; } else if (Object.prototype.toString.call(av) === '[object String]') { num = parseInt(av.replace(/[^0-9]/gu, '')); }; if (isNaN(num) || num &lt;= 0) { // 网页版直接输出这个结果了 return '¿你在想桃子？'; }; num = (num ^ xor) + add; let result = [...'BV1 4 1 7 ']; let i = 0; while (i &lt; 6) { // 这里改写差点犯了运算符优先级的坑 // 果然 Python 也不是特别熟练 // 说起来 ** 按照传统语法应该写成 Math.pow()，但是我个人更喜欢 ** 一些 result[s[i]] = table[Math.floor(num / 58 ** i) % 58]; i += 1; }; return result.join(''); }; const bv2av = (bv) =&gt; { let str = ''; if (bv.length === 12) { str = bv; } else if (bv.length === 10) { str = `BV${bv}`; // 根据官方 API，BV 号开头的 BV1 其实可以省略 // 不过单独省略个 B 又不行（ } else if (bv.length === 9) { str = `BV1${bv}`; } else { return '¿你在想桃子？'; }; if (!str.match(/[Bb][Vv][fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF]{10}/gu)) { return '¿你在想桃子？'; }; let result = 0; let i = 0; while (i &lt; 6) { result += table.indexOf(str[s[i]]) * 58 ** i; i += 1; }; return `av${result - add ^ xor}`; }; const av = () =&gt; { let result = av2bv(document.getElementById('av').value); if (result !== '¿你在想桃子？') { document.getElementById('result').innerHTML = `结果：&lt;a href=\"https://www.bilibili.com/video/${result}\"&gt;${result}&lt;/a&gt;`; } else { document.getElementById('result').innerHTML = `结果：${result}`; }; }; const bv = () =&gt; { let result = bv2av(document.getElementById('bv').value); if (result !== '¿你在想桃子？') { document.getElementById('result').innerHTML = `结果：&lt;a href=\"https://www.bilibili.com/video/${result}\"&gt;${result}&lt;/a&gt;`; } else { document.getElementById('result').innerHTML = `结果：${result}`; }; }; document.getElementById('av').addEventListener('keydown', (event) =&gt; { if (event.keyCode === 13) { av(); }; }); document.getElementById('bv').addEventListener('keydown', (event) =&gt; { if (event.keyCode === 13) { bv(); }; }); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"工具箱","slug":"工具箱","permalink":"https://kingwdy.avosapps.us/tags/%E5%B7%A5%E5%85%B7%E7%AE%B1/"},{"name":"代码分享","slug":"代码分享","permalink":"https://kingwdy.avosapps.us/tags/%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%AB/"}],"author":"KINGWDY"},{"title":"随机图片API","slug":"随机图片API","date":"2022-05-20T06:32:05.000Z","updated":"2022-05-29T05:41:21.614Z","comments":true,"path":"posts/38811.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/38811.html","excerpt":"","text":"注意：因为目前我的图床服务器还未搭建完成，所以先分享一个小伙伴的API！！！API调用方式：https://api.flymc.cc/cover.php 支持地址栏直接访问，完全无限制使用目前本随机图片仅包含动漫图库会根据后续需求扩充其它类别的图库，欢迎评论区反馈现有的动漫图库正不断扩充中 @所有看到这篇文章的人！！！搭建图床是很烧钱的！！！有条件就给原作者打赏一下！！！","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"API图片","slug":"API图片","permalink":"https://kingwdy.avosapps.us/tags/API%E5%9B%BE%E7%89%87/"},{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/tags/%E8%BD%AC%E8%BD%BD/"}],"author":"KINGWDY（原作者：Natsuki Kaede)"},{"title":"Fontawesome 图标样例","slug":"Fontawesome-图标样例","date":"2022-05-18T23:55:53.000Z","updated":"2022-05-20T08:26:44.007Z","comments":true,"path":"posts/20692.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/20692.html","excerpt":"","text":"Fontawesome 图标样例图标库官网：https://fontawesome.dashgame.com/如果不想做多余工作，只想简单的在 matery 主题换图标，那么以下可以显示出的都是可以更换的。图标样例fa fa-500px fa fa-accessible-icon fa fa-accusoft fa fa-acquisitions-incorporated fa fa-ad fa fa-address-book fa fa-address-card fa fa-adjust fa fa-adn fa fa-adobe fa fa-adversal fa fa-affiliatetheme fa fa-air-freshener fa fa-airbnb fa fa-algolia fa fa-align-center fa fa-align-justify fa fa-align-left fa fa-align-right fa fa-alipay fa fa-allergies fa fa-amazon fa fa-amazon-pay fa fa-ambulance fa fa-american-sign-language-interpreting fa fa-amilia fa fa-anchor fa fa-android fa fa-angellist fa fa-angle-double-down fa fa-angle-double-left fa fa-angle-double-right fa fa-angle-double-up fa fa-angle-down fa fa-angle-left fa fa-angle-right fa fa-angle-up fa fa-angry fa fa-angrycreative fa fa-angular fa fa-ankh fa fa-app-store fa fa-app-store-ios fa fa-apper fa fa-apple fa fa-apple-alt fa fa-apple-pay fa fa-archive fa fa-archway fa fa-arrow-alt-circle-down fa fa-arrow-alt-circle-left fa fa-arrow-alt-circle-right fa fa-arrow-alt-circle-up fa fa-arrow-circle-down fa fa-arrow-circle-left fa fa-arrow-circle-right fa fa-arrow-circle-up fa fa-arrow-down fa fa-arrow-left fa fa-arrow-right fa fa-arrow-up fa fa-arrows-alt fa fa-arrows-alt-h fa fa-arrows-alt-v fa fa-artstation fa fa-assistive-listening-systems fa fa-asterisk fa fa-asymmetrik fa fa-at fa fa-atlas fa fa-atlassian fa fa-atom fa fa-audible fa fa-audio-description fa fa-autoprefixer fa fa-avianex fa fa-aviato fa fa-award fa fa-aws fa fa-baby fa fa-baby-carriage fa fa-backspace fa fa-backward fa fa-bacon fa fa-balance-scale fa fa-balance-scale-left fa fa-balance-scale-right fa fa-ban fa fa-band-aid fa fa-bandcamp fa fa-barcode fa fa-bars fa fa-baseball-ball fa fa-basketball-ball fa fa-bath fa fa-battery-empty fa fa-battery-full fa fa-battery-half fa fa-battery-quarter fa fa-battery-three-quarters fa fa-battle-net fa fa-bed fa fa-beer fa fa-behance fa fa-behance-square fa fa-bell fa fa-bell-slash fa fa-bezier-curve fa fa-bible fa fa-bicycle fa fa-biking fa fa-bimobject fa fa-binoculars fa fa-biohazard fa fa-birthday-cake fa fa-bitbucket fa fa-bitcoin fa fa-bity fa fa-black-tie fa fa-blackberry fa fa-blender fa fa-blender-phone fa fa-blind fa fa-blog fa fa-blogger fa fa-blogger-b fa fa-bluetooth fa fa-bluetooth-b fa fa-bold fa fa-bolt fa fa-bomb fa fa-bone fa fa-bong fa fa-book fa fa-book-dead fa fa-book-medical fa fa-book-open fa fa-book-reader fa fa-bookmark fa fa-bootstrap fa fa-border-all fa fa-border-none fa fa-border-style fa fa-bowling-ball fa fa-box fa fa-box-open fa fa-boxes fa fa-braille fa fa-brain fa fa-bread-slice fa fa-briefcase fa fa-briefcase-medical fa fa-broadcast-tower fa fa-broom fa fa-brush fa fa-btc fa fa-buffer fa fa-bug fa fa-building fa fa-bullhorn fa fa-bullseye fa fa-burn fa fa-buromobelexperte fa fa-bus fa fa-bus-alt fa fa-business-time fa fa-buy-n-large fa fa-buysellads fa fa-calculator fa fa-calendar fa fa-calendar-alt fa fa-calendar-check fa fa-calendar-day fa fa-calendar-minus fa fa-calendar-plus fa fa-calendar-times fa fa-calendar-week fa fa-camera fa fa-camera-retro fa fa-campground fa fa-canadian-maple-leaf fa fa-candy-cane fa fa-cannabis fa fa-capsules fa fa-car fa fa-car-alt fa fa-car-battery fa fa-car-crash fa fa-car-side fa fa-caret-down fa fa-caret-left fa fa-caret-right fa fa-caret-square-down fa fa-caret-square-left fa fa-caret-square-right fa fa-caret-square-up fa fa-caret-up fa fa-carrot fa fa-cart-arrow-down fa fa-cart-plus fa fa-cash-register fa fa-cat fa fa-cc-amazon-pay fa fa-cc-amex fa fa-cc-apple-pay fa fa-cc-diners-club fa fa-cc-discover fa fa-cc-jcb fa fa-cc-mastercard fa fa-cc-paypal fa fa-cc-stripe fa fa-cc-visa fa fa-centercode fa fa-centos fa fa-certificate fa fa-chair fa fa-chalkboard fa fa-chalkboard-teacher fa fa-charging-station fa fa-chart-area fa fa-chart-bar fa fa-chart-line fa fa-chart-pie fa fa-check fa fa-check-circle fa fa-check-double fa fa-check-square fa fa-cheese fa fa-chess fa fa-chess-bishop fa fa-chess-board fa fa-chess-king fa fa-chess-knight fa fa-chess-pawn fa fa-chess-queen fa fa-chess-rook fa fa-chevron-circle-down fa fa-chevron-circle-left fa fa-chevron-circle-right fa fa-chevron-circle-up fa fa-chevron-down fa fa-chevron-left fa fa-chevron-right fa fa-chevron-up fa fa-child fa fa-chrome fa fa-chromecast fa fa-church fa fa-circle fa fa-circle-notch fa fa-city fa fa-clinic-medical fa fa-clipboard fa fa-clipboard-check fa fa-clipboard-list fa fa-clock fa fa-clone fa fa-closed-captioning fa fa-cloud fa fa-cloud-download-alt fa fa-cloud-meatball fa fa-cloud-moon fa fa-cloud-moon-rain fa fa-cloud-rain fa fa-cloud-showers-heavy fa fa-cloud-sun fa fa-cloud-sun-rain fa fa-cloud-upload-alt fa fa-cloudscale fa fa-cloudsmith fa fa-cloudversify fa fa-cocktail fa fa-code fa fa-code-branch fa fa-codepen fa fa-codiepie fa fa-coffee fa fa-cog fa fa-cogs fa fa-coins fa fa-columns fa fa-comment fa fa-comment-alt fa fa-comment-dollar fa fa-comment-dots fa fa-comment-medical fa fa-comment-slash fa fa-comments fa fa-comments-dollar fa fa-compact-disc fa fa-compass fa fa-compress fa fa-compress-arrows-alt fa fa-concierge-bell fa fa-confluence fa fa-connectdevelop fa fa-contao fa fa-cookie fa fa-cookie-bite fa fa-copy fa fa-copyright fa fa-cotton-bureau fa fa-couch fa fa-cpanel fa fa-creative-commons fa fa-creative-commons-by fa fa-creative-commons-nc fa fa-creative-commons-nc-eu fa fa-creative-commons-nc-jp fa fa-creative-commons-nd fa fa-creative-commons-pd fa fa-creative-commons-pd-alt fa fa-creative-commons-remix fa fa-creative-commons-sa fa fa-creative-commons-sampling fa fa-creative-commons-sampling-plus fa fa-creative-commons-share fa fa-creative-commons-zero fa fa-credit-card fa fa-critical-role fa fa-crop fa fa-crop-alt fa fa-cross fa fa-crosshairs fa fa-crow fa fa-crown fa fa-crutch fa fa-css3 fa fa-css3-alt fa fa-cube fa fa-cubes fa fa-cut fa fa-cuttlefish fa fa-d-and-d fa fa-d-and-d-beyond fa fa-dashcube fa fa-database fa fa-deaf fa fa-delicious fa fa-democrat fa fa-deploydog fa fa-deskpro fa fa-desktop fa fa-dev fa fa-deviantart fa fa-dharmachakra fa fa-dhl fa fa-diagnoses fa fa-diaspora fa fa-dice fa fa-dice-d20 fa fa-dice-d6 fa fa-dice-five fa fa-dice-four fa fa-dice-one fa fa-dice-six fa fa-dice-three fa fa-dice-two fa fa-digg fa fa-digital-ocean fa fa-digital-tachograph fa fa-directions fa fa-discord fa fa-discourse fa fa-divide fa fa-dizzy fa fa-dna fa fa-dochub fa fa-docker fa fa-dog fa fa-dollar-sign fa fa-dolly fa fa-dolly-flatbed fa fa-donate fa fa-door-closed fa fa-door-open fa fa-dot-circle fa fa-dove fa fa-download fa fa-draft2digital fa fa-drafting-compass fa fa-dragon fa fa-draw-polygon fa fa-dribbble fa fa-dribbble-square fa fa-dropbox fa fa-drum fa fa-drum-steelpan fa fa-drumstick-bite fa fa-drupal fa fa-dumbbell fa fa-dumpster fa fa-dumpster-fire fa fa-dungeon fa fa-dyalog fa fa-earlybirds fa fa-ebay fa fa-edge fa fa-edit fa fa-egg fa fa-eject fa fa-elementor fa fa-ellipsis-h fa fa-ellipsis-v fa fa-ello fa fa-ember fa fa-empire fa fa-envelope fa fa-envelope-open fa fa-envelope-open-text fa fa-envelope-square fa fa-envira fa fa-equals fa fa-eraser fa fa-erlang fa fa-ethereum fa fa-ethernet fa fa-etsy fa fa-euro-sign fa fa-evernote fa fa-exchange-alt fa fa-exclamation fa fa-exclamation-circle fa fa-exclamation-triangle fa fa-expand fa fa-expand-arrows-alt fa fa-expeditedssl fa fa-external-link-alt fa fa-external-link-square-alt fa fa-eye fa fa-eye-dropper fa fa-eye-slash fa fa-facebook fa fa-facebook-f fa fa-facebook-messenger fa fa-facebook-square fa fa-fan fa fa-fantasy-flight-games fa fa-fast-backward fa fa-fast-forward fa fa-fax fa fa-feather fa fa-feather-alt fa fa-fedex fa fa-fedora fa fa-female fa fa-fighter-jet fa fa-figma fa fa-file fa fa-file-alt fa fa-file-archive fa fa-file-audio fa fa-file-code fa fa-file-contract fa fa-file-csv fa fa-file-download fa fa-file-excel fa fa-file-export fa fa-file-image fa fa-file-import fa fa-file-invoice fa fa-file-invoice-dollar fa fa-file-medical fa fa-file-medical-alt fa fa-file-pdf fa fa-file-powerpoint fa fa-file-prescription fa fa-file-signature fa fa-file-upload fa fa-file-video fa fa-file-word fa fa-fill fa fa-fill-drip fa fa-film fa fa-filter fa fa-fingerprint fa fa-fire fa fa-fire-alt fa fa-fire-extinguisher fa fa-firefox fa fa-first-aid fa fa-first-order fa fa-first-order-alt fa fa-firstdraft fa fa-fish fa fa-fist-raised fa fa-flag fa fa-flag-checkered fa fa-flag-usa fa fa-flask fa fa-flickr fa fa-flipboard fa fa-flushed fa fa-fly fa fa-folder fa fa-folder-minus fa fa-folder-open fa fa-folder-plus fa fa-font fa fa-font-awesome fa fa-font-awesome-alt fa fa-font-awesome-flag fa fa-font-awesome-logo-full fa fa-fonticons fa fa-fonticons-fi fa fa-football-ball fa fa-fort-awesome fa fa-fort-awesome-alt fa fa-forumbee fa fa-forward fa fa-foursquare fa fa-free-code-camp fa fa-freebsd fa fa-frog fa fa-frown fa fa-frown-open fa fa-fulcrum fa fa-funnel-dollar fa fa-futbol fa fa-galactic-republic fa fa-galactic-senate fa fa-gamepad fa fa-gas-pump fa fa-gavel fa fa-gem fa fa-genderless fa fa-get-pocket fa fa-gg fa fa-gg-circle fa fa-ghost fa fa-gift fa fa-gifts fa fa-git fa fa-git-alt fa fa-git-square fa fa-github fa fa-github-alt fa fa-github-square fa fa-gitkraken fa fa-gitlab fa fa-gitter fa fa-glass-cheers fa fa-glass-martini fa fa-glass-martini-alt fa fa-glass-whiskey fa fa-glasses fa fa-glide fa fa-glide-g fa fa-globe fa fa-globe-africa fa fa-globe-americas fa fa-globe-asia fa fa-globe-europe fa fa-gofore fa fa-golf-ball fa fa-goodreads fa fa-goodreads-g fa fa-google fa fa-google-drive fa fa-google-play fa fa-google-plus fa fa-google-plus-g fa fa-google-plus-square fa fa-google-wallet fa fa-gopuram fa fa-graduation-cap fa fa-gratipay fa fa-grav fa fa-greater-than fa fa-greater-than-equal fa fa-grimace fa fa-grin fa fa-grin-alt fa fa-grin-beam fa fa-grin-beam-sweat fa fa-grin-hearts fa fa-grin-squint fa fa-grin-squint-tears fa fa-grin-stars fa fa-grin-tears fa fa-grin-tongue fa fa-genderless fa fa-get-pocket fa fa-gg fa fa-gg-circle fa fa-ghost fa fa-gift fa fa-gifts fa fa-git fa fa-git-alt fa fa-git-square fa fa-github fa fa-github-alt fa fa-github-square fa fa-gitkraken fa fa-gitlab fa fa-gitter fa fa-glass-cheers fa fa-glass-martini fa fa-glass-martini-alt fa fa-glass-whiskey fa fa-glasses fa fa-glide fa fa-glide-g fa fa-globe fa fa-globe-africa fa fa-globe-americas fa fa-globe-asia fa fa-globe-europe fa fa-gofore fa fa-golf-ball fa fa-goodreads fa fa-goodreads-g fa fa-google fa fa-google-drive fa fa-google-play fa fa-google-plus fa fa-google-plus-g fa fa-google-plus-square fa fa-google-wallet fa fa-gopuram fa fa-graduation-cap fa fa-gratipay fa fa-grav fa fa-greater-than fa fa-greater-than-equal fa fa-grimace fa fa-grin fa fa-grin-alt fa fa-grin-beam fa fa-grin-beam-sweat fa fa-grin-hearts fa fa-grin-squint fa fa-grin-squint-tears fa fa-grin-stars fa fa-grin-tears fa fa-grin-tongue fa fa-grin-tongue-squint fa fa-grin-tongue-wink fa fa-grin-wink fa fa-grip-horizontal fa fa-grip-lines fa fa-grip-lines-vertical fa fa-grip-vertical fa fa-gripfire fa fa-grunt fa fa-guitar fa fa-gulp fa fa-h-square fa fa-hacker-news fa fa-hacker-news-square fa fa-hackerrank fa fa-hamburger fa fa-hammer fa fa-hamsa fa fa-hand-holding fa fa-hand-holding-heart fa fa-hand-holding-usd fa fa-hand-lizard fa fa-hand-middle-finger fa fa-hand-paper fa fa-hand-peace fa fa-hand-point-down fa fa-hand-point-left fa fa-hand-point-right fa fa-hand-point-up fa fa-hand-pointer fa fa-hand-rock fa fa-hand-scissors fa fa-hand-spock fa fa-hands fa fa-hands-helping fa fa-handshake fa fa-hanukiah fa fa-hard-hat fa fa-hashtag fa fa-hat-cowboy fa fa-hat-cowboy-side fa fa-hat-wizard fa fa-haykal fa fa-hdd fa fa-heading fa fa-headphones fa fa-headphones-alt fa fa-headset fa fa-heart fa fa-heart-broken fa fa-heartbeat fa fa-helicopter fa fa-highlighter fa fa-hiking fa fa-hippo fa fa-hips fa fa-hire-a-helper fa fa-history fa fa-hockey-puck fa fa-holly-berry fa fa-home fa fa-hooli fa fa-hornbill fa fa-horse fa fa-horse-head fa fa-hospital fa fa-hospital-alt fa fa-hospital-symbol fa fa-hot-tub fa fa-hotdog fa fa-hotel fa fa-hotjar fa fa-hourglass fa fa-hourglass-end fa fa-hourglass-half fa fa-hourglass-start fa fa-house-damage fa fa-houzz fa fa-hryvnia fa fa-html5 fa fa-hubspot fa fa-i-cursor fa fa-ice-cream fa fa-icicles fa fa-icons fa fa-id-badge fa fa-id-card fa fa-id-card-alt fa fa-igloo fa fa-image fa fa-images fa fa-imdb fa fa-inbox fa fa-indent fa fa-industry fa fa-infinity fa fa-info fa fa-info-circle fa fa-instagram fa fa-intercom fa fa-internet-explorer fa fa-invision fa fa-ioxhost fa fa-italic fa fa-itch-io fa fa-itunes fa fa-itunes-note fa fa-java fa fa-jedi fa fa-jedi-order fa fa-jenkins fa fa-jira fa fa-joget fa fa-joint fa fa-joomla fa fa-journal-whills fa fa-js fa fa-js-square fa fa-jsfiddle fa fa-kaaba fa fa-kaggle fa fa-key fa fa-keybase fa fa-keyboard fa fa-keycdn fa fa-khanda fa fa-kickstarter fa fa-kickstarter-k fa fa-kiss fa fa-kiss-beam fa fa-kiss-wink-heart fa fa-kiwi-bird fa fa-korvue fa fa-landmark fa fa-language fa fa-laptop fa fa-laptop-code fa fa-laptop-medical fa fa-laravel fa fa-lastfm fa fa-lastfm-square fa fa-laugh fa fa-laugh-beam fa fa-laugh-squint fa fa-laugh-wink fa fa-layer-group fa fa-leaf fa fa-leanpub fa fa-lemon fa fa-less fa fa-less-than fa fa-less-than-equal fa fa-level-down-alt fa fa-level-up-alt fa fa-life-ring fa fa-lightbulb fa fa-line fa fa-link fa fa-linkedin fa fa-linkedin-in fa fa-linode fa fa-linux fa fa-lira-sign fa fa-list fa fa-list-alt fa fa-list-ol fa fa-list-ul fa fa-location-arrow fa fa-lock fa fa-lock-open fa fa-long-arrow-alt-down fa fa-long-arrow-alt-left fa fa-long-arrow-alt-right fa fa-long-arrow-alt-up fa fa-low-vision fa fa-luggage-cart fa fa-lyft fa fa-magento fa fa-magic fa fa-magnet fa fa-mail-bulk fa fa-mailchimp fa fa-male fa fa-mandalorian fa fa-map fa fa-map-marked fa fa-map-marked-alt fa fa-map-marker fa fa-map-marker-alt fa fa-map-pin fa fa-map-signs fa fa-markdown fa fa-marker fa fa-mars fa fa-mars-double fa fa-mars-stroke fa fa-mars-stroke-h fa fa-mars-stroke-v fa fa-mask fa fa-mastodon fa fa-maxcdn fa fa-mdb fa fa-medal fa fa-medapps fa fa-medium fa fa-medium-m fa fa-medkit fa fa-medrt fa fa-meetup fa fa-megaport fa fa-meh fa fa-meh-blank fa fa-meh-rolling-eyes fa fa-memory fa fa-mendeley fa fa-menorah fa fa-mercury fa fa-meteor fa fa-microchip fa fa-microphone fa fa-microphone-alt fa fa-microphone-alt-slash fa fa-microphone-slash fa fa-microscope fa fa-microsoft fa fa-minus fa fa-minus-circle fa fa-minus-square fa fa-mitten fa fa-mix fa fa-mixcloud fa fa-mizuni fa fa-mobile fa fa-mobile-alt fa fa-modx fa fa-monero fa fa-money-bill fa fa-money-bill-alt fa fa-money-bill-wave fa fa-money-bill-wave-alt fa fa-money-check fa fa-money-check-alt fa fa-monument fa fa-moon fa fa-mortar-pestle fa fa-mosque fa fa-motorcycle fa fa-mountain fa fa-mouse fa fa-mouse-pointer fa fa-mug-hot fa fa-music fa fa-napster fa fa-neos fa fa-network-wired fa fa-neuter fa fa-newspaper fa fa-nimblr fa fa-node fa fa-node-js fa fa-not-equal fa fa-notes-medical fa fa-npm fa fa-ns8 fa fa-nutritionix fa fa-object-group fa fa-object-ungroup fa fa-odnoklassniki fa fa-odnoklassniki-square fa fa-oil-can fa fa-old-republic fa fa-om fa fa-opencart fa fa-openid fa fa-opera fa fa-optin-monster fa fa-orcid fa fa-osi fa fa-otter fa fa-outdent fa fa-page4 fa fa-pagelines fa fa-pager fa fa-paint-brush fa fa-paint-roller fa fa-palette fa fa-palfed fa fa-pallet fa fa-paper-plane fa fa-paperclip fa fa-parachute-box fa fa-paragraph fa fa-parking fa fa-passport fa fa-pastafarianism fa fa-paste fa fa-patreon fa fa-pause fa fa-pause-circle fa fa-paw fa fa-paypal fa fa-peace fa fa-pen fa fa-pen-alt fa fa-pen-fancy fa fa-pen-nib fa fa-pen-square fa fa-pencil-alt fa fa-pencil-ruler fa fa-penny-arcade fa fa-people-carry fa fa-pepper-hot fa fa-percent fa fa-percentage fa fa-periscope fa fa-person-booth fa fa-phabricator fa fa-phoenix-framework fa fa-phoenix-squadron fa fa-phone fa fa-phone-alt fa fa-phone-slash fa fa-phone-square fa fa-phone-square-alt fa fa-phone-volume fa fa-photo-video fa fa-php fa fa-pied-piper fa fa-pied-piper-alt fa fa-pied-piper-hat fa fa-pied-piper-pp fa fa-piggy-bank fa fa-pills fa fa-pinterest fa fa-pinterest-p fa fa-pinterest-square fa fa-pizza-slice fa fa-place-of-worship fa fa-plane fa fa-plane-arrival fa fa-plane-departure fa fa-play fa fa-play-circle fa fa-playstation fa fa-plug fa fa-plus fa fa-plus-circle fa fa-plus-square fa fa-podcast fa fa-poll fa fa-poll-h fa fa-poo fa fa-poo-storm fa fa-poop fa fa-portrait fa fa-pound-sign fa fa-power-off fa fa-pray fa fa-praying-hands fa fa-prescription fa fa-prescription-bottle fa fa-prescription-bottle-alt fa fa-print fa fa-procedures fa fa-product-hunt fa fa-project-diagram fa fa-pushed fa fa-puzzle-piece fa fa-python fa fa-qq fa fa-qrcode fa fa-question fa fa-question-circle fa fa-quidditch fa fa-quinscape fa fa-quora fa fa-quote-left fa fa-quote-right fa fa-quran fa fa-r-project fa fa-radiation fa fa-radiation-alt fa fa-rainbow fa fa-random fa fa-raspberry-pi fa fa-ravelry fa fa-react fa fa-reacteurope fa fa-readme fa fa-rebel fa fa-receipt fa fa-record-vinyl fa fa-recycle fa fa-red-river fa fa-reddit fa fa-reddit-alien fa fa-reddit-square fa fa-redhat fa fa-redo fa fa-redo-alt fa fa-registered fa fa-remove-format fa fa-renren fa fa-reply fa fa-reply-all fa fa-replyd fa fa-republican fa fa-researchgate fa fa-resolving fa fa-restroom fa fa-retweet fa fa-rev fa fa-ribbon fa fa-ring fa fa-road fa fa-robot fa fa-rocket fa fa-rocketchat fa fa-rockrms fa fa-route fa fa-rss fa fa-rss-square fa fa-ruble-sign fa fa-ruler fa fa-ruler-combined fa fa-ruler-horizontal fa fa-ruler-vertical fa fa-running fa fa-rupee-sign fa fa-sad-cry fa fa-sad-tear fa fa-safari fa fa-salesforce fa fa-sass fa fa-satellite fa fa-satellite-dish fa fa-save fa fa-schlix fa fa-school fa fa-screwdriver fa fa-scribd fa fa-scroll fa fa-sd-card fa fa-search fa fa-search-dollar fa fa-search-location fa fa-search-minus fa fa-search-plus fa fa-searchengin fa fa-seedling fa fa-sellcast fa fa-sellsy fa fa-server fa fa-servicestack fa fa-shapes fa fa-share fa fa-share-alt fa fa-share-alt-square fa fa-share-square fa fa-shekel-sign fa fa-shield-alt fa fa-ship fa fa-shipping-fast fa fa-shirtsinbulk fa fa-shoe-prints fa fa-shopping-bag fa fa-shopping-basket fa fa-shopping-cart fa fa-shopware fa fa-shower fa fa-shuttle-van fa fa-sign fa fa-sign-in-alt fa fa-sign-language fa fa-sign-out-alt fa fa-signal fa fa-signature fa fa-sim-card fa fa-simplybuilt fa fa-sistrix fa fa-sitemap fa fa-sith fa fa-skating fa fa-sketch fa fa-skiing fa fa-skiing-nordic fa fa-skull fa fa-skull-crossbones fa fa-skyatlas fa fa-skype fa fa-slack fa fa-slack-hash fa fa-slash fa fa-sleigh fa fa-sliders-h fa fa-slideshare fa fa-smile fa fa-smile-beam fa fa-smile-wink fa fa-smog fa fa-smoking fa fa-smoking-ban fa fa-sms fa fa-snapchat fa fa-snapchat-ghost fa fa-snapchat-square fa fa-snowboarding fa fa-snowflake fa fa-snowman fa fa-snowplow fa fa-socks fa fa-solar-panel fa fa-sort fa fa-sort-alpha-down fa fa-sort-alpha-down-alt fa fa-sort-alpha-up fa fa-sort-alpha-up-alt fa fa-sort-amount-down fa fa-sort-amount-down-alt fa fa-sort-amount-up fa fa-sort-amount-up-alt fa fa-sort-down fa fa-sort-numeric-down fa fa-sort-numeric-down-alt fa fa-sort-numeric-up fa fa-sort-numeric-up-alt fa fa-sort-up fa fa-soundcloud fa fa-sourcetree fa fa-spa fa fa-space-shuttle fa fa-speakap fa fa-speaker-deck fa fa-spell-check fa fa-spider fa fa-spinner fa fa-splotch fa fa-spotify fa fa-spray-can fa fa-square fa fa-square-full fa fa-square-root-alt fa fa-squarespace fa fa-stack-exchange fa fa-stack-overflow fa fa-stackpath fa fa-stamp fa fa-star fa fa-star-and-crescent fa fa-star-half fa fa-star-half-alt fa fa-star-of-david fa fa-star-of-life fa fa-staylinked fa fa-steam fa fa-steam-square fa fa-steam-symbol fa fa-step-backward fa fa-step-forward fa fa-stethoscope fa fa-sticker-mule fa fa-sticky-note fa fa-stop fa fa-stop-circle fa fa-stopwatch fa fa-store fa fa-store-alt fa fa-strava fa fa-stream fa fa-street-view fa fa-strikethrough fa fa-stripe fa fa-stripe-s fa fa-stroopwafel fa fa-studiovinari fa fa-stumbleupon fa fa-stumbleupon-circle fa fa-subscript fa fa-subway fa fa-suitcase fa fa-suitcase-rolling fa fa-sun fa fa-superpowers fa fa-superscript fa fa-supple fa fa-surprise fa fa-suse fa fa-swatchbook fa fa-swift fa fa-swimmer fa fa-swimming-pool fa fa-symfony fa fa-synagogue fa fa-sync fa fa-sync-alt fa fa-syringe fa fa-table fa fa-table-tennis fa fa-tablet fa fa-tablet-alt fa fa-tablets fa fa-tachometer-alt fa fa-tag fa fa-tags fa fa-tape fa fa-tasks fa fa-taxi fa fa-teamspeak fa fa-teeth fa fa-teeth-open fa fa-telegram fa fa-telegram-plane fa fa-temperature-high fa fa-temperature-low fa fa-tencent-weibo fa fa-tenge fa fa-terminal fa fa-text-height fa fa-text-width fa fa-th fa fa-th-large fa fa-th-list fa fa-the-red-yeti fa fa-theater-masks fa fa-themeco fa fa-themeisle fa fa-thermometer fa fa-thermometer-empty fa fa-thermometer-full fa fa-thermometer-half fa fa-thermometer-quarter fa fa-thermometer-three-quarters fa fa-think-peaks fa fa-thumbs-down fa fa-thumbs-up fa fa-thumbtack fa fa-ticket-alt fa fa-times fa fa-times-circle fa fa-tint fa fa-tint-slash fa fa-tired fa fa-toggle-off fa fa-toggle-on fa fa-toilet fa fa-toilet-paper fa fa-toolbox fa fa-tools fa fa-tooth fa fa-torah fa fa-torii-gate fa fa-tractor fa fa-trade-federation fa fa-trademark fa fa-traffic-light fa fa-train fa fa-tram fa fa-transgender fa fa-transgender-alt fa fa-trash fa fa-trash-alt fa fa-trash-restore fa fa-trash-restore-alt fa fa-tree fa fa-trello fa fa-tripadvisor fa fa-trophy fa fa-truck fa fa-truck-loading fa fa-truck-monster fa fa-truck-moving fa fa-truck-pickup fa fa-tshirt fa fa-tty fa fa-tumblr fa fa-tumblr-square fa fa-tv fa fa-twitch fa fa-twitter fa fa-twitter-square fa fa-typo3 fa fa-uber fa fa-ubuntu fa fa-uikit fa fa-umbraco fa fa-umbrella fa fa-umbrella-beach fa fa-underline fa fa-undo fa fa-undo-alt fa fa-uniregistry fa fa-universal-access fa fa-university fa fa-unlink fa fa-unlock fa fa-unlock-alt fa fa-untappd fa fa-upload fa fa-ups fa fa-usb fa fa-user fa fa-user-alt fa fa-user-alt-slash fa fa-user-astronaut fa fa-user-check fa fa-user-circle fa fa-user-clock fa fa-user-cog fa fa-user-edit fa fa-user-friends fa fa-user-graduate fa fa-user-injured fa fa-user-lock fa fa-user-md fa fa-user-minus fa fa-user-ninja fa fa-user-nurse fa fa-user-plus fa fa-user-secret fa fa-user-shield fa fa-user-slash fa fa-user-tag fa fa-user-tie fa fa-user-times fa fa-users fa fa-users-cog fa fa-usps fa fa-ussunnah fa fa-utensil-spoon fa fa-utensils fa fa-vaadin fa fa-vector-square fa fa-venus fa fa-venus-double fa fa-venus-mars fa fa-viacoin fa fa-viadeo fa fa-viadeo-square fa fa-vial fa fa-vials fa fa-viber fa fa-video fa fa-video-slash fa fa-vihara fa fa-vimeo fa fa-vimeo-square fa fa-vimeo-v fa fa-vine fa fa-vk fa fa-vnv fa fa-voicemail fa fa-volleyball-ball fa fa-volume-down fa fa-volume-mute fa fa-volume-off fa fa-volume-up fa fa-vote-yea fa fa-vr-cardboard fa fa-vuejs fa fa-walking fa fa-wallet fa fa-warehouse fa fa-water fa fa-wave-square fa fa-waze fa fa-weebly fa fa-weibo fa fa-weight fa fa-weight-hanging fa fa-weixin fa fa-whatsapp fa fa-whatsapp-square fa fa-wheelchair fa fa-whmcs fa fa-wifi fa fa-wikipedia-w fa fa-wind fa fa-window-close fa fa-window-maximize fa fa-window-minimize fa fa-window-restore fa fa-windows fa fa-wine-bottle fa fa-wine-glass fa fa-wine-glass-alt fa fa-wix fa fa-wizards-of-the-coast fa fa-wolf-pack-battalion fa fa-won-sign fa fa-wordpress fa fa-wordpress-simple fa fa-wpbeginner fa fa-wpexplorer fa fa-wpforms fa fa-wpressr fa fa-wrench fa fa-x-ray fa fa-xbox fa fa-xing fa fa-xing-square fa fa-y-combinator fa fa-yahoo fa fa-yammer fa fa-yandex fa fa-yandex-international fa fa-yarn fa fa-yelp fa fa-yen-sign fa fa-yin-yang fa fa-yoast fa fa-youtube fa fa-youtube-square fa fa-zhihu","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"Fontawesome 图标","slug":"Fontawesome-图标","permalink":"https://kingwdy.avosapps.us/tags/Fontawesome-%E5%9B%BE%E6%A0%87/"}],"author":"KINGWDY"},{"title":"关于蚊子","slug":"关于蚊子","date":"2022-05-18T22:48:49.000Z","updated":"2022-05-29T05:50:12.379Z","comments":true,"path":"posts/50391.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/50391.html","excerpt":"","text":"昨天晚上，我在睡梦中，一只”战斗机“——蚊子飞来骚扰我，所以，我就写下这一篇文章。蚊(节肢动物门昆虫纲双翅目蚊科动物)蚊（mosquito）属于双翅目（Diptera）、蚊科（Culicidae），又称“蚊子”，是最重要的医学昆虫类群。蚊分布很广，种类很多，迄今为止全世界已记录蚊虫共3亚科（巨蚊亚科、按蚊亚科、库蚊亚科），35属，3600多种和亚种。中国已发现370余种，其中按蚊、库蚊、伊蚊3个属的蚊种超过半数。 1.基本信息双翅目（Diptera）蚊科（Culicidae）昆虫，有3600多种。因雌蚊吸血而为重要的医学昆虫。传播黄热病、疟疾、丝虫病和登革热。蚊体细长，覆盖鳞片，足细长外观脆弱，口器在长吻内。雄蚊触角丝状，有环毛，一般较雌蚊浓密。雄蚊食花蜜和植物汁液，雌蚊有时亦食，但多数需吸血一次后体内的卵才成熟。不同的蚊种对寄主有不同的偏好，但多种情况下并无严格限制。卵产于水面，孵化为水生幼虫（孑孓）。幼虫以急促扭动动作游泳，吃藻类和有机碎屑，少数肉食性，甚至吃其他蚊。蚊蛹与大多数昆虫不同，能活动，靠胸部的呼吸管呼吸。成蚊从蛹壳钻出后立即交配。寿命依种类而迥异。蚊似乎为寄主的湿气、乳酸、二氧化碳、体热及运动所吸引。蚊似乎靠嗅觉发现宿主。蚊的叫声是翅的快速扇动引起；雌蚊扇动频率较低，以此可被雄性识别。繁殖习性多样。防治方法包括消除孳生地，水上喷洒油层以阻塞孑孓的呼吸管，以及药杀孑孓。室内可用合成有机杀虫药消灭成蚊。世界上完全没有蚊子的国家为冰岛。完全没有蚊子的大洲为南极洲。 2.生物种类蚊属于双翅目（Diptera）、蚊科（Culicidae），是最重要的医学昆虫类群。蚊分布很广，种类很多，迄今为止全世界已记录蚊虫共3亚科，35属，3600多种和亚种。蚊有3个重要的属。按蚊属（Anopheles，疟蚊）是疟疾的唯一媒介，还传布丝虫病和脑炎。静止时喙、头和身体成一直线，但与着落面成一角度，故易于辨认。翅上有不同颜色的鳞片形成斑点。卵单个地产于水面。幼虫体轴与水面平行，通过腹部的后气孔呼吸，无其他多数孑孓的呼吸管。常在植物茂盛的水中繁殖。生活史从18天至数周不等。库蚊属（Culex）是病毒性脑炎的媒介，在热带和亚热带还传布丝虫病。静止时体轴与着落面平行，喙稍弯向下方。翅脉和翅缘有鳞片，但翅的颜色一致。雌蚊腹部末端钝，有缩回的尾须。幼虫细长，有带毛束的呼吸管，头下挂，与水面成45°角。在几乎所有淡水（包括静止的污水）中繁殖。卵在水中集成块状，数目约100多。生活史10～14天，天气冷时可能长些。尖音库蚊（C. pipiens pipiens）：多见于北方，五带淡色库蚊（C. pipiens quinquefasciatus）多见于南方。伊蚊属（Aedes）：传布黄热病、登革热和脑炎。着落时身体与表面平行而喙向下，与库蚊相似。翅单色，与库蚊的区别在于胸部呈银色，有白斑纹，有气孔后刚毛。雌蚊腹端尖，有可突出的尾须。幼虫短粗，呼吸管有一对毛束，头下垂与水面成45°角。通常在洪水、水坑或盐沼中繁殖，卵可耐长期干旱。生活史可短到仅10天，气候凉时可长达数月。埃及伊蚊（A. aegypti）：为黄热病的重要媒介，足上有白带，胸腹部有斑点。可在花盆、丢弃的汽车外胎等各种容器中繁育。盐沼伊蚊（A. sollicitans），A. taeniorhynchus及背点伊蚊（A. dorsalis）：是盐沼的主要蚊种，繁殖快，善飞，骚扰动物和人。我国已发现蚊类有18属374种（亚种）。蚊类和其它双翅目昆虫的主要区别是：1.喙细长，比头部长几倍，便于吸食液体食物或穿刺吸血。2.翅脉特殊，被有鳞片。3.足细长，足及身体其它部分均有鳞片。 3.形态结构3.1 形态蚊是小型昆虫，成蚊体长约1.6～12.6mm，呈灰褐色、棕褐色或黑色，分头、胸、腹3部分。1.头部：似半球形，有复眼和触角各1对。触角（antenna）分15节，第1节称柄节（scape），第2节称梗节（torus），第3节以后各节均细长称鞭节（flagellum）。各鞭节具轮毛，雌蚊的轮毛短而稀，雄蚊的轮毛长而密。在雌蚊触角上，除轮毛外，还有另一类短毛，分布在每一鞭节上，这些短毛对空气中化学物质的变化有反应，对二氧化碳和湿度尤其敏感，在雌蚊寻觅吸血对象时起重要作用。触须1对，两性按蚊的触须均与喙等长，雄蚊的触须末端膨大；库蚊、伊蚊的雌蚊触须甚短，不足喙之一半；库蚊的雄蚊触须长于喙，伊蚊的雄蚊触须与喙等长。蚊的口器常称为喙（proboscis），属刺吸式口器，由上内唇、舌各1个，上、下颚各1对，共同组成细长的针状结构，包藏在鞘状下唇之内。上内唇细长，腹面凹陷构成食物管的内壁，舌位于上内唇之下，和上颚共同把开放的底面封闭起来，组成食管，以吸取液体食物。舌的中央有一条唾液管。上颚末端较宽如刀状，其内具细锯齿，是蚊吸血时用以切割皮肤的工具。下颚末端较窄呈细刀状，其末端具有锯齿，在吸血时随皮肤切开之后，起锯刺皮肤的功用。下唇末端裂为二片，称唇瓣（labella）。当雌蚊吸血时，针状结构刺入皮肤，而唇瓣在皮肤外挟住所有刺吸器官，下唇则向后弯曲而留在皮外，具有保护与支持刺吸器的作用。雄蚊的上、下颚退化或几乎消失，不能刺入皮肤，因而不适于吸血。2.胸部：分前胸、中胸和后胸。每胸节各有足1对，中胸有翅1对，后胸有1对平衡棒，是双翅目昆虫的特征。中胸、后胸各有气门1对。中胸特别发达，其背板几乎占据全胸背，由前而后依次为盾片、小盾片及后背片（图18-4）。库蚊和伊蚊的小盾片呈三叶状，按蚊的小盾片后缘呈弧形。蚊翅窄长，膜质。翅脉简单，上有鳞片覆盖。翅的后缘有较长的鳞片，称翅遂。鳞片可形成麻点、斑点或条纹，是按蚊分类的重要依据。蚊足细长，自前而后分别称前足、中足和后足。足上常有鳞片形成的黑白斑点和环纹，为重要分类特征。3.腹部：分11节，第一节不易察见。第2～8节明显可见，在其背面，有的蚊种具有由鳞片组成的淡色横带、纵条或斑。最末3节变为外生殖器；雌蚊腹部末端有尾须1对，雄蚊则为钳状的抱器，构造复杂，是鉴别蚊种的重要依据。3.2 内部结构蚊具有消化、排泄、呼吸、循环及生殖等系统。1.消化系统：包括口腔、咽、食管、胃、肠及肛门。胃是消化道的主要部分，食物的消化与吸收均在胃内进行。在前脑内有1对唾腺，各分3叶，每叶有一小唾腺管，最后汇合成总唾腺管，通入舌内。唾腺分泌和贮存唾液。唾液中含有多种酶，包括抗血凝素（anticoagulin），溶血素（haemolysin）和凝集素（agglutinin）等。2.生殖系统：雄蚊有睾丸1对，自每一睾丸发出的输精管在远端膨大为储精囊，两者会合成射精管。射精管远端为阴茎，阴茎两侧有抱器。雌蚊有卵巢1对。两输卵管在汇成总输卵管前的膨大部称壶腹（ampulla）。总输卵管与阴道相连。在阴道远端有受精囊（spermatheca）和1对副腺的开口。阴道则开口于第8、9腹节交界处的腹面。每个卵巢由多个卵巢小管组成。每个卵巢小管包括3种发育程度不同的卵泡（follicle）。顶端的为增殖卵泡，中间为幼小卵泡，靠近输卵管的为成卵卵泡。卵泡依次逐个发育成熟。当成卵卵泡中的卵成熟排出后，幼小卵泡，又发育为成卵卵泡，每排出一次卵，在卵巢小管上就留下1个膨大部（inflation）。4.成长过程蚊的发育为完全变态，生活史分四个时期，即卵、幼虫、蛹和成虫。前三个时期生活于水中，成虫生活于陆地。 1．卵蚊子的卵根据种类的不同可能产在水面、水边或水中三种不同的位置，水面上的如按蚊和家蚊，水边的如伊蚊。按蚊和家蚊约在二天内孵化，而伊蚊则在三至五天。雌蚊产卵于积水中。蚊卵小，长不足1mm。按蚊卵呈舟形，两侧有浮囊，产出后浮在水面。库蚊卵呈圆锥形，无浮囊，产出后粘在一起形成卵筏。伊蚊卵一般呈橄榄形，无浮囊，产出后单个沉在水底。蚊卵必须在水中才能孵化，在夏天通常经2～3天后幼虫孵出。2．幼虫蚊子的幼虫称为孑孓。孑孓用吸管呼吸。摄食有机物及微生物，口的刷毛会产生水流，流向嘴巴。这个时期约维持10～14天，经4次蜕皮后变成蛹。初孵出的幼虫长约1.5mm，幼虫共分四龄。经3次蜕皮，成为第四龄幼虫时，体长可较第一龄幼虫增长8倍。幼虫体分为头、胸、腹3部，各部着生毛或毛丛。头部有触角、复眼、单眼各1对，口器为咀嚼式，两侧有细长密集的口刷，借助口刷的迅速摆动以摄取水中的食物。胸部略呈方形、不分节。腹部细长，可见9节。前7节形状相似，第8节背面有气孔器与气门或细长的呼吸管，是幼虫期分类的重要依据。库蚊呼吸管细长，伊蚊呼吸管粗短；按蚊缺呼吸管，但有气门，各腹节背面有掌状毛（float hair），有漂浮作用。在气温30℃和食物充足的条件下，幼虫期经约5～8天发育，蜕皮4次变为蛹（pupa）。3．蛹侧面观呈逗点状，胸背两侧有1对呼吸管，是分属的重要依据（图18-3）。蚊蛹不摄食，但可在水中游动，靠第一对呼吸角呼吸，常停息于水面，遇惊扰时迅速潜入水中。蛹的抵抗力强，在无水情况下，只要保持一定的湿润，仍能发育羽化为成蚊。经二天完全成熟。4．成蚊新羽化的成蚊经1～2天发育，即行交配、吸血、产卵。自卵发育到成蚊所需时间取决于温度、食物及环境等诸因素，在适宜条件下约需9～15天，一年可繁殖7～8代。新出生的蚊子在翅膀没有硬之前无法起飞（羽化）。雄蚊在羽化后24小时之内其腹节第八节以后全部反转180°完成交配姿势。交配的动作因种类而有不同，有的黄昏时刻在田野广旷之处形成蚊柱作群舞。蚊柱不一定单纯由一种雄蚊聚集而成，往往有几种不同蚊种集合而成。此时雌蚊见到群舞光景，就飞近蚊柱与同种雄蚊交配离去。交配通常需要10～25秒。雌蚊一生只交配一次，交配后由雄性副腺分泌的液体，形成交配栓于雌性交配孔内，但逐渐溶解，约于24小时后完全消失。一生只交配一次，后其一生（100多天后）产下的卵尚可受精。 5.生理生态5.1 孳生习性 成蚊产卵的地点就是幼虫的孳生地，蚊虫孳生地的区分在调查和防制上有重要的意义。各种蚊虫对孳生环境有一定的选择，可分为5种类型：（1）田塘型：田塘型主要包括稻田、沼泽、芦苇塘、各类池塘、草塘、人工湖等大型或较大积水场所，是中华按蚊、三带喙库蚊的主要孳生地。（2）缓流型：缓流型主要包括清洁的小溪、灌溉沟渠、溪床、积水梯田、渗水坑岸边等，是微小按蚊的主要孳生地。（3）丛林型：丛林型主要包括丛林浓荫下的山溪、蔽荫的山涧溪床、石穴、泉潭等小型清洁积水体，是大劣按蚊的主要孳生地。（4）污水型：污水型主要包括洼地积水、阴沟、下水道、污水坑、沙井、浅潭、清水粪缸、积肥坑、污水池，是淡色库蚊和致倦库蚊的主要孳生地。（5）容器型：包括积水的人工容器（如缸、罐、坛、桶、盆、碗、瓶、盒、废旧轮胎等）和植物容器（如树洞、竹筒、叶腋、椰子壳等可以积水的部分），是埃及伊蚊和白纹伊蚊的主要孳生地。5.2 成蚊交配 蚊羽化后1～2天便可交配，交配常在未吸血之前。交配是在群舞时进行的，群舞是几个乃至几百、数千个雄蚊成群地在草地上空、屋檐下或人畜上空飞舞的一种性行为。雌蚊飞入舞群即与雄蚊完成交配，然后离去。通常雌蚊一生只需交配一次。蚊的活动主要是指寻觅宿主吸血的行为，其活动能力与温度、湿度、光照及风力等有关。多数蚊种在清晨、黄昏或黑夜活动，伊蚊多在白天活动。在我国偏嗜人血的按蚊，如微小按蚊、嗜人按蚊、大劣按蚊，其活动高峰多在午夜前后。兼嗜人畜血的多在上半夜，如中华按蚊。嗜人按蚊吸血活动始于日落后0.5～2小时，可持续至黎明5时，吸血高峰通常在上半夜。5.3 吸血习性 雄蚊不吸血，只吸植物汁液及花蜜。雌蚊必须吸食人或动物的血液卵巢才能发育、产卵，同时在吸血过程中获得病原体而成为传播媒介。蚊虫对宿主的选择性因蚊种而异。大劣按蚊、嗜人按蚊、白纹伊蚊、埃及伊蚊、致倦库蚊、淡色库蚊等嗜人血；中华按蚊、三带喙库蚊等偏嗜家畜血。偏嗜人血的蚊可兼吸动物血，嗜吸动物血的也可兼吸人血。即使是同一蚊种，其吸血习性也可发生变化，如在海南岛的微小按蚊主吸人血并内栖，而大陆的微小按蚊则不同程度地吸取家畜血液并外栖。这种差别也反映在它们的媒介效能上，即偏嗜人血的蚊，传播人体疾病的机会较多，往往是蚊媒疾病的主要媒介。因蚊能兼吸人和动物的血，故能传播人兽共患疾病，如流行性乙型脑炎和黄热病。蚊吸血习性是判断蚊与疾病关系的一项重要内容。5.4生殖营养周期和生理龄期 蚊每次从吸血到产卵的周期称为生殖营养周期。生殖营养周期分3个阶段：①寻找宿主吸血；②胃血消化和卵巢发育；③寻找孳生地产卵。三个阶段所需的时间主要决定于胃血消化和卵巢发育的速度，并受栖息场所内的温度和湿度影响。正常情况下，两次吸血的间隔时间与其卵巢周期发育相一致，称为生殖营养协调，通常约为2天。但也有个别蚊种需吸血2次以上才使卵巢发育成熟。一般蚊一生中有生殖营养周期3～7次，产卵总数几十个至几百个不等。雌蚊的生殖营养周期的次数是蚊虫存活时间的一个度量指标，称为生理龄期。蚊虫每排卵一次，在卵巢小管上就留有一个膨大部，所以根据卵巢小管上膨大部的数目多少，可判断雌蚊的生理龄期。生理龄期的次数越多，传播疾病的机会也越多，故生理龄期的判断在流行病学上具有重要意义。5.5 栖息习性 雌蚊吸血后即寻找比较阴暗、潮湿、避风的场所栖息。室内多栖于蚊帐内、床下、屋角、门后、墙面及杂物上。室外多栖于草丛、洞穴、树下及人畜房舍附近的农作物中。习性大致分为3类：①家栖型：蚊吸饱血后仍停留室内，待胃血消化、卵巢成熟才飞离房舍，寻找产卵场所。如淡色库蚊、嗜人按蚊。②半家栖型：吸血后稍在室内停留，然后飞出室外栖息。如中华按蚊、日月潭按蚊。③野栖型：自吸血至产卵完全在野外。如大劣按蚊。此分型并非绝对，即使同一蚊种，因地区、季节或环境的不同，其习性也会改变。蚊虫的活动和栖息习性关系到杀虫剂的应用效果，特别是室内滞留喷洒和蚊帐处理的效果。5.6季节消长和越冬 蚊的季节消长与温度、湿度和雨量等密切相关。我国气候南北悬殊，各蚊种季节消长亦不同。即使在同一地区的不同蚊种，或不同地区的同一蚊种，也因蚊本身的习性和环境因素的影响而有不同的季节消长情况。如中华按蚊，在长江中下游一带，每年3月初出现第一代幼虫，成蚊密度在5月起始上升，7月达高峰，9月以后下降；但在台湾省每年4月至9月间有两个高峰。我国大多数地区在6～9月是成蚊密度高峰季节。媒介蚊虫的季节消长与疾病流行的季节有关。越冬是蚊对气候季节性变化而产生的一种生理适应现象。蚊本身规律性生理状态受到阻抑，进入休眠或滞育状态。以成蚊越冬的雌蚊表现为不吸血，卵巢停止发育，脂肪体增大，隐匿于山洞、地窖、墙缝、暖房、地下室等阴暗、温暖、潮湿、不通风的地方，不食不动，新陈代谢降至最低点；到次年春暖时，蚊开始复苏，飞出吸血产卵。以成蚊越冬的有致倦库蚊、淡色库蚊、中华按蚊等；以卵越冬的多见于伊蚊，嗜人按蚊也可以卵越冬；以幼虫越冬的多见于清洁水体孳生的蚊种，如微小按蚊，骚扰阿蚊的幼虫也能越冬。在热带及亚热带地区，全年平均温度均达10℃上，蚊虫无越冬现象。越冬机制复杂，受外界因素如温度、光照、内分泌调节、种的遗传性等各种因素的影响。6.疾病病种蚊类不仅吸血骚扰，而且传播多种疾病，在我国，重要的传病蚊种如下：嗜人按蚊（An．anthropophagus）成虫灰褐色，雌蚊触须较细，末端两白环宽，常相互连接；翅前缘基部一致暗色；后足跗节仅有窄端白环；腹侧膜上无T形暗斑。该蚊是我国独有蚊种，分布在北纬34°以南地区,主要孳生于植物遮荫较好、水质清凉的静水或缓流小积水中，如稻田、茭白田、水坑、灌溉沟等。是疟疾和马来丝虫病的重要媒介,传疟作用高于中华按蚊。中华按蚊（Anopheles sinesis）雌蚊触须具4个白环，顶端2个宽，另2个窄；翅前缘具2个白斑，尖端白斑大；腹侧膜上有T形暗斑；后足1～4跗节具窄端白环。分布于除新疆和青海以外的全国各省区，是广大平原，特别是水稻种植区疟疾和马来丝虫病的重要媒介。虽然不是高效的传播者，但由于种群数量大，可引起暴发性流行。幼虫主要孳生于缓流清水中，如小溪、沟渠、渗出水等。微小按蚊（An．minimus）棕褐色小到中型蚊种。雌蚊触须具3个白环，末端两个白环等长并夹一约等长的黑环；触须后半部有一较窄白环，上述黑、白环也可有变化；翅前缘具4个白斑；各足跗节一致暗色。分布在北纬32°以南山地和丘陵地区，是该地区疟疾的主要媒介。大劣按蚊（An.dirus）灰褐色中型蚊种。雌蚊触须具4个白环，顶端白环最宽。翅前缘脉具6个白斑，第6纵脉有6个黑斑。各足股节和胫节都有白斑，后足胫节和第1跗节关节处有一明显的宽白环。大劣按蚊是热带丛林型按蚊，主要孳生于丛林边缘荫蔽的溪床积水、浅潭、小池等处。大劣按蚊在我国主要分布于海南岛以及云南西部和广西南部的少数地区，通常有较高的自然感染率，是海南岛疟疾媒介防制的主要对象。淡色库蚊（Culex pipiens pallens）和致倦库蚊（Cx．P.quinquefasciatus）褐色、红棕或淡褐中型蚊种。成蚊的共同特征是：喙无白环；各足跗节无淡色环；腹部背面有基白带。致倦库蚊和淡色库蚊的形态、生态习性近似，但在我国的地理分布不同，以北纬32～34°分界，致倦库蚊分布在南方广大地区，淡色库蚊分布于长江流域及以北地区，在分界区可有它们的中间型。两者都被称作“家蚊”，是室内常见的刺叮吸血蚊虫，是城市灭蚊的主要对象之一。幼虫主要孳生在小型，特别是污染的坑洼、水沟以及容器积水。淡色库蚊和致倦库蚊是班氏丝虫病的主要媒介。三带喙库蚊（Cx．tritaeniorhynchus）棕褐色小型蚊种。喙中段有一宽阔白环，触须尖端为白色；各足跗节基部有一细窄的白环；第2～7腹节背面有基部淡色带。广布除新疆自治区以外的全国各省区，是绝大多数地区稻田蚊虫的优势种，但也广泛孳生在沼泽、池塘、灌溉渠、洼地积水等处。雌蚊人畜血液兼吸，而偏吸牛、马、猪、犬等血液，是我国流行性乙型脑炎的主要媒介。白纹伊蚊（Aedes albopictus）中小型黑色蚊种，有银白色斑纹。在中胸盾片上有一正中白色纵纹，从前端向后伸达翅基水平的小盾片前而分叉。后跗1～4节有基白环，末节全白。腹部背面2～6节有基白带。分布较广，北达沈阳（约北纬41.8°），西北至宝鸡，西南到西藏自治区，但以北纬34°以南为常见，多孳生在居民点及其周围的容器（如缸、罐、盆、废弃轮胎等）和植物容器（如竹筒、树洞等）以及石穴等小型积水中。埃及伊蚊（Ae.aegypti）深褐或黑色而具银白色或白色斑纹的中型蚊种。中胸背面两肩侧有一对由白宽弯鳞形成的长柄镰刀状斑，两白斑之间有一对金黄色纵线，形成一弦琴状斑纹。分布限于北纬22°以南的海南，广东、广西部分地区和台湾省的南部。主要孳生在室内及其周围容器积水中。雌蚊偏吸人血，而且在一个生殖营养周期中有多重吸血的习性，因而增加了传播疾病的机会。★★★★★埃及伊蚊和白纹伊蚊是我国登革热的媒介。7.防制原则编辑 播报由于蚊虫的抗药性愈来愈严重，加之杀虫剂对环境的污染及对生态平衡的影响，单纯依赖化学灭蚊的做法已不可取，当前多采用综合治理的办法，包括环境治理、化学防制、生物防制及法规防制等。7.1 环境治理 通过环境处理和环境改造改变孳生环境。对稻田型孽生地的处理，宜采用间歇灌溉、铲除岸边杂草和稻田养鱼；对污水型草生地处理，可通过疏通下水道、污水沟、改阳沟为暗沟并封闭、污水井加盖、填平污水池等方法达到减少蚊虫孳生地的目的。对容器型孳生地则需采用搞好环境卫生，平洼填坑、堵塞树洞、处理竹筒、翻缸倒罐及清除废弃器皿、加强轮胎堆放的管理等措施。7.2化学防制 双硫磷、倍硫磷、毒死摔、杀螟松和辛硫磷等是杀灭蚊幼虫的主要药物。灭成蚊有下列方法：（1）室内速杀：通常采用化学药物复合配合剂，用喷雾器、气雾罐等器械喷洒室内或蚊虫栖息场所。气雾罐的复合剂配方通常由击倒剂、致死剂、增效剂以及香精、去臭煤油和抛射剂等组成。（2）室内滞留喷洒灭蚊：多用于媒介按蚊的防制，是防制疟疾的主要措施之一，对家栖蚊类有明显效果。常用的滞留喷洒杀虫剂有DDT、马拉硫磷、甲嘧硫磷和拟除虫菊酯类等。可湿性粉剂配制的水悬剂适于喷洒吸水性强的泥墙、砖墙，乳剂适用于木板、水泥等表面光滑的墙面。80年代起，在我国使用溴氰菊酯或其他拟菊酯类杀虫剂浸泡蚊帐或喷洒蚊帐，经现场试验，对降低嗜人按蚊、中华按蚊及大劣按蚊密度和控制疟疾发病率效果明显，是近年抗疟工作中媒介防制的重要进展。（3）室外灭蚊：一般用于某些蚊媒病，如登革热或乙型脑炎流行时，进行区域性或病家室内外及其周围处理。在疫区大面积采用超低容量喷洒法快速灭蚊，在居民点一般用辛硫磷及马拉硫磷合剂；在村庄周围可用马拉硫磷乳油。7.3 生物防制 生物防治包括放养食蚊鱼类和施放生物杀虫剂。例如在水沟、水池、河溪放养柳条鱼，在荷花缸、太平缸及宾馆公园内的小型水池放养观赏鱼类，在饮用水缸放养塘角色、尼罗非鱼、中华斗鱼，在稻田内放养鲤鱼、非洲鲫鱼以及在灌溉沟内放养草鱼等。对一时不能改造的污水池、蓄水池、消防池以及城市的一般水池可采用投入化学杀虫剂或生物杀虫剂如苏云金杆菌（Bacillus thuringiensis）Bti-14株或球形芽胞杆菌（B.sphaericus，Bs）制剂的方法。7.4 法规防制 利用法律或条例规定防止媒介蚊虫的传入、对蚊虫防治进行监督以及强制性的灭蚊。特别要加强机场和港口的检疫，防止媒介携带入境，通过运输工具扩散。8.生活习性蚊子还有着以下的生活习性。8.1 孳生习性蚊虫都孳生于水中，不同性质的水质和积水类型孳生不同种类的蚊虫。治理或改造孳生地是防蚊的制本措施。 8.2 吸血习性蚊也是通过吸血传播疾病的，了解蚊的吸血习性能察知其与疾病的关系。只有雌蚊才吸血，雌蚊必须吸血其卵巢才能发育，繁衍后代。雌蚊多在羽化后2～3天开始吸血，温、湿度，光照等多种因素可影响蚊的吸血活动。气温在10℃以上时开始吸血；一般伊蚊多在白天吸血，按蚊、库蚊多在夜晚吸血；有的偏嗜人血，有的蚊则爱吸家畜的血，但没有严格的选择性，故蚊可传播人兽共患病。8.3 栖息习性掌握蚊的栖息习性是制定灭蚊措施的依据。蚊羽化后和吸血后均须寻找地方栖息，一般讲蚊喜欢在隐蔽、阴暗和通风不良的地方栖息，如屋内多在床下、柜后、门后，墙缝以及畜舍、地下室等，室外多在草丛、山洞、地窖、桥洞、石缝等处。据吸血后栖息习性不同把蚊分为以下三种：家栖型：如微小按蚊、嗜人按蚊。半家栖型：如中华按蚊、日月潭按蚊等吸血后有些在室内，有些到室外栖息。野栖型：如大劣按蚊、白纹伊蚊等吸血后要飞到室外消化胃内的血液。9.蚊子寿命蚊子的寿命，在自然条件下雄蚊交配后约7～10天，但在实验室可活到1至2个月；雌蚊至少可活1至2个月，在实验室曾活到4个月。10 蚊子危害在蚊子中，最可恶的要算吸人血的蚊子。雌雄蚊的食性本不相同，雄蚊“吃素”，专以植物的花蜜和果子、茎、叶里的液汁为食。雌蚊偶尔也尝尝植物的液汁，然而，一旦婚配以后，非吸血不可。因为它只有在吸血后，才能使卵巢发育。所以，叮人吸血的只是雌蚊。蚊子的一对触须和三对步足上，分布着很多轮生的感觉毛，每根感觉毛上密集地排列着圆形或椭圆形细孔。黑夜里，蚊子可以凭着这种传感器感知空气中人体散发出来的二氧化碳，在1‰秒内作出反应,就能正确敏捷地飞到吸血对象那里。蚊子在吸血前，先将含有抗凝素的唾液注入皮下与血混合，使血变成不会凝结的稀薄血浆，然后吐出隔宿未消化的陈血，吮吸新鲜血液。假如一个人同时任意给1万只蚊子叮咬,就可以把人体的血液吸完。蚊子吸人血，还会“挑肥拣瘦”，专门寻找合乎“口味”的对象。蚊子在熟睡的人们的枕边“嗡嗡”盘旋时，依靠近距离传感器来感应温度、湿度和汗液内所含有的化学成分。所以雌蚊首先叮咬体温较高、爱出汗的人。因为体温高、爱出汗的人身上分泌出的气味中含有较多的氨基酸、乳酸和氨类化合物，极易引诱蚊子。蚊子主要的危害是传播疾病。据研究，蚊子传播的疾病达80多种之多。在地球上，再没有哪种动物比蚊子对人类有更大的危害。疟疾这种病是由疟蚊传染的。疟疾又称瘴气。据1935年卫生署的调查，在瘴气盛行的区域里，居民血液内有疟原虫的占50%，患恶性疟疾的占72%。1936年江苏皋县因患疟疾死亡二万人左右，1876年开凿巴拿马运河时曾因黄热病及疟原死了无数的工人，以致1889年不得已而停工。后经昆虫学家解决了蚊子的问题才得以继续完成运河工程。1930年远东热带病医学会的报告指出：泰国每年死于虎口约50人，而死于疟疾者达五万人。蚊子是怎样把病原传入人体的呢？当疟蚊吸食患有疟疾病人的血液，也把其中的疟原虫（疟疾的病源）吸进体内。它们再咬人时，疟原虫又从蚊子的口中注入被咬者的体内了。十天以后，疟原虫开始在接近皮肤的血管内出现。它们在患者的红血球内繁殖，分裂成大量的小原虫，这些小原虫破坏红血球并释放一种毒素。每个小疟原虫又侵入其它红血球而继续繁殖，使得病人体内疟原虫和毒素越来越多，引起患者发冷和发烧。得了疟疾的病人首先发冷，全身抖个不停，但体温表测验体温是高的。大约经过一小时，病人才觉得发烧，这时体温继续上升，三、四小时之后开始出汗、体温下降，再过几小时病人觉得松快，病好像过去了，其实这时小原虫已侵入新的红血球，又开始繁殖。当疟原虫再次破坏红血球而出时病人又发病而形成第二回合。除非获得适当的治疗否则这种发作将有规律地继续下去而令人痛苦不堪。疟疾给人类造成的损失是相当大的，病人身体衰弱，工作效率低，严重时还会丧失生命。目前用药品已可治疗和预防此病，但最好的办法是消灭传染这种疾病的蚊子——疟败。流行性乙型脑炎（这是一种由滤过性病毒引起的急性传染病），也是由蚊子传带的，这种病又叫日本乙型脑炎，普通都把它叫做大脑炎。患者有发烧、头疼、呕吐、抽风、昏睡、昏迷等现象。治疗上没有特效药品，所以病死率相当高。蚊子咬吸了合有本病毒的人或动物的血液后，经过一个相当时期就具有了感染性，再叮咬没有免疫力的人时可以使被咬者发病。传染这种病的蚊子叫库蚊和伊蚊。防治本病的发生与流行除注射疫苗、防治传染外，必须大力进行灭蚊，消灭传播者。此外，库蚊和按蚊还传播丝虫病（象皮肿）。我国能传播疾病的蚊大致可分为三类：一类叫按蚊，俗名疟蚊，主要传播疟疾。据不完全统计，1929年的1年内，全世界因患疟疾致死的约200万人。另一类叫库蚊，主要传播丝虫病和流行性乙型脑炎。第三类叫伊蚊，身上有黑白斑纹，又叫黑斑蚊，主要传播流行性乙型脑炎和登革热。在夏天适宜的环境里，雌蚊将卵产在水中，一二天后就孵化成幼虫，叫孑孓。孑孓经过四次蜕皮后变成蛹，蛹继续在水中生活两三天，即可羽化成蚊。完成一代发育大约只要10～12天，一年可繁殖七八代。雌蚊多在羽化后2-3天开始吸血，温度、湿度、光照等多种因素可影响蚊的吸血活动。气温在10°C以上时开始吸血；一般伊蚊多在白天吸血，按蚊、库蚊多在夜晚吸血；有的偏嗜人血，有的蚊则爱吸家畜的血，但没有严格的选择性，因此蚊可传播人兽共患病。科学家们从很早以前就发现二氧化碳对蚊子有很强的吸引作用，但是，仅仅是二氧化碳还不能说明全部问题，因为事实表明毕竟蚊子更爱叮咬人们的手臂和腿脚。因此，二氧化碳的作用固然不可忽视，但是皮肤肯定还释放了其他对蚊子更充满诱惑力的物质。科学家发现蚊子对一些混合物的反应非常剧烈，在他们所实验的346种物质中有三种特殊化学物质的混合在实验中每次都能吸引90%的蚊子。而伯尼尔发现他自己的胳膊和手却只吸引7只蚊子。“而有时候将30种物质混合蚊子却一点都不被吸引”，伯尼尔说。但是，在这项实验中科学家们始终没有发现任何可以100%吸引蚊子的引诱剂。研究人员还发现可以释放出类似人的体味的混合物对蚊子有更高的吸引力。但是，这离制造出更好的引诱剂还差得很远。因为引诱剂必须得比在它附近的人体对蚊子更具吸引力才能达到效果，伯尼尔等人说“接近人体是很困难的一件事，我们到现在还无法做到。”消灭蚊子是保证人的身体健康，避免疾病传播的关键。蚊子的一生经过卵，幼虫（孑孓），蛹、成虫四个时期。蚊喜欢把卵产在清水中，如小河水，雨水洼、水塘、池沼、稻田及山涧流水等处；在温暖的季节里，卵大约三天就可孵化为孑孓并开始吃水里生长的极小的微生物及原生动物等。它们靠着身体尾端的两个气孔靠近水面吸取空气。孑孓经过蜕皮，最后停止吃东西、活动减少而变为蛹。大约两三天后，蛹又来到水面蜕去皮而羽化为成虫（就是蚊子）飞出来。雌雄交配大多在清晨或傍晚，先是雄蚊围绕矮树顶，屋檐、窗口或空旷处成群结队地飞，雌蚊看准机会加入队伍，在飞行中很快进行交配。雄蚊只吸草汁，花蜜过活，不吸血。雌蚊在交配后必须吸血(人或动物的血)卵才能发育成熟，所以只有雌蚊才能传播疾病。雌蚊饱吸一次血能产一次卵，一生可产卵六至八次，每次200～300粒，所以早期消灭一只蚊子，等于消灭了几百只，上千只。知道蚊子的生活史与繁殖场所是很重要的。我们可以应用这些知识大力灭蚊。蚊子的幼虫最易扑灭，因为孑孓必须生活在水中，如能填平低地，疏导积水，经常清理存水的器皿，孑孓无处生存，灭蚊就一定会收到好效果。黄昏天暗蚊子开始往屋内飞，所以这时灭蚊效果最好。而屋内墙角、天花板、床底和座椅背后等是蚊子最喜欢躲的地方，因此，喷射气雾剂的时候，要特别留意。11 应对方法在了解蚊子的生活习性之后，那么有什么对付蚊子的好方法呢？下面就教几招：物理驱蚊第一招：消灭蚊子生存环境（对于在宿舍就无办法啦，下面太多草同垃圾）有的居住环境差，周围死水多，需要经常喷药，这不仅灭蚊难度大，还会因此花费很多钱。所以不妨用一些物理方法灭蚊。解决办法：及时清理垃圾，不要留死水。物理驱蚊第二招：肥皂水关上门窗，在窗前放置一个盆子，盆中加点混合洗衣粉的水，第二天，水盆中就会有一些死去的蚊子。每天持续使用这种方法，几乎可以不用再喷杀虫液去杀蚊子了。而且蚊子也会越来越少。物理驱蚊第三招：大蒜、维生素B还有两件驱蚊的制胜法宝，您不可不试，这就是大蒜、（花生）维生素B。物理灭蚊第四招：盐水、牙膏如果你一不小心还是被蚊子给咬了，也不要急着用手抓。来一点盐水或牙膏，涂在患处可以迅速帮你止痒。我们看看另一种办法——把用过的失去药力的蚊香药片，轻轻滴上几滴风油精，插上电源，就能达到较强的驱蚊效果，又节约药片。遇上停电还可以把用过的一两片药片，一块点燃，几分钟后，就能起到驱蚊灭蚊的效果。蚊毒遇到高温即可解，被蚊子咬过后，蚊毒最怕高温，立即用热毛巾敷5分钟就可以了。或者用热水瓶瓶塞（瓶里面当然要有热水）稍烫，点敷小包，以不烫伤为准。3～5分钟即可。以上省钱灭蚊法你也可以试试。如果你习惯使用喷雾剂对付蚊子，就要选择最佳时间和重点部位来灭蚊。12 传播肝炎生物通编译：一些无法解释的丙型肝炎感染病例可能是由于蚊子叮咬引起的吗？研究者发现病毒可以在蚊子的细胞中结合并进行复制，为这一可能提供了某种程度上的证据。但是，许多专家不同意蚊子可以传播丙肝病毒的观点。全世界大约有17000万人被丙性肝炎病毒感染，这种病毒导致患者的肝脏炎症，从而最终可能导致肝硬化和肝癌。大多数情况下这种病毒是通过感染的血液制品和污染的针头传播的，但是在大约20%的感染者中不存在这样的危险因素。丙性肝炎属于黄病毒属，而这个属的病毒中包括可通过昆虫传播的病毒，如西尼罗病毒，登革热病毒和黄热病毒。这一点使得由法国Université Joseph-Fourier Grenoble I in La Tronche的Emmanuel Drouet领导的一个研究组开始怀疑是否丙性肝炎病毒可以在蚊子细胞中复制。研究者们从一个丙性肝炎病毒感染者的体内分离到病毒，并将其加入到Aedes pseudoscutellaris蚊子的细胞和非洲绿猴的肾细胞中，这两种细胞系都是其它黄病毒常用的培养细胞系。出版的Journal of Medical Virology中，这个研究组报道说通过测定感染后长达28天时间内的病毒的RNA水平，病毒可以结合蚊子和猴的细胞并在细胞内进行复制。相反在人B细胞活肝癌细胞中大约一周后感染失败。Drouet说，这可能表明蚊子传播丙型肝炎病毒的可能性是存在的，尽管还没有人在蚊子体内发现丙型肝炎病毒。美国军队感染性疾病医学研究中心的昆虫学家Michael Turell说，由于丙型肝炎病毒与黄病毒之间的关系，这种病毒能够在蚊子细胞中复制并不令人感到出乎意料。许多科学家强烈反对蚊子可以传播丙型肝炎的看法。他们指出丙型肝炎病毒感染没有地域或季节分布的特点，而这些是蚊子传播的特征。他们认为目前一些无法解释的病例可能仅仅是性传播或者隐瞒了吸毒的事实。约翰霍普金斯医学院的流行病学家David Thomas说：“现在仍然缺乏蚊子传播这种疾病的证据。”13 驱蚊方法赢家生活小参谋：有关专家建议，夏季不妨采用以下安全且天然的驱蚊方法：1.用蚊帐或纱窗把蚊子隔绝在外，蚊帐既能避蚊又能防风，还可吸附飘落的尘埃，尤其适合儿童。纱窗则可让新鲜空气进入室内，同时让有害的烟雾流到室外去。2.在卧室内放置几盒揭盖的清凉油和风油精，或摆放一两盆盛开的夜来香、茉莉花、米兰、薄荷或玫瑰等，蚊子会因不堪忍受它们的气味而躲避。3.室内安装橘红色灯泡，或用透光的橘红色玻璃纸套在灯泡上，开灯后蚊子会因惧怕橘红色光线而逃离。4.用空酒瓶或口盅装上糖水或啤酒放在阴暗处，蚊子闻到甜酒味就会往瓶子里钻，会被糖水或啤酒粘住致死。5.生吃大蒜、口服维生素B，通过人体生理代谢从汗液排出体外，会产生一种蚊子不敢接近的气味。据了解，化学合成驱蚊剂，如蚊香、杀蚊（虫）气雾剂等，存在刺激性、不正确使用容易引起神经系统疾病、皮肤病等疾病，遇到劣质产品甚至还能致癌。天然驱蚊剂如驱蚊花露水等，虽然具有清凉、止痒、驱蚊的功能，但因其液体需涂抹于皮肤，皮炎及皮肤破损者使用后会产生刺激，不适合婴幼儿、孕妇、过敏体质者。而老人及婴幼儿的呼吸道抵抗力较弱，对外界刺激较敏感，使用中草药驱蚊现优势。据苏州市立医院药学部副主任中药师朱莉红介绍，中药驱蚊包经临床使用证实环保、安全、有效。市立医院本部驱蚊草药配方为薄荷12克，金银花、丁香、艾叶、白芷、藿香、石菖蒲、紫苏叶各10克，将这八味中药用透气布袋包在一起，通过药草散发出气味，达到驱蚊目的。14 蚊与生态链由一种蚊子的消失引起的生态缺口很快就会被其他生物的填满许多人会说在对待蚊子这个问题上答案很明了：把它们一网打尽，从地球的表面抹去。没有人提过这样的建议把它们从历史上抹去或惩罚它们，这也表明了蚊子虽满世界都是却多么的微不足道。对蚊子们而言好景不长了。假如蚊子灭绝真的对生物有好处的话，这一结果可能归结于这一物种的微不足道和自然的快速变化性质；甚至可能是因为那些吃蚊子的物种只不过把它们当点心而已。没有动物因为它的消失而挨饿，都能活得好好的。在其它地方，蚊子确实没表现为生物链的必要一环，它们可以被简单地替换；在许多情况下，会有一个竞争昆虫愿意替换掉蚊子的生态位。一只饮食结构为50%蚊子和50%飞蛾的青蛙会爱上光吃飞蛾，假如可吃的飞蛾数量能翻倍的话。但是，必须承认有算计失灵的时候，蚊子的灭绝可能导致一些捕食者鱼或鸟的灭绝，这可能引起当地生态系统的波状循环。不变的是，蚊子没有真正控制任何种群，因此不可能看到任何受这个常见蚊群牵制的危险物种的大爆发。然而科学家发现，在很多情况下，由一种蚊子的消失引起的生态缺口很快就会被其他生物的填满。生活将会跟以前一样，甚至还会更好。考虑到它们是主要的疾病传播媒介，“很难说消灭它们会有什么坏处，只是保不准有点附带损害。”伊利诺伊州立大学的昆虫生态学家史蒂文·朱利亚诺（Steven Juliano）说。没有蚊子的世界将会“对我们更安全”，来自巴西圣卡塔琳娜联邦大学的医学昆虫学者卡洛斯·布里索拉·马孔德斯（Carlos Brisola Marcondes）说，“蚊子的消失对于人类而言影响重大。”人们有能力把这个吸血者清理掉吗？一项蓬勃发展的运动给出了肯定回答。假如向前迈进一步的话，最可能利用的是武器基因学武器；喷雾剂和捕蚊网不到可能顺利完成任务。《自然通讯》6月10日发表研究论文，公开讲述这种用来控制蚊子数量的“性别扭曲”法。这个念头60年前就已经问世，但直到现在才首次成功演示。在英国帝国理工学院与美国、意大利同行合作进行的这项研究中，他们尝试给疟疾的主要传播者冈比亚按蚊注射一种“内切酶”，以“切割”并破坏蚊子X染色体中的DNA，使这些蚊子只能繁衍出雄性后代。更多：血的战争：人类与蚊子的血战史假如地球上所有蚊子消失会怎样？秋冬一到，蚊子说没就没，嗝屁了还是“藏猫猫” 参考资料 消夏趣谈：如何和蚊子完美地死磕到底——《中国日报》[引用日期2017-02-24] 常用8种驱蚊方法——人民网．2011-06-13[引用日期2017-02-04] 八味中药“制成”驱蚊草药——新华网[引用日期2017-02-04] 任何物种灭绝都会造成严重后果？——科学家：除了蚊子，凤凰网 让蚊子绝种——中国青年报 转基因技术灭蚊 或致其灭绝——中国日报网 冰岛是世界上唯一没有蚊子的国家，真的假的？——半岛晨报[引用日期2021-08-12] 百度百科”蚊“","categories":[{"name":"随想","slug":"随想","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E6%83%B3/"}],"tags":[{"name":"蚊子","slug":"蚊子","permalink":"https://kingwdy.avosapps.us/tags/%E8%9A%8A%E5%AD%90/"},{"name":"生物","slug":"生物","permalink":"https://kingwdy.avosapps.us/tags/%E7%94%9F%E7%89%A9/"},{"name":"百科","slug":"百科","permalink":"https://kingwdy.avosapps.us/tags/%E7%99%BE%E7%A7%91/"}],"author":"KINGWDY"},{"title":"Markdown使用指南","slug":"Markdown使用指南","date":"2022-05-17T06:17:17.000Z","updated":"2022-05-29T05:43:16.010Z","comments":true,"path":"posts/19324.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/19324.html","excerpt":"","text":"1. Markdown是什么？Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。2. 谁创造了它？它由Aaron Swartz和John Gruber共同设计，Aaron Swartz是一位有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。他有着足以让你跪拜的人生经历：· 14岁参与RSS 1.0规格标准的制订。· 2004年入读斯坦福，之后退学。· 2005年创建Infogami，之后与Reddit合并成为其合伙人。· 2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。· 2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。· 2013年1月自杀身亡。 天才都有早逝的归途。3. 为什么要使用它？· 它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。· 兼容HTML，可以转换为HTML格式发布。· 跨平台使用。· 越来越多的网站支持Markdown。· 更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）· 摆脱Word（我不是认真的）。4. 谁在用？Markdown的使用者：· GitHub· 简书· Stack Overflow· Apollo· Moodle· Reddit· 等等5. 尝试一下5.1 斜体和粗体*斜体*或_斜体_ **粗体** ***加粗斜体*** ~~删除线~~ 实际效果：斜体或_斜体_粗体加粗斜体删除线 5.2 分级标题# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 实际效果：一级标题二级标题三级标题四级标题五级标题六级标题5.3 超链接Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。5.3.1 行内式语法说明：[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。链接地址与链接标题前有一个空格。欢迎来到[KINGWDY's blog](https://kwblog.netlify.app) 欢迎来到[KINGWDY's blog](https://kwblog.netlify.app \"liyang's blog\") 实际效果欢迎来到KINGWDY’s blog欢迎来到KINGWDY’s blog 5.3.2 参考式参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。语法说明：参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。如果链接文字本身可以做为链接标记，你也可以写成[链接文字][][链接文字]：链接地址的形式，见代码的最后一行。我经常去的几个网站[Google][1],[YouTube][2],[YouTube][]。 [1]:http://www.google.com [2]:https://www.youtube.com \"YouTube\" [YouTube]:https://www.youtube.com 实际效果：我经常去的几个网站Google,YouTube,YouTube。 5.3.3 自动链接语法说明：Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：&lt;http://example.com/&gt; &lt;address@example.com&gt; 实际效果http://example.com/address@example.com 6.锚点网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。注意：1.Markdown Extra 只支持在标题后插入锚点，其它地方无效。2.Leanote 编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，但是你发布成笔记或博文后是支持跳转的。实际效果：这个有点问题，会跳转到新标签页的页尾，因为hexo会在生成的a标签上加上target=”_blank”这个属性，暂时无法解决。 7.列表7.1 无序列表使用 *，+，- 表示无序列表。- 无序列表项 一 - 无序列表项 二 - 无序列表项 三 实际效果: 无序列表项 一 无序列表项 二 无序列表项 三 7.2 有序列表有序列表则使用数字接着一个英文句点。1. 有序列表项 一 2. 有序列表项 二 3. 有序列表项 三 实际效果 有序列表项 一 有序列表项 二 有序列表项 三 7.3 定义型列表语法说明：定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法:紧跟一个缩进(Tab)代码块 1 Markdown : 轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格） 代码块 2 : 这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格） 代码块（左侧有八个不可见的空格） 实际效果：代码块 1 Markdown轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）代码块 2这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格） 代码块（左侧有八个不可见的空格） 7.4 列表缩进语法说明：列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。* 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ * 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 实际效果： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 7.5 包含段落的列表语法说明：列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）：* 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ * 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 实际效果： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 7.6 包含引用的列表语法说明：如果要在列表项目内放进引用，那 &gt; 就需要缩进：* 阅读的方法: &gt; 打开书本。 &gt; 打开电灯。 实际效果 阅读的方法: 打开书本。打开电灯。 7.7 包含代码区块的引用语法说明：如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符7.8 一个特殊情况在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法：1986. What a great season. 会显示成： What a great season.换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠：1986\\. What a great season. 这样就正常显示了： 1986. What a great season. 8.引用语法说明：引用需要在被引用的文本前加上&gt;符号。&gt; 这是一个有两段文字的引用, 无意义的占行文字1. 无意义的占行文字2. &gt; 无意义的占行文字3. 无意义的占行文字4. 实际效果： 这是一个有两段文字的引用,无意义的占行文字1.无意义的占行文字2. 无意义的占行文字3.无意义的占行文字4. 8.1 引用的多层嵌套区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白 &gt;&gt; 自己看教程！ - 愤青 &gt; 教程在哪？ - 小白 实际效果： 请问 Markdwon 怎么用？ - 小白 自己看教程！ - 愤青 教程在哪？ - 小白 8.2 引用其它要素引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：&gt; 1. 这是第一行列表项。 &gt; 2. 这是第二行列表项。 &gt; &gt; 给出一些例子代码： &gt; &gt; return shell_exec(\"echo $input | $markdown_script\"); 实际效果： 这是第一行列表项。 这是第二行列表项。 给出一些例子代码： return shell_exec(\"echo $input | $markdown_script\"); 9.插入图像图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。9.1 行内式语法说明：![图片Alt](图片地址 “图片Title”)美丽风景： ![美丽风景](https://yuhongjun.github.io/assets/media/scenery.jpeg \"美丽风景\") 实际效果：美丽风景： 9.2 参考式语法说明：在文档要插入图片的地方写![图片Alt][标记]在文档的最后写上[标记]:图片地址 “Title”![美丽风景](https://yuhongjun.github.io/assets/media/scenery.jpeg \"美丽风景\") [scenery]:https://yuhongjun.github.io/assets/media/scenery.jpeg \"美丽风景\" 实际效果：[scenery]:https://yuhongjun.github.io/assets/media/scenery.jpeg “美丽风景” 10.内容目录在段落中填写 [TOC] 以显示全文内容的目录结构。效果参见最上方的目录11.注脚语法说明：在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。 [^1]:Markdown是一种纯文本标记语言 [^2]:HyperText Markup Language 超文本标记语言 [^Le]:开源笔记平台，支持Markdown和笔记直接发为博文 实际效果：使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。[^1]:Markdown是一种纯文本标记语言[^2]:HyperText Markup Language 超文本标记语言[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文 注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。12.LaTeX公式12.1 $表示行内公式：质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。 实际效果：质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。 12.2 $$ 表示整行公式：$$\\sum_{i=1}^n a_i=0$$ $$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$ $$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj} z_k}$$ 访问 MathJax 参考更多使用方法。 13.表格语法说明：不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。13.1 简单方式写表格：学号|姓名|分数 -|-|- 小明|男|75 小红|女|79 小陆|男|92 实际效果： 学号 姓名 分数 小明 男 75 小红 女 79 13.2 原生方式写表格：|学号|姓名|分数| |-|-|-| |小明|男|75| |小红|女|79| |小陆|男|92| 实际效果： 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 13.3 为表格第二列指定方向：产品|价格 -|-: Leanote 高级账号|60元/年 Leanote 超级账号|120元/年 实际效果： 产品 价格 Leanote 高级账号 60元/年 Leanote 超级账号 120元/年 14.分割线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：* * * *** ***** - - - --------------------------------------- 显示效果都是一样的。 15.代码对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在ESC键下方）包裹代码。语法说明：插入行内代码，即插入一个单词或者一句代码的情况，使用code这样的形式插入。插入多行代码，可以使用缩进或者“code “,具体看示例。注意： 缩进式插入前方必须有空行15.1 行内式C语言里的函数 `scanf()` 怎么使用？ 实际效果：C语言里的函数 scanf() 怎么使用？ 15.2 缩进式多行代码缩进 4 个空格或是 1 个制表符一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。 #include &lt;stdio.h&gt; int main(void) { printf(\"Hello world\"); } #include &lt;stdio.h&gt; int main(void) { printf(\"Hello world\"); } 15.3 用六个`包裹多行代码` ` ` #include &lt;stdio.h&gt; int main(void) { printf(\"Hello world\"); } ` ` ` 另外说明一下，第一个 ```后可以加上代码的类型，js代码就加上js,css就加上css，渲染出来的样式会有区别。比如下面这段，虽然内容基本差不多，第一个是js，第二个是json，渲染出来就是不一样的。如果不加的话文字都是白色的。var object ={ \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\", \"name\": \"码酱\", \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\", } { \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\", \"name\": \"码酱\", \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\" } var object ={ \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\", \"name\": \"码酱\", \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\", } 15.4 HTML 原始码在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理，例如：第一个例子：&lt;div class=\"footer\"&gt; © 2018 *** &lt;/div&gt; 实际效果： © 2022 *** END感谢观看，可以的话请我吃呗咖啡吧~~~","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://kingwdy.avosapps.us/tags/Markdown/"}],"author":"KINGWDY"},{"title":"多种方法在Markdown加入上划线、中划线、下划线","slug":"多种方法在Markdown加入上划线、中划线、下划线","date":"2022-05-17T02:05:00.000Z","updated":"2022-05-29T05:43:49.497Z","comments":true,"path":"posts/38332.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/38332.html","excerpt":"","text":"上划线和下划线不是Markdown自身语法，因此需要一点摸索，特将结果记录于此1.中划线中划线是markdown自身语法，实现起来很简单：~~中划线~~ 实现的效果如下：中划线 2.下划线2.1借助Latex公式$\\underline{\\text{下划线}}$ 实现的效果如下：$\\underline{\\text{下划线}}$ 2.2行内html（我比较推荐）&lt;u&gt;下划线&lt;/u&gt; 实现的效果如下：下划线 3.上划线3.1借助Latex公式$\\overline{\\text{上划线}}$ 实现的效果如下：$\\overline{\\text{上划线}}$ 3.2全局Html语法在markdown中效果不太好，因为定义也会被显示，在这里做个记录。&lt;head&gt; &lt;style type=\"text/css\"&gt; h1 {text-decoration: overline} h2 {text-decoration: line-through} h3 {text-decoration: underline} h4 {text-decoration:blink} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;这是标题 1&lt;/h1&gt; &lt;h2&gt;这是标题 2&lt;/h2&gt; &lt;h3&gt;这是标题 3&lt;/h3&gt; &lt;h4&gt;这是标题 4&lt;/h4&gt; &lt;/body&gt; 实现的效果如下： 感谢观看，可以的话请我喝杯咖啡吧~~~","categories":[{"name":"技术 - Markdown语法教程","slug":"技术-Markdown语法教程","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF-Markdown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/"}],"tags":[],"author":"KINGWDY"},{"title":"利用 Gulp 来压缩你的 Hexo 博客","slug":"利用 Gulp 来压缩你的 Hexo 博客","date":"2022-05-17T01:44:00.000Z","updated":"2022-05-29T05:45:38.520Z","comments":true,"path":"posts/5560.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/5560.html","excerpt":"","text":"这篇文章介绍了如何利用 Gulp 来压缩你的 Hexo 博客的静态文件（ html / css / js ），达到提高访问速度的目的。1.Gulp简介gulp.js 是一种基于流的，代码优于配置的新一代构建工具。具体前往官网啦反正是一个基于 node 的用于自动化的工具，和 Grunt 比较类似，不过亮点是流和写代码，所以会比 Grunt 快一点。2.准备环境2.1首先安装 Gulpnpm install gulp -g 然后 cd 到博客的根目录安装压缩静态文件要用的依赖包npm install gulp-minify-css gulp-babel gulp-uglify gulp-htmlmin gulp-htmlclean --save-dev （这里提倡使用 cnpm） 辣鸡 cnpm 装的包各种权限问题，不推荐了哼。等有空写写如何优雅地在国内使用npm好了。2.2创建gulpfile.js在博客的根目录创建文件 gulpfile.js,然后粘贴代码var gulp = require('gulp'); var minifycss = require('gulp-minify-css'); var babel = require('gulp-babel'); var uglify = require('gulp-uglify'); var htmlmin = require('gulp-htmlmin'); var htmlclean = require('gulp-htmlclean'); gulp.task('minify-css', function () { return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public')); }); gulp.task('minify-html', function () { return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, })) .pipe(gulp.dest('./public')) }); gulp.task('minify-js', function () { return gulp.src(['./public/**/*.js', '!./public/**/*.min.js']) .pipe(babel({ presets: ['es2015'] })) .pipe(uglify()) .pipe(gulp.dest('./public')); }); gulp.task('default', ['minify-html', 'minify-css', 'minify-js']); !!!注意!!!gulp-babel 只能转换如箭头函数等一部分 ES6 的新特性 对 import 无能为力 如果需要压缩含有 import 特性的代码 需要使用 webpack 或者 browserify 等工具 具体教程网上有 我因为用不到也就没仔细研究3.压缩方法在 hexo g 之后在 cmd 里敲入 gulp 回车就可以啦推荐姿势：hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d gulp运行截图 gulp运行前后比较 4.更为推（tou）荐（lan）的姿势打开博客根目录的 package.json ，在 “scripts” 项增加一个 “publish” 命令：{ //... \"scripts\": { //... \"publish\": \"hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d\", //... } //... } 然后每次需要部署的时候只要运行下面命令就可以啦。npm run publish 省了 20 个字符呢","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"npm","slug":"npm","permalink":"https://kingwdy.avosapps.us/tags/npm/"},{"name":"blog","slug":"blog","permalink":"https://kingwdy.avosapps.us/tags/blog/"},{"name":"代码压缩","slug":"代码压缩","permalink":"https://kingwdy.avosapps.us/tags/%E4%BB%A3%E7%A0%81%E5%8E%8B%E7%BC%A9/"}],"author":"KINGWDY"},{"title":"PicGo+GitHub 图床搭建","slug":"PicGo-GitHub","date":"2022-05-16T10:15:04.000Z","updated":"2022-05-29T05:48:04.462Z","comments":true,"path":"posts/7a46f93c.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/7a46f93c.html","excerpt":"","text":"前言用GitHub搭建图床，在很久之前我就有了解，但由于市面上有挺多免费的图床，比如我之前一直在用的 路过图床，所以一直懒得动手搭建GitHub图床。一直到前两天我在完善博客的相册时，发现 路过图床 免费版的有这么多限制，比如：每小时限制上传50张图片，每天限制上传100张图片，而且免费版用户的存储容量貌似不过300M，这才意识到有一个自己的GitHub图床是多么重要。 0x001 PicGO 介绍PicGo是一款图片上传工具，目前支持 SM.MS图床、腾讯云COS、GitHub图床、七牛图床、Imgur图床、阿里云OSS、又拍云图床，未来将支持更多图床。 在支持的这些图床中，SM.MS和Imgur有免费版和收费版，免费版的肯定有很多的使用限制，比如每小时限制上传次数，限制用户的上传容量等等；腾讯云COS、阿里云、有拍云都是要收费使用的；七牛云貌似前期使用免费，后期又要收费才能使用，就剩下的GitHub才是免费且最可靠的。 PicGo源项目GitHub地址已给出，但是去GitHub下载速度非常慢，这里额外提供一个蓝奏云的快速下载地址。 GitHub地址：https://github.com/Molunerfinn/PicGo 蓝奏云地址：https://luckyzmj.lanzous.com/id3e0id 0x002 GitHub 图床1. 创建GitHub图床仓库首先需要有一个登录GitHub的账号，没有的话去GitHub官网注册一个 创建一个新的图床仓库，点击右上角的New repository 填写如下配置信息，然后Create创建仓库 2. 获取GitHub token值点击右上的头像，选择设置Setting 点击选择Developer settings 点击 Generate New token 填写如下配置信息，只要勾选repo选项即可，然后页面拉到底部点击Generate token 即可 此时会跳转到带有token的页面，将token值复制记录下来，之后用PicGo绑定GitHub图床时会利用到 0x003 PicGo 配置1. 绑定GitHub图床首先下载安装好PicGo软件，然后在右列表找到GitHub图床配置 1. 设定仓库名(必填)： 按照“GitHub账户名/仓库名的格式填写”，比如我的是：Luckyzmj/imgbed 2. 设定分支名(必填)： 仓库分支名填写”master”或者”main”，视情况而定。因为GitHub 官方表示,从2020年10月1日起,在该平台上创建的所有新的源代码仓库将默认被命名为”main”,而不是原先的”master”。 3. 设定Token(必填)： 将之前步骤的Token值复制粘贴到这里 4. 指定存储路径： 这个选项可以为空，如果想将图片上传到仓库的指定目录下，可以填写目录名加/，比如我的imgbed仓库下有个posts文件夹，需设置为 posts/ 5. 设定自定义域名： 这里统一用jsdelivr的CDN加速域名，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接 自定义域名格式：https://cdn.jsdelivr.net/gh/GitHub账户名/仓库名 以我的格式为例：https://cdn.jsdelivr.net/gh/Luckyzmj/imgbed 配置完全部信息后，点击 设为默认图床，最后点击确定即可 2. 上传图片到图床在上传区上传图片，可支持本地图片上传(可多选图片)、剪贴板上传、URL上传等三种方式。上传图片成功后，选择你想要生成的图片链接格式 在图片区，可以看到成功上传的图片，选择相应的图片进行操作即可 3. PicGo 注意事项如果配置完PicGo后却上传图片失败，可以参考以下方法： 检查自定义域名是否正确 仓库名不要有空格 图片名字不要带有特殊符号，如：%、+、*、空格等 建议开启时间戳重命名，防止图片名字重复 上传图片间歇太短，需在PicGo设置中关闭Server选项 PicGo应用不稳定因素，需重启应用 参考文章 https://blog.csdn.net/sunhwee/article/details/100109956","categories":[{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"}],"tags":[{"name":"PicGo","slug":"PicGo","permalink":"https://kingwdy.avosapps.us/tags/PicGo/"},{"name":"GitHub图床","slug":"GitHub图床","permalink":"https://kingwdy.avosapps.us/tags/GitHub%E5%9B%BE%E5%BA%8A/"}],"author":"KINGWDY"},{"title":"文字背景粒子特效","slug":"jQuery+CSS3","date":"2022-05-16T10:14:40.000Z","updated":"2022-05-22T02:51:57.025Z","comments":true,"path":"posts/4b3510a4.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/4b3510a4.html","excerpt":"","text":"前言一款jQuery+CSS3的文字背景粒子动画特效，一共6种粒子效果，每种文字背景的粒子效果都不同，有漂浮的有坠落的等等。 0x001 特效演示 This is fires This is lines This is hearts This is bubbles This is confetti This is sunbeams .particletext { } .fire > .particle { position: absolute; background-color: rgba(255, 193, 7, 0.5); border-radius: 40px; border-top-right-radius: 0px; -webkit-animation: fires 0.8s linear infinite; animation: fires 0.8s linear infinite; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); opacity: 0; } /*css keyframes 动画*/ @-webkit-keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } @keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } function fire() { $.each($(\".particletext.fire\"), function(){ var firecount = ($(this).width()/50)*20; for(var i = 0; i .particle { position: absolute; background-color: rgba(244, 67, 54, 0.5); -webkit-animation: lines 3s linear infinite; animation: lines 3s linear infinite; } @-webkit-keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } @keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } function lines() { $.each($(\".particletext.lines\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: #cc2a5d; -webkit-animation: hearts 3s ease-in infinite; animation: hearts 3s ease-in infinite; } .hearts > .particle:before,.hearts > .particle:after { position: absolute; content: ''; border-radius: 100px; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #cc2a5d; } .hearts > .particle:before { -webkit-transform: translateX(-50%); transform: translateX(-50%); } .hearts > .particle:after { -webkit-transform: translateY(-50%); transform: translateY(-50%); } @-webkit-keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } @keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } function hearts() { $.each($(\".particletext.hearts\"), function(){ var heartcount = ($(this).width()/50)*5; for(var i = 0; i .particle { opacity: 0; position: absolute; background-color: rgba(33, 150, 243, 0.5); -webkit-animation: bubbles 3s ease-in infinite; animation: bubbles 3s ease-in infinite; border-radius: 100%; } @-webkit-keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } @keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } function bubbles() { $.each($(\".particletext.bubbles\"), function(){ var bubblecount = ($(this).width()/50)*10; for(var i = 0; i .particle { opacity: 0; position: absolute; -webkit-animation: confetti 3s ease-in infinite; animation: confetti 3s ease-in infinite; } .confetti > .particle.c1 { background-color: rgba(76, 175, 80, 0.5); } .confetti > .particle.c2 { background-color: rgba(156, 39, 176, 0.5); } @-webkit-keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } @keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } function confetti() { $.each($(\".particletext.confetti\"), function(){ var confetticount = ($(this).width()/50)*10; for(var i = 0; i .particle { position: absolute; background-color: rgba(253, 216, 53, 0.5); -webkit-animation: sunbeams 3s linear infinite; animation: sunbeams 3s linear infinite; } @-webkit-keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } @keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } function sunbeams() { $.each($(\".particletext.sunbeams\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i function fire() { $.each($(\".particletext.fire\"), function(){ var firecount = ($(this).width()/50)*20; for(var i = 0; i &lt;= firecount; i++) { var size = $.rnd(8,12); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(40,70) + '%; left:' + $.rnd(-10,100) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,20)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } fire(); &lt;/script> 2. CSS 代码&lt;style> .fire > .particle { position: absolute; background-color: rgba(255, 193, 7, 0.5); border-radius: 40px; border-top-right-radius: 0px; -webkit-animation: fires 0.8s linear infinite; animation: fires 0.8s linear infinite; -webkit-transform: rotate(-45deg); transform: rotate(-45deg); opacity: 0; } @-webkit-keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } @keyframes fires { 0% { -webkit-transform: rotate(-70deg) translateY(0%); transform: rotate(-70deg) translateY(0%); } 25% { -webkit-transform: rotate(-20deg) translateY(-5%); transform: rotate(-20deg) translateY(-5%); opacity: 1; } 50% { -webkit-transform: rotate(-70deg) translateY(-10%); transform: rotate(-70deg) translateY(-10%); } 75% { -webkit-transform: rotate(-20deg) translateY(-20%); transform: rotate(-20deg) translateY(-20%); } 100% { -webkit-transform: rotate(-70deg) translateY(-40%); transform: rotate(-70deg) translateY(-40%); opacity: 1; } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext fire\" style=\"font-size:48px;position: relative;\">This is fires&lt;/span> &lt;/div> 0x003 Lines 特效1. JS 代码&lt;script> function lines() { $.each($(\".particletext.lines\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= linecount; i++) { $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(-30,30) + '%; left:' + $.rnd(-10,110) + '%;width:' + $.rnd(1,3) + 'px; height:' + $.rnd(20,80) + '%;animation-delay: -' + ($.rnd(0,30)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } lines(); &lt;/script> 2. CSS 代码&lt;style> .lines > .particle { position: absolute; background-color: rgba(244, 67, 54, 0.5); -webkit-animation: lines 3s linear infinite; animation: lines 3s linear infinite; } @-webkit-keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } @keyframes lines { 0%, 50%, 100% { -webkit-transform: translateY(0%); transform: translateY(0%); } 25% { -webkit-transform: translateY(100%); transform: translateY(100%); } 75% { -webkit-transform: translateY(-100%); transform: translateY(-100%); } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext lines\" style=\"font-size:48px; position: relative;\">This is lines&lt;/span> &lt;/div> 0x004 Hearts 特效1. JS 代码&lt;script> function hearts() { $.each($(\".particletext.hearts\"), function(){ var heartcount = ($(this).width()/50)*5; for(var i = 0; i &lt;= heartcount; i++) { var size = ($.rnd(60,120)/10); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(20,80) + '%; left:' + $.rnd(0,95) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } hearts(); &lt;/script> 2. CSS 代码&lt;style> .hearts > .particle { opacity: 0; position: absolute; background-color: #cc2a5d; -webkit-animation: hearts 3s ease-in infinite; animation: hearts 3s ease-in infinite; } .hearts > .particle:before, .hearts > .particle:after { position: absolute; content: ''; border-radius: 100px; top: 0px; left: 0px; width: 100%; height: 100%; background-color: #cc2a5d; } .hearts > .particle:before { -webkit-transform: translateX(-50%); transform: translateX(-50%); } .hearts > .particle:after { -webkit-transform: translateY(-50%); transform: translateY(-50%); } @-webkit-keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } @keyframes hearts { 0% { opacity: 0; -webkit-transform: translate(0, 0%) rotate(45deg); transform: translate(0, 0%) rotate(45deg); } 20% { opacity: 0.8; -webkit-transform: translate(0, -20%) rotate(45deg); transform: translate(0, -20%) rotate(45deg); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%) rotate(45deg); transform: translate(0, -1000%) rotate(45deg); } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext hearts\" style=\"font-size:48px; position: relative;\">This is hearts&lt;/span> &lt;/div> 0x005 Bubbles 特效1. JS 代码&lt;script> function bubbles() { $.each($(\".particletext.bubbles\"), function(){ var bubblecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= bubblecount; i++) { var size = ($.rnd(40,80)/10); $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(20,80) + '%; left:' + $.rnd(0,95) + '%;width:' + size + 'px; height:' + size + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } bubbles(); &lt;/script> 2. CSS 代码&lt;style> &lt;style> .bubbles > .particle { opacity: 0; position: absolute; background-color: rgba(33, 150, 243, 0.5); -webkit-animation: bubbles 3s ease-in infinite; animation: bubbles 3s ease-in infinite; border-radius: 100%; } @-webkit-keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } @keyframes bubbles { 0% { opacity: 0; } 20% { opacity: 1; -webkit-transform: translate(0, -20%); transform: translate(0, -20%); } 100% { opacity: 0; -webkit-transform: translate(0, -1000%); transform: translate(0, -1000%); } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext bubbles\" style=\"font-size:48px; position: relative;\">This is bubbles&lt;/span> &lt;/div> 0x006 Confetti 特效1. JS 代码&lt;script> function confetti() { $.each($(\".particletext.confetti\"), function(){ var confetticount = ($(this).width()/50)*10; for(var i = 0; i &lt;= confetticount; i++) { $(this).append('&lt;span class=\"particle c' + $.rnd(1,2) + '\" style=\"top:' + $.rnd(10,50) + '%; left:' + $.rnd(0,100) + '%;width:' + $.rnd(6,8) + 'px; height:' + $.rnd(3,4) + 'px;animation-delay: ' + ($.rnd(0,30)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } confetti(); &lt;/script> 2. CSS 代码&lt;style> .confetti > .particle { opacity: 0; position: absolute; -webkit-animation: confetti 3s ease-in infinite; animation: confetti 3s ease-in infinite; } .confetti > .particle.c1 { background-color: rgba(76, 175, 80, 0.5); } .confetti > .particle.c2 { background-color: rgba(156, 39, 176, 0.5); } @-webkit-keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } @keyframes confetti { 0% { opacity: 0; -webkit-transform: translateY(0%) rotate(0deg); transform: translateY(0%) rotate(0deg); } 10% { opacity: 1; } 35% { -webkit-transform: translateY(-800%) rotate(270deg); transform: translateY(-800%) rotate(270deg); } 80% { opacity: 1; } 100% { opacity: 0; -webkit-transform: translateY(2000%) rotate(1440deg); transform: translateY(2000%) rotate(1440deg); } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext confetti\" style=\"font-size:48px; position: relative;\">This is confetti&lt;/span> &lt;/div> 0x007 Sunbeams 特效1. JS 代码&lt;script> function sunbeams() { $.each($(\".particletext.sunbeams\"), function(){ var linecount = ($(this).width()/50)*10; for(var i = 0; i &lt;= linecount; i++) { $(this).append('&lt;span class=\"particle\" style=\"top:' + $.rnd(-50,00) + '%; left:' + $.rnd(0,100) + '%;width:' + $.rnd(1,3) + 'px; height:' + $.rnd(80,160) + '%;animation-delay: -' + ($.rnd(0,30)/10) + 's;\">&lt;/span>'); } }); } jQuery.rnd = function(m,n) { m = parseInt(m); n = parseInt(n); return Math.floor( Math.random() * (n - m + 1) ) + m; } sunbeams(); &lt;/script> 2. CSS 代码&lt;style> .sunbeams > .particle { position: absolute; background-color: rgba(253, 216, 53, 0.5); -webkit-animation: sunbeams 3s linear infinite; animation: sunbeams 3s linear infinite; } @-webkit-keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } @keyframes sunbeams { 0% { -webkit-transform: translateY(40%) rotate(0deg); transform: translateY(40%) rotate(0deg); } 50% { -webkit-transform: translateY(-40%) rotate(180deg); transform: translateY(-40%) rotate(180deg); } 100% { -webkit-transform: translateY(40%) rotate(360deg); transform: translateY(40%) rotate(360deg); } 0%,14%,17%,43%,53%,71%,80%,94%,100% { opacity: 0; } 6%,15%,24%,28%,48%,55%,78%,82%,99% { opacity: 1; } } &lt;/style> 3. HTML 代码&lt;div style=\"width: 100%;text-align: center; height: 120px; position: relative; bottom: 0px;\" > &lt;span class=\"particletext sunbeams\" style=\"font-size:48px; position: relative;\">This is sunbeams&lt;/span> &lt;/div>","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"jQuery+CSS3","slug":"jQuery-CSS3","permalink":"https://kingwdy.avosapps.us/tags/jQuery-CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://kingwdy.avosapps.us/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"}],"author":"KINGWDY"},{"title":"在hexo里用思维导图","slug":"在hexo里用思维导图","date":"2022-05-16T07:53:19.000Z","updated":"2022-05-25T12:52:48.539Z","comments":true,"path":"posts/25167.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/25167.html","excerpt":"","text":"首先需要先安装插件sudo cnpm install hexo-simple-mindmap //这里默认用淘宝源 mindmap 是思维导图渲染的标志，画板尺寸有三种规格：1.mindmap-sm 小号尺寸的画板2.mindmap-md 中号尺寸的画板3.mindmap-lg 大号尺寸的画板思维导图的内容和层级关系通过无序列表表示，支持基本的文字和超链接。示例代码如下:{% pullquote mindmap mindmap-md %} - [在 Hexo 中使用思维导图](https://hunterx.xyz/use-mindmap-in-hexo.html) - 前言 - 操作指南 - 准备需要的文件 - 为主题添加 CSS/JS 文件 - 使用方法 {% endpullquote %} 最终效果如下： 在 Hexo 中使用思维导图 前言 操作指南 准备需要的文件 为主题添加 CSS/JS 文件 使用方法","categories":[{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"教程","slug":"教程","permalink":"https://kingwdy.avosapps.us/tags/%E6%95%99%E7%A8%8B/"},{"name":"思维导图","slug":"思维导图","permalink":"https://kingwdy.avosapps.us/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"}],"author":"KINGWDY"},{"title":"LuckyBlog开源搭建教程","slug":"BlogOpen","date":"2021-06-12T14:55:38.000Z","updated":"2022-05-29T05:33:16.526Z","comments":true,"path":"posts/d74d8b76.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/d74d8b76.html","excerpt":"","text":"前言之前在B站上发布了个人博客的视频，播放量也破千了，有网友私聊也想要搭建一个这样的博客。经过一段时间的准备，现将本人博客的源代码公布出来，大家只需要根据以下的步骤，即可快速搭建一个漂亮完善的博客。 0x01 LuckyBlog 介绍上一个LuckyBlog版本发布于2020年的9月份，是在 洪卫の博客 基础上进行修改的。自从发布以来有很多网友都私信搭建了博客，同时也发现了旧版本中存在的一些问题需要解决，例如：搜索框不适配XML代码搜索，部分图片失效，代码块问题以及各种小问题。现在将最新的LuckyBlog版本代码发布出来，修复改进了不少的BUG，使其更加稳定运行。同时完善了博客的基础功能，例如：音乐、视频、相册、百宝箱等页面。同时增加了不少的新功能，例如：适配Hexo5.x、黑白天浏览模式、仿Windows页面，站点统计等。 博客演示地址：http://luckyzmj.cn/ 开源项目地址：https://github.com/LuckyZmj/LuckyBlog 主题特性 简单漂亮，文章内容美观易读 Material Design 设计 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现 首页轮播文章及每天动态切换 Banner 图片 瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替） 时间轴式的归档页 词云的标签页和雷达图的分类页 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等） 可自定义的数据的友情链接页面 支持文章置顶和文章打赏 支持 MathJax TOC 目录，优化了目录显示效果 可设置复制文章内容时追加版权信息 可设置阅读文章时做密码验证 Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Valine） 集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能 支持在首页的音乐播放和视频播放功能 修改了原主题以及基础主题中的一些BUG 加入图片懒加载功能，在根目录配置文件开启和关闭 增加留言板功能 在关于板块,加入简历功能页 增加完善音乐、相册、视频等功能页面 支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情 增加网站运行时间显示 增加live2d 动漫人物模型 整体替换Banner图片和文章特色图片 增加实用的快捷导航栏功能 修改了一些控件的参数以及部分样式 优化了代码显示块的效果 增加页面樱花飘落动效 增加鼠标点击烟花爆炸动效 增加页面雪花飘落动效 增加博客白云背景效果 增加天气接口控件 加入鼠标点击文字特效 增加DaoVoice在线聊天插件 增加博客代码、图片压缩功能 增加黑白天浏览模式功能 增加仿Windows功能 增加站点统计功能 增加留言版一言功能 其他 0x02 LuckyBlog 安装1. 安装GitGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。Git的作用是将本地的网页文件传到github上。 Git下载地址 Git教程 windows： 到git官网上下载.exe文件,Download git,安装选项全部默认即可。 2. 安装node.jsHexo是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。 windows： 到Node.js官网下载.exe文件，安装选项全部默认。安装好之后，按Win+R打开cmd命令提示符，输入node -v和npm -v，若出现版本号，则说明安装成功。 3. 添加npm国内源使用阿里的国内镜像进行加速下载 npm config set registry https://registry.npm.taobao.org 4. 安装Hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接鼠标右键git 打开）。 比如我的博客文件都存放在C:\\MyBlog目录下。 在该目录下右键点击Git Here，打开git的控制台窗口，以后我们所有的操作都在git控制台进行，就不用Windows自带的cmd了。 定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，不用理会。 npm install -g hexo-cli 安装完后输入hexo -v验证是否安装成功。 接下来初始化一下hexo,即初始化我们的博客网站。例如我的在C:\\MyBlog文件夹下的命令行中，输入hexo init初始化文件夹 hexo init 新建完成后，指定文件夹MyBlog目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题** _config.yml: 博客的配置文件** 到此为止，本地的Hexo基础环境搭建完成了。 5. 安装LuckyBlog下载源代码到本地文件下 git clone https://github.com/LuckyZmj/LuckyBlog.git 将下载好的LuckyBlog全部复制到MyBlog目录下，如果复制过程中出现重复文件，点击替换。 最后使用 npm i 或者 npm install 安装依赖环境包即可。 如果安装依赖环境出错，可以参考这篇文章。 最后执行 hexo clean 和 hexo s -g 启动Hexo本地预览，即可看到效果。 到此为止LuckyBlog安装完成，接下来就是个性化设置了。 0x03 LuckyBlog 个性化 注意！注意！注意！在阅读以下博客个性化之前，最好希望大家有Hexo博客配置主题的基础。如果是完全小白，建议去网上搜索学习相关Hexo搭建博客的过程，另外去B站上也有很多视频教程。博客个性化是需要大家有耐心的，因为每个人的操作不同，在配置过程中可能会遇到一些不可预期的问题，希望大家可以克服这些困难，如有需要帮助，也可以私信博主帮助大家解决问题。 1. 修改部署平台编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改 deploy: - type: git repo: git@github.com:LuckyZmj/LuckyZmj.github.io.git # 替换为你的部署平台地址 branch: master 2. 修改网站信息编辑根目录下的配置文件MyBlog/_config.yml，找到如下内容并修改 # Site title: Luckey subtitle: 'Luckeyの博客' description: '本科 | 计算机科学与技术 | 网络安全' keywords: 'luckyzmj 计算机 网络安全 渗透测试' # 博客网站关键词 author: Luckey # 博主名称 language: zh-CN timezone: '' # URL ## If your site is put in a subdirectory, set url as 'http://example.com/child' and root as '/child/' url: http://www.luckyzmj.cn # 更改为你的博客地址 root: / # permalink: :year/:month/:day/:title/ permalink: posts/:abbrlink.html # p 是自定义的前缀 abbrlink: alg: crc32 #算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex permalink_defaults: pretty_urls: trailing_index: true # Set to false to remove trailing 'index.html' from permalinks trailing_html: true # Set to false to remove trailing '.html' from permalinks 3. 修改博客头像编辑主题目录下的配置文件MyBlog/themes/matery/_config.yml，找到如下内容并修改 # Configure website favicon and LOGO # 将以下改为自己的头像链接即可 favicon: https://s1.ax1x.com/2020/05/17/YR20js.jpg logo: https://s1.ax1x.com/2020/05/17/YRWsYT.png 4. 修改留言板简介演示效果如下： 编辑 /MyBlog/contact/index.md，修改你想要内容即可 --- title: contact date: 2019-10-25 00:00:00 type: \"contact\" layout: \"contact\" --- ## 畅所欲言 --- 在这里可以留下你的足迹，欢迎在下方留言，欢迎交换友链，一起交流学习！ ## 友链 --- Lucky_Meの友链信息 博客名称: Lucky_Meの博客 博客网址: http://luckyzmj.cn 博客头像: https://s1.ax1x.com/2020/05/17/YRWsYT.png 博客介绍: 知识面决定攻击面，知识链决定攻击深度！ 5. 修改音乐列表想要修改自己喜欢的音乐之前，需要先获取音乐列表的id。 以QQ音乐为例：先登录QQ音乐网页版，点击打开自己喜欢的音乐列表，在网页的URL处包含了音乐列表的id，如下图所示 编辑主题目录下的配置文件MyBlog/themes/matery/_config.yml，找到如下内容并修改 # 默认是博主的QQ音乐的id，大家可以改为自己音乐喜欢列表的id # 更新完id，就可以同步加载自己喜欢的列表音乐了 # Whether to display the musics. # 是否在首页显示音乐. music: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 autoHide: true # hide automaticaly server: tencent #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 1776127550 #require song id / playlist id / album id / search keyword fixed: true # 开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: true # 列表默认折叠 hideLrc: true # 隐藏歌词 # Whether to display the musics. # 单独的音乐页面. musics: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 server: tencent #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 1776127550 #require song id / playlist id / album id / search keyword fixed: false # 开启吸底模式 autoplay: true # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: \"525px\" #列表最大高度 6. 绑定 Valine 评论编辑主题目录下的配置文件MyBlog/themes/matery/_config.yml，找到如下内容并修改 # Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey. valine: enable: true appId: Ucrxxxxxxxxxxxxxxxx-xxxxsz # 自行注册valine获取 appKey: zPsLxxxxxxxxxxxxxxerLmd # 自行注册valine获取 notify: true verify: true visitor: true avatar: 'monsterid' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide pageSize: 10 placeholder: '留下你的足迹..' # Comment Box placeholder background: /medias/comment_bg.png count: true enableQQ: 16463223 # 改为自己的QQ号 recordIP: true requiredFields: - nick - mail guest_info: - nick - mail - link master: - 46606772953bed0812789d6dc955614e # md5加密后的博主邮箱 metaPlaceholder: # 输入框的背景文字 nick: 昵称/QQ号(必填) mail: 邮箱(必填) link: 网址(https://) lang: zh-CN tagMeta: # The String Array of Words to show Flag.[Just Only xCss Style mode] - 博主 - 小伙伴 - 访客 friends: # The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode] - cb3e577ff029d6073400d5557effd41f - 7. 绑定 DaoVoice 在线聊天编辑主题目录下的配置文件MyBlog/themes/matery/_config.yml，找到如下内容并修改 daovoice: enable: true app_id: 4xxxxxxxe #DaoVoice中的app_id 8. 快捷导航页面个性化编辑文件MyBlog/source/tools/index.html，以下简单标记出几处，还有其他涉及到博客信息的内容都需要改为你自己的博客信息即可。 9. 添加友情链接编辑文件MyBlog/suorce/_data/friends.json，按如下格式添加友情 [ { \"avatar\": \"https://s1.ax1x.com/2020/05/17/YRWsYT.png\", \"name\": \"Luckey\", \"introduction\": \"越努力，越幸运\", \"url\": \"http://www.luckyzmj.cn\", \"title\": \"访问主页\" },{ \"avatar\": \"https://sunhwee.com/hwsun.jpg\", \"name\": \"洪卫の博客\", \"introduction\": \"UESTC CVer\", \"url\": \"http://sunhwee.com\", \"title\": \"访问主页\" } ] 10. 添加相册比如你的图片上传图床后，链接地址如下 https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/01.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/璀璨星空/02.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/01.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/动漫风景/02.jpg ... 首先提取出图片链接公共的部分，作为图床地址 https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/ 然后再提取图片地址中不同的部分，作为图片地址 璀璨星空/01.jpg 璀璨星空/02.jpg 动漫风景/01.jpg 动漫风景/03.jpg ... 具体怎么分割根据你自己图床的链接格式而定，以上为我的github图床格式为例。 将相册图床的地址改为你自己的图床地址，需要更改两处文件 # 例如我的图床地址为： https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed/galleries/ themes/matery/layout/galleries.ejs themes/matery/layout/gallerie.ejs 为每个相册添加链接地址，在根目录/source/List/galleries/下新建 相册名称 文件夹，并在该文件夹下新建 index.md 最后，在根目录/source/_data/galleries.json中添加图片链接，格式如下, [ { \"name\": \"璀璨星空\", \"cover\": \"璀璨星空/01.jpg\", \"description\": \"璀璨星空\", \"photos\": [ \"璀璨星空/01.jpg\", \"璀璨星空/02.jpg\", \"璀璨星空/03.jpg\", \"璀璨星空/04.jpg\", \"璀璨星空/05.jpg\", \"璀璨星空/06.jpg\", \"璀璨星空/07.jpg\", \"璀璨星空/08.jpg\", \"璀璨星空/09.jpg\", \"璀璨星空/10.jpg\", \"璀璨星空/11.jpg\", \"璀璨星空/12.jpg\", \"璀璨星空/13.jpg\", \"璀璨星空/14.jpg\", \"璀璨星空/15.jpg\", \"璀璨星空/16.jpg\" ] }, { \"name\": \"动漫风景\", \"cover\": \"动漫风景/01.jpg\", \"description\": \"动漫风景\", \"photos\": [ \"动漫风景/01.jpg\", \"动漫风景/02.jpg\", \"动漫风景/03.jpg\", \"动漫风景/04.jpg\", \"动漫风景/05.jpg\", \"动漫风景/06.jpg\", \"动漫风景/07.jpg\", \"动漫风景/08.jpg\", \"动漫风景/09.jpg\", \"动漫风景/10.jpg\", \"动漫风景/11.jpg\", \"动漫风景/12.jpg\", \"动漫风景/13.jpg\", \"动漫风景/14.jpg\", \"动漫风景/15.jpg\", \"动漫风景/16.jpg\" ] } ] 11. 站点统计功能站点统计的数据来源于百度统计,当你的网站被百度收录后就会在百度统计中出现数据，具体效果如下： 由于博客的统计页面数据不能直接从百度站点中调用，因此需要自行从百度站点中将相应数据填入博客站点统计页面的源代码文件中，个人建议每隔一个月手动更新一次数据。 打开MyBlog\\themes\\matery\\layout\\census.ejs文件，将百度统计中的数据填入源代码中，修改代码如下： 11. 仿Windows个性化仿Windows页面是采用YLUI实现的，YLUI提供了社区版本供大家学习使用，具体效果如下： 大家可以查看YLUI官方的开发文档进行开发，有不懂的可以加官方的QQ群：191372634 进行讨论。 12. 博客动漫风格背景图因为在上一个LuckyBlog版本发布的网站风格是偏向动漫风格的，如果大家喜欢动漫风格，只需要替换以下配置即可。 博客每日轮播图： 以下链接图片全部下载保存到MyBlog\\themes\\matery\\source\\medias\\banner中，以0~7.jpg的文件名格式命名即可。 https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/0.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/1.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/2.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/3.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/4.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/5.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/6.jpg https://cdn.jsdelivr.net/gh/LuckyZmj/LuckyBlog@master/themes/matery/source/medias/banner/7.jpg 无文章特色背景图： 打开主题配置文件MyBlog\\themes\\matery\\_config.yml，修改替换如下代码即可： # The post featured images that needs to be displayed when there is no image. # 无文章特色图片时需要显示的文章特色图片. featureImages: - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/01.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/02.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/04.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/06.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/07.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/10.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/11.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/12.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/09.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/14.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/15.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/16.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E4%BA%8C%E6%AC%A1%E5%85%83%E9%A3%8E/06.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/02.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/03.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/04.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/07.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/08.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/11.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/10.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/09.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/12.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/13.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/14.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/16.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/15.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/11.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/09.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/03.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/08.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/03.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E9%A3%8E%E6%99%AF/13.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/01.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E5%8A%A8%E6%BC%AB%E6%8F%92%E7%94%BB/05.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/14.jpg - https://cdn.jsdelivr.net/gh/LuckyZmj/imgbed@master/galleries/%E7%92%80%E7%92%A8%E6%98%9F%E7%A9%BA/01.jpg 0x04 更多内容优化以上简单介绍了 LuckyBlog 中一些要修改的个性化地方，其他更详细的优化参考其他关于Matery的文章。以下几篇文章都是基于hexo-theme-matery主题优化的教程，大家如果遇到问题，可以参考其中的方法。 个人博客搭建 Hexo+Github博客搭建完全教程 hexo-theme-matery作者教程 Hexo+github搭建博客(超级详细版，精细入微) hexo（matery）背景、滚动条优化+增加点击跳评论","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"hexo-blog-lucky","slug":"hexo-blog-lucky","permalink":"https://kingwdy.avosapps.us/tags/hexo-blog-lucky/"},{"name":"博客搭建教程","slug":"博客搭建教程","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"}],"author":"luckyzmj"},{"title":"Hexo之渲染绕过","slug":"Hexo-xr","date":"2021-06-12T14:55:38.000Z","updated":"2022-05-29T05:36:03.088Z","comments":true,"path":"posts/28347.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/28347.html","excerpt":"","text":"0x001 Hexo 渲染 在Hexo部署时会默认渲染source下的所有html页面，但有时候想在Hexo博客上单独自定义html页面或README.md时，却不希望被Hexo渲染。因此对某个文件或者目录进行排除渲染是非常必要的。 0x002 方法一：font matterHexo新建网站页面，然后将你的代码直接写入 index.md 中 在 Front matter 中添加 layout: false，此方法适用于单一的纯HTMLCSS 页面。 --- title: tools date: 2020-04-28 00:00:00 type: \"tools\" layout: false --- 0x003 方法二：skip render在博客根目录下的 _config.yml，找到 skip_render，大概在32行左右，写入你想要的跳过渲染的路径，注意缩进和空格。 # 指定目录跳过hexo渲染 skip_render: - 'tools/*' - 'tools/**' 注释：tools/* 表示在目录 source/fireworks 下的文件全部跳过渲染，tools/** 表示在博客根目录 source/tools/ 文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。 0x004 案例：webstack 导航webstack是一个纯静态的网址导航网站，内容均由viggo收集并整理。项目基于bootstrap前端框架开发。 Github：https://github.com/WebStackPage/WebStackPage.github.io 在博客根目录 source/下新建tools，然后新建index.html,将webstack网页源码全选复制粘贴到里面。 本站的webstack源码：view-source:http://luckyzmj.cn/tools/ 注意：将源码里的部分信息以及跳转链接按照你真实个人博客的环境进行修改。 然后打开博客根目录下配置文件_config.yml，找到skip_render，做如下修改： skip_render: - 'tools/*' - 'tools/**' 最后执行hexo clean和hexo s -g 本地预览，检查无误后hexo g -d部署到服务器上即可。 参考文章 https://xiabor.com/2020/04/21/hexo3/#%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87hexo%E7%9A%84%E6%B8%B2%E6%9F%93","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kingwdy.avosapps.us/tags/Hexo/"},{"name":"渲染绕过","slug":"渲染绕过","permalink":"https://kingwdy.avosapps.us/tags/%E6%B8%B2%E6%9F%93%E7%BB%95%E8%BF%87/"}],"author":"Luckey"},{"title":"阿里云服务器部署Hexo博客","slug":"blog-aliyun","date":"2020-02-26T16:00:00.000Z","updated":"2022-05-29T05:45:02.585Z","comments":true,"path":"posts/19d2a4e6.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/19d2a4e6.html","excerpt":"","text":"前言 相信大部分人使用Hexo搭建个人博客都会部署到一些免费的代码托管平台上，但这些免费的平台总是差强人意，比如国外的GitHub平台虽然完全免费，但在国内访问加载速度非常慢，又或者是国内的码云平台免费版有许多功能被阉割掉了，比如不能自定义域名，不能每次自动刷新提交的代码，需要到码云平台上手动刷新，如此一来非常繁琐。 为了有效解决上诉的一些问题，有条件的话，不妨在自己的云服务器上搭建Hexo博客。 效果演示 这是Hexo博客部署到GitHub上的网站测速效果 这是Hexo博客部署到阿里云服务器后的网站测速效果 环境准备 本地环境：Windows 10 云服务器环境：阿里云ECS（CentOS7.x） 开始部署 本地环境搭建1.安装Git 到git官网上下载.exe文件,Download git,安装选项还是全部默认，最后一步添加路径时选择Use Git from the Windows Command Prompt。 Git下载地址 Git教程 2.安装Nodejs 到Node.js官网下载.exe文件，安装选项全部默认。安装好之后，按Win+R打开cmd命令提示符，输入node -v和npm -v，若出现版本号，则说明安装成功。 使用npm阿里的国内镜像进行加速下载 npm config set registry https://registry.npm.taobao.org 4.安装Hexo 先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接右键git here打开）。 定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，不用理会。 npm install -g hexo-cli 安装完后输入hexo -v,若出现版本号则，说明安装成功。 接下来初始化一下hexo,即初始化我们的博客，输入hexo init初始化文件夹 hexo init MyBlog 新建完成后，指定文件夹MyBlog目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题** _config.yml: 博客的配置文件** 输入hexo g生成静态网页，然后输入hexo s打开本地服务器预览 hexo g hexo s 生成ssh公钥在本地桌面点击右键Git Here打开Git终端，执行如下命令`,一路回车 ssh-keygen -t rsa 这个时候它会告诉你已经生成了.ssh的文件夹。在git 中输入 cat ~/.ssh/id_rsa.pub 输出的内容就是公钥信息了 阿里云服务器环境搭建安装Git yum install git 创建Git账户 adduser git 添加账户权限 chmod 740 /etc/sudoers vim /etc/sudoers 找到 ## Allow root to run any commands anywhere root ALL=(ALL) ALL 添加以下内容 git ALL=(ALL) ALL 保存退出并改回权限 chmod 400 /etc/sudoers 设置git账户密码 sudo passwd git 切换至git用户，创建 ~/.ssh 文件夹和 ~/.ssh/authorized_keys 文件，并赋予相应的权限 su git mkdir ~/.ssh vim ~/.ssh/authorized_keys # 然后将win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys chmod 600 /home/git/.ssh/authorized_keys chmod 700 /home/git/.ssh 在本地Git终端中测试是否能免密登录git，其中SERVER为填写自己的云主机IP，执行输入yes后不用密码就说明好了 ssh -v git@SERVER 创建目录 #repo作为为Git仓库目录 mkdir /var/repo chown -R git:git /var/repo chmod -R 755 /var/repo #hexo作为网站根目录 mkdir /var/www/hexo chown -R git:git /var/www/hexo chmod -R 755 /var/www/hexo 然后创建一个裸的 Git 仓库 cd var/repo git init --bare hexoBlog.git 创建一个新的 Git 钩子，用于自动部署 在 /var/repo/hexoBlog.git 下，有一个自动生成的 hooks 文件夹。我们需要在里边新建一个新的钩子文件 post-receive。 vim /var/repo/hexoBlog.git/hooks/post-receive 按 i 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录（配置文件等） #!/bin/ git --work-tree=/var/www/hexo --git-dir=/var/repo/hexoBlog.git checkout -f 然后，按 Esc 键退出编辑模式，输入”:wq” 保存退出。 修改文件权限，使得其可执行 chown -R git:git /var/repo/hexoBlog.git/hooks/post-receive chmod +x /var/repo/hexoBlog.git/hooks/post-receive 到此为止 Git 仓库就搭建完成了。 阿里云服务器配置Nginx用宝塔面板来一键部署Nginx Linux面板6.0安装命令(暂时仅兼容Centos7.x，其它系统版本请安装5.9稳定版)： yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; install.sh Linux面板6.0升级专业版 curl http://download.bt.cn/install/update6.sh| 安装完成后会显示面板后台地址·账号·密码。打开面板后台地址登陆面板，选择Nginx的部署方案，静静等待部署。 部署完成，点击网站-添加站点-输入域名(没有域名的输入自己的IP地址)-底部的PHP版本选择”纯静态”-提交。 网站创建完成后点击设置-配置文件 server { listen 80; # server_name 填写自己的域名 server_name luckyzmj.cn blog.luckyzmj.cn; index index.php index.html index.htm default.php default.htm default.html; # 这里root填写自己的网站根目录，修改为/var/www/hexo root /var/www/hexo; -保存 点击设置-网站目录，修改为/var/www/hexo ，保存 重启宝塔面板服务 service bt restart 本地Hexo部署到阿里云服务器进入到本地Hexo博客的文件夹MyBlog,右键点击Git Here，输入命令 #定义邮箱(更换为你的邮箱地址就行) git config --global user.email \"you@example.com\" #定义名称(更换自定义一个名称就行) git config --global user.name \"Your Name\" 配置_config.yml,完成自动化部署 打开本地Hexo博客的文件夹MyBlog文件夹下的_config.yml, 找到deploy deploy: type: git #server改为你的服务IP地址或解析后的域名 #例如我改为repo: git@luckyzmj.cn:/var/repo/blog.git repo: git@server:/var/repo/blog.git branch: master 保存后，即可测试部署 再进入到本地Hexo博客的文件夹MyBlog,右键点击Git Here，输入命令 hexo clean hexo g -d 不报错说明完成，打开浏览器输入你的域名或ip地址就可以看到你部署的Hexo博客了。 到此为止，我们已经成功部完成，并且访问自己的服务器端比访问Github快多了。 小贴士 在部署过程中，执行 hexo d发现部署老是出错，什么权限不允许之类的，这里我们需要检查我们在上述的git操作部署是否使用了git用户操作，若是没有，需要给相应的目录更改用户组 使用 chown -R git:git /var/repo/ 这条命令递归的将repo目录及其子目录用户组设置为git。 同时使用 chown -R git:git /var/www/hexo 这样即可解决此类问题。 还有一个问题就是绑定域名后不能访问。原因是在国内任何域名只要绑定到国内的服务器主机上都必须去工信部和公安部备案完后才能正常使用。如果是港澳台的服务器或者是国外的服务器则可以不需要备案。 参考文章 https://blog.csdn.net/weixin_33907511/article/details/91398208?utm_source=distribute.pc_relevant.none-task","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kingwdy.avosapps.us/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"阿里云","slug":"阿里云","permalink":"https://kingwdy.avosapps.us/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"}],"author":"Luckey"},{"title":"个人博客搭建","slug":"Blog","date":"2019-08-27T03:41:03.000Z","updated":"2022-05-29T05:24:28.846Z","comments":true,"path":"posts/e3e08109.html","link":"","permalink":"https://kingwdy.avosapps.us/posts/e3e08109.html","excerpt":"","text":"本文写的时间较早，请核查文章准确性！ 0x001 效果演示 0x002 简单介绍 前前后后大概花了一周多的时间，目前个人博客已经完善的差不多了，现在写个文章做个阶段总结，后续如果有更新的地方，会及时补充。本博客基于Hexo框架，采用hexo-theme-matery主题，在这里非常感谢作者洪卫的hexo-blog-fly博客开源，极大简化了构建博客的工作量和复杂度。在此开源博客的基础上做了改进，修复了一些bug，顺利搭建完成了我的个人博客。大家对此主题有兴趣的可以下载源代码，搭建属于自己的个性化博客。 个人博客 演示：http://luckyzmj.cn 0x003 Hexo 初级搭建 1. 安装GitGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。Git的作用是将本地的网页文件传到github上。 Git下载地址 Git教程 windows： 到git官网上下载.exe文件,Download git,安装选项还是全部默认，最后一步添加路径时选择Use Git from the Windows Command Prompt。 2. 安装node.jsHexo是基于node.js编写的，所以需要安装一下node.js和里面的npm工具。 windows： 到Node.js官网下载.exe文件，安装选项全部默认。安装好之后，按Win+R打开cmd命令提示符，输入node -v和npm -v，若出现版本号，则说明安装成功。 3. 添加npm国内源使用阿里的国内镜像进行加速下载 npm config set registry https://registry.npm.taobao.org 4. 安装Hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接右键git 打开）。 比如我的博客文件都存放在E:\\MyBlog目录下。 在该目录下右键点击Git Here，打开git的控制台窗口，以后我们所有的操作都在git控制台进行，就不用Windows自带的cmd了。 定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，不用理会。 npm install -g hexo-cli 安装完后输入hexo -v验证是否安装成功。 到此为止hexo就安装完了。 接下来初始化一下hexo,即初始化我们的网站，输入hexo init初始化文件夹 hexo init MyBlog 新建完成后，指定文件夹MyBlog目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题** _config.yml: 博客的配置文件** 到此为止，本地的网站配置完成了。 输入hexo g生成静态网页，然后输入hexo s打开本地服务器 hexo g hexo s 5. 注册Github账号创建个人仓库接下来就去注册一个github账号，用来存放我们的网站。 打开https://github.com/，新建一个项目仓库New repository，如下所示： 然后如下图所示，输入自己的项目名字，后面一定要加.github.io后缀，README初始化也要勾上 要创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是http://xxxx.github.io，其中xxx就是你注册GitHub的用户名。例如我的：http://LuckyZmj.github.io 6. 生成SSH添加到GitHub生成SSH添加到GitHub，连接Github与本地。右键打开git here，然后输入下面命令： git config --global user.name \"注册GitHub用户名\" git config --global user.email \"注册GitHub的邮箱\" 用以下两条，检查一下你有没有输对 git config user.name git config user.email 然后创建SSH,一路回车 ssh-keygen -t rsa -C \"注册GitHub的邮箱\" 这个时候它会告诉你已经生成了.ssh的文件夹。在git 中输入 cat ~/.ssh/id_rsa.pub 将输出的内容复制到框中，点击确定保存。 打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去。如图： 在git 输入ssh -T git@github.com，如果如下图所示，出现你的用户名，那就成功了。 ssh -T git@github.com 7. 将hexo部署到GitHub将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。找到如下配置进行修改： deploy: type: git repository: https://github.com/LuckyZmj/LuckyZmj.github.io branch: master repository修改为你自己的github项目地址即可，就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 npm install hexo-deployer-git --save 然后就可以部署提交到github，过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了 hexo clean hexo generate hexo deploy 其中 hexo clean清除了你之前生成的东西。 hexo generate，生成静态文章，可以用 hexo g缩写 ，hexo deploy部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 8. 写文章和发布文章首先在博客根目录下右键打开git here，安装一个扩展npm i hexo-deployer-git。 npm i hexo-deployer-git 然后输入hexo new post \"article title\"，新建一篇文章。 hexo new post \"article title\" 然后打开E:\\MyBlog\\source\\_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件。 另外推荐直接使用有道云编写markdown文章，不仅可以实时预览，还可以快捷的生成markdown语法格式，具体效果如下图所示。 编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章了。 到此为止，Hexo初级搭建就已经完成了。 0x004 Hexo 优化定制 1. Hexo相关目录文件1.1 博客目录构成介绍node_modules是node.js各种库的目录，public是生成的网页文件目录，scaffolds里面就三个文件，存储着新文章和新页面的初始设置，source是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，themes存放着主题文件，一般也用不到。 我们平时写文章只需要关注source/_posts这个文件夹就行了。 - node_modules - public - scaffolds - source - _data - _posts - about - archives - categories - friends - tags - themes 1.2 hexo基本配置在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。 1.2.1 网站参数描述title网站标题subtitle网站副标题description网站描述author您的名字language网站使用的语言timezone网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。 其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。 1.2.2 网址参数描述url网址root网站根目录 permalink文章的永久链接格式permalink_defaults永久链接中各部分的默认值 在这里，你需要把url改成你的网站域名。 permalink，也就是你生成某个文章时的那个链接格式。 比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是http://yoursite.com/2018/09/05/temp。 以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找永久链接 。 参数结果 :year/:month/:day/:title /2019/08/10/hello-world :year-:month-:day-:title.html 2019-08-10-hello-world.html :category/:titlefoo /bar/hello-world 2. 定制主题这里推荐作者洪卫的hexo-blog-fly博客主题，该主题是基于hexo-theme-matery优化的，需要把博客相关信息换成您自己的就可以部署了，极大简化了构建博客的工作量和复杂度。 2.1 简单使用方法 安装Git, 安装nodeJS，安装Hexo 你可以直接fork一份源码到你的仓库，clone到本地博客文件夹内 在本地博客仓库运行npm i命令安装依赖包 直接修改配置信息，改成自己的信息 运行命令hexo clean（清除生成文件），hexo g（生成网页）， hexo s（本地预览），hexo d（部署） 2.2 原主题特性: 简单漂亮，文章内容美观易读 Material Design 设计 响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现 首页轮播文章及每天动态切换 Banner 图片 瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的图片代替） 时间轴式的归档页 词云的标签页和雷达图的分类页 丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等） 可自定义的数据的友情链接页面 支持文章置顶和文章打赏 支持 MathJax TOC 目录 可设置复制文章内容时追加版权信息 可设置阅读文章时做密码验证 Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用 Gitalk） 集成了不蒜子统计、谷歌分析（Google Analytics）和文章字数统计等功能 支持在首页的音乐播放和视频播放功能 2.3 新增加特性: 修改了原主题的一些很多bug 加入图片懒加载功能，在根目录配置文件开启和关闭 增加留言板功能 在关于板块,加入简历功能页 增加视听[视觉听觉影音]板块 支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。 增加网站运行时间显示 增加动漫模型 整体替换Banner图片和文章特色图片 增加分类相册功能 修改了一些控件的参数 修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观 解决首页文章列表卡片上方 border-radius圆角失效的bug 添加页面樱花飘落动效 添加鼠标点击烟花爆炸动效 加入天气接口控件 加入鼠标点击文字特效 添加页面雪花飘落动效 添加在线聊天插件 调整线聊天插件参数，使之能够随着鼠标滑动位置自适应调整 持续更新… 2.4 切换主题如果想自己动手对hexo-theme-matery优化的话，可以修改Hexo根目录下的 _config.yml的 theme 的值 theme: hexo-theme-matery _config.yml 文件的其它修改建议: 请修改 _config.yml 的 url 的值为你的网站主 URL（如：http://xxx.github.io）。 建议修改两个 per_page 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。 如果你是中文用户，则建议修改 language 的值为 zh-CN。 2.5 新建分类 categories 页categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"categories\" 编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容： --- title: categories date: 2018-09-30 17:25:30 type: \"categories\" layout: \"categories\" --- 2.6 新建标签 tags 页tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"tags\" 编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容： --- title: tags date: 2018-09-30 18:23:38 type: \"tags\" layout: \"tags\" --- 2.7 新建关于我 about 页about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"about\" 编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容： --- title: about date: 2018-09-30 17:25:30 type: \"about\" layout: \"about\" --- 2.8 新建留言板 contact 页（可选的）contact 页是用来展示留言板信息的页面，前提是已经开启了第三方评论系统才能显示。如果在你的博客 source 目录下还没有 contact/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"contact\" 编辑你刚刚新建的页面文件 /source/contact/index.md，至少需要以下内容： --- title: contact date: 2018-09-30 17:25:30 type: \"contact\" layout: \"contact\" --- 2.9 新建友情链接 friends 页（可选的）friends 页是用来展示友情链接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下： hexo new page \"friends\" 编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容： --- title: friends date: 2018-12-12 21:25:30 type: \"friends\" layout: \"friends\" --- 同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示： [{ \"avatar\": \"http://image.luokangyuan.com/1_qq_27922023.jpg\", \"name\": \"码酱\", \"introduction\": \"我不是大佬，只是在追寻大佬的脚步\", \"url\": \"http://luokangyuan.com/\", \"title\": \"前去学习\" }, { \"avatar\": \"http://image.luokangyuan.com/4027734.jpeg\", \"name\": \"闪烁之狐\", \"introduction\": \"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬\", \"url\": \"https://blinkfox.github.io/\", \"title\": \"前去学习\" }, { \"avatar\": \"http://image.luokangyuan.com/avatar.jpg\", \"name\": \"ja_rome\", \"introduction\": \"平凡的脚步也可以走出伟大的行程\", \"url\": \"https://me.csdn.net/jlh912008548\", \"title\": \"前去学习\" }] 2.10 一级菜单导航配置配置基本菜单导航的名称、路径url和图标icon 菜单导航名称可以是中文也可以是英文(如：Index或主页) 图标icon 可以在Font Awesome 中查找 menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle Friends: url: /friends icon: fas fa-address-book 2.11 二级菜单配置方法如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作 在需要添加二级菜单的一级菜单下添加children关键字(如:About菜单下添加children) 在children下创建二级菜单的 名称name,路径url和图标icon. 注意每个二级菜单模块前要加 -. 注意缩进格式 menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle-o Friends: url: /friends icon: fas fa-address-book Medias: icon: fas fa-list children: - name: Musics url: /musics icon: fas fa-music - name: Movies url: /movies icon: fas fa-film - name: Books url: /books icon: fas fa-book - name: Galleries url: /galleries icon: fas fa-image 执行 hexo clean &amp;&amp; hexo g 重新生成博客文件。 2.12 代码高亮由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下： npm i -S hexo-prism-plugin 然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下： highlight: enable: false prism_plugin: mode: 'preprocess' # realtime/preprocess theme: 'tomorrow' line_number: false # default false custom_css: 更多代码块优化详细内容请访问：http://luckyzmj.cn/posts/1b9a9e28.html 2.13 搜索本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下： npm install hexo-generator-search --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： search: path: search.xml field: post 2.14 文章字数统计插件（建议安装）如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount 插件。 安装命令如下： npm i --save hexo-wordcount 然后只需在本主题下的 _config.yml 文件中，将各个文章字数相关的配置激活即可： postInfo: date: true update: false wordCount: false # 设置文章字数统计为 true. totalCount: false # 设置站点文章总字数统计为 true. min2read: false # 阅读时长. readCount: false # 阅读次数. 2.15 添加emoji表情支持（可选的）本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：:smile:）转变成会跳跃的emoji表情，安装命令如下： npm install hexo-filter-github-emojis --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： githubEmojis: enable: true className: github-emoji inject: true styles: customEmojis: 2.16 添加 RSS 订阅支持（可选的）本主题中还使用到了hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下： npm install hexo-generator-feed --save 在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项： feed: type: atom path: atom.xml limit: 20 hub: content: content_limit: 140 content_limit_delim: ' ' order_by: -date 执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。 2.17 添加 DaoVoice 在线聊天功能（可选的）前往 DaoVoice 官网注册并且获取 app_id，并将 app_id 填入主题的 _config.yml 文件中。 2.18 添加 Tidio 在线聊天功能（可选的）前往 Tidio 官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。 2.19 修改页脚页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。 2.20 修改社交链接在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱等的配置，你可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码： &lt;% if (theme.socialLink.github) { %> &lt;a href=\"&lt;%= theme.socialLink.github %>\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\"> &lt;i class=\"fab fa-github\">&lt;/i> &lt;/a> &lt;% } %> 其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考： Facebook: fab fa-facebook Twitter: fab fa-twitter Google-plus: fab fa-google-plus Linkedin: fab fa-linkedin Tumblr: fab fa-tumblr Medium: fab fa-medium Slack: fab fa-slack Sina Weibo: fab fa-weibo Wechat: fab fa-weixin QQ: fab fa-qq Zhihu: fab fa-zhihu 注意: 本主题中使用的 Font Awesome 版本为 5.11.0。 2.21 修改打赏的二维码图片在主题文件的 source/medias/reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。 2.22 配置音乐播放器（可选的）要支持音乐播放，在主题的 _config.yml 配置文件中激活music配置即可 # 是否在首页显示音乐 music: enable: true title: #非吸底模式有效 enable: true show: 听听音乐 server: netease #require music platform: netease, tencent, kugou, xiami, baidu type: playlist #require song, playlist, album, search, artist id: 503838841 #require song id / playlist id / album id / search keyword fixed: false # 开启吸底模式 autoplay: false # 是否自动播放 theme: '#42b983' loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none' order: 'random' # 音频循环顺序, 可选值: 'list', 'random' preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: true # 列表默认折叠 提示： server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。 type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手） id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。 2.23文章 Front-matter 介绍Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。 配置选项 默认值 描述 title Markdown 的文件标题 文章标题，强烈建议填写此选项 date 文件创建时的日期时间 发布时间，强烈建议填写此选项，且最好保证全局唯一 author 根 _config.yml 中的 author 文章作者 img featureImages 中的某个值 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpg top true 推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章 cover false v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中 coverImg 无 v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片 password 无 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项 toc true 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项 mathjax false 是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行 summary 无 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories 无 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类 tags 无 文章标签，一篇文章可以多个标签 keywords 文章标题 文章关键字，SEO 时需要 reprintPolicy cc_by 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个 注意: 如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。 date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。 您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则 以下为文章的 Front-matter 示例。最简示例 --- title: typora-vue-theme主题介绍 date: 2018-09-07 09:25:00 --- 最全示例 --- title: theme主题介绍 date: 2018-09-07 09:25:00 author: 赵奇 img: /source/images/xxx.jpg top: true cover: true coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: false mathjax: false summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories: Markdown tags: - Typora - Markdown --- 2.24 自定制修改在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分： 菜单 我的梦想 首页的音乐播放器和视频播放器配置 是否显示推荐文章名称和按钮配置 favicon 和 Logo 个人信息 TOC 目录 文章打赏信息 复制文章内容时追加版权信息 MathJax 文章字数统计、阅读时长 点击页面的’爱心’效果 我的项目 我的技能 我的相册 Gitalk、Gitment、Valine 和 disqus 评论配置 不蒜子统计和谷歌分析（Google Analytics） 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图 我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：修改主题颜色 在主题文件的 /source/css/matery.css 文件中，搜索 .bg-color 来修改背景颜色： /* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */ .bg-color { background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); } @-webkit-keyframes rainbow { /* 动态切换背景颜色. */ } @keyframes rainbow { /* 动态切换背景颜色. */ } body { /* background-color: #eaeaea; */ /* 增加背景壁纸*/ background: url(\"https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png\"), url(\"http://luckyzmj.cn/img/yun.jpg\") 0px 0px; background-attachment: fixed; margin: 0; color: #34495e; } 2.25 修改 banner 图和文章特色图你可以直接在 /source/medias/banner 文件夹中更换你喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 JavaScript 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 /layout/_partial/bg-cover-content.ejs 文件的 &lt;script&gt;&lt;/script&gt; 代码中： $('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)'); 在 /source/medias/featureimages 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 _config.yml 做同步修改。 2.26 优化目录栏在 themes\\Matery\\layout\\_partial\\post-detail-toc.ejs，修改内容如下： .toc-widget { padding-left: 20px; width: 345px; background-color: rgb(255, 255, 255,0.7); border-radius: 10px; box-shadow: 0 10px 35px 2px rgba(0, 0, 0, .15), 0 5px 15px rgba(0, 0, 0, .07), 0 2px 5px -5px rgba(0, 0, 0, .1) !important; } #toc-content { margin-bottom: 20px; } 0x005 更多详细教程以下几篇文章都是基于Hexo框架和hexo-theme-matery主题优化的教程，大家如果遇到问题，可以参考其中的方法。 Hexo+Github博客搭建完全教程 hexo-theme-matery作者教程 Hexo+github搭建博客(超级详细版，精细入微) hexo（matery）背景、滚动条优化+增加点击跳评论","categories":[{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://kingwdy.avosapps.us/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://kingwdy.avosapps.us/tags/Github/"},{"name":"博客","slug":"博客","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2/"}],"author":"Luckey"}],"categories":[{"name":"随笔","slug":"随笔","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E7%AC%94/"},{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/categories/%E8%BD%AC%E8%BD%BD/"},{"name":"技术","slug":"技术","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF/"},{"name":"资源","slug":"资源","permalink":"https://kingwdy.avosapps.us/categories/%E8%B5%84%E6%BA%90/"},{"name":"随想","slug":"随想","permalink":"https://kingwdy.avosapps.us/categories/%E9%9A%8F%E6%83%B3/"},{"name":"生活","slug":"生活","permalink":"https://kingwdy.avosapps.us/categories/%E7%94%9F%E6%B4%BB/"},{"name":"技术 - Markdown语法教程","slug":"技术-Markdown语法教程","permalink":"https://kingwdy.avosapps.us/categories/%E6%8A%80%E6%9C%AF-Markdown%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"动漫","slug":"动漫","permalink":"https://kingwdy.avosapps.us/tags/%E5%8A%A8%E6%BC%AB/"},{"name":"全职高手","slug":"全职高手","permalink":"https://kingwdy.avosapps.us/tags/%E5%85%A8%E8%81%8C%E9%AB%98%E6%89%8B/"},{"name":"-YLUI","slug":"YLUI","permalink":"https://kingwdy.avosapps.us/tags/YLUI/"},{"name":"hexo","slug":"hexo","permalink":"https://kingwdy.avosapps.us/tags/hexo/"},{"name":"npm","slug":"npm","permalink":"https://kingwdy.avosapps.us/tags/npm/"},{"name":"博客优化","slug":"博客优化","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/"},{"name":"文章加密","slug":"文章加密","permalink":"https://kingwdy.avosapps.us/tags/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"},{"name":"note标签","slug":"note标签","permalink":"https://kingwdy.avosapps.us/tags/note%E6%A0%87%E7%AD%BE/"},{"name":"网站分享","slug":"网站分享","permalink":"https://kingwdy.avosapps.us/tags/%E7%BD%91%E7%AB%99%E5%88%86%E4%BA%AB/"},{"name":"图像处理","slug":"图像处理","permalink":"https://kingwdy.avosapps.us/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"},{"name":"WEBP","slug":"WEBP","permalink":"https://kingwdy.avosapps.us/tags/WEBP/"},{"name":"转换","slug":"转换","permalink":"https://kingwdy.avosapps.us/tags/%E8%BD%AC%E6%8D%A2/"},{"name":"插件","slug":"插件","permalink":"https://kingwdy.avosapps.us/tags/%E6%8F%92%E4%BB%B6/"},{"name":"教程","slug":"教程","permalink":"https://kingwdy.avosapps.us/tags/%E6%95%99%E7%A8%8B/"},{"name":"汉化","slug":"汉化","permalink":"https://kingwdy.avosapps.us/tags/%E6%B1%89%E5%8C%96/"},{"name":"加速器","slug":"加速器","permalink":"https://kingwdy.avosapps.us/tags/%E5%8A%A0%E9%80%9F%E5%99%A8/"},{"name":"应用分享","slug":"应用分享","permalink":"https://kingwdy.avosapps.us/tags/%E5%BA%94%E7%94%A8%E5%88%86%E4%BA%AB/"},{"name":"声明","slug":"声明","permalink":"https://kingwdy.avosapps.us/tags/%E5%A3%B0%E6%98%8E/"},{"name":"游戏板块","slug":"游戏板块","permalink":"https://kingwdy.avosapps.us/tags/%E6%B8%B8%E6%88%8F%E6%9D%BF%E5%9D%97/"},{"name":"好物推荐","slug":"好物推荐","permalink":"https://kingwdy.avosapps.us/tags/%E5%A5%BD%E7%89%A9%E6%8E%A8%E8%8D%90/"},{"name":"音乐","slug":"音乐","permalink":"https://kingwdy.avosapps.us/tags/%E9%9F%B3%E4%B9%90/"},{"name":"评价","slug":"评价","permalink":"https://kingwdy.avosapps.us/tags/%E8%AF%84%E4%BB%B7/"},{"name":"Billie Eilish","slug":"Billie-Eilish","permalink":"https://kingwdy.avosapps.us/tags/Billie-Eilish/"},{"name":"流行音乐","slug":"流行音乐","permalink":"https://kingwdy.avosapps.us/tags/%E6%B5%81%E8%A1%8C%E9%9F%B3%E4%B9%90/"},{"name":"web","slug":"web","permalink":"https://kingwdy.avosapps.us/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"https://kingwdy.avosapps.us/tags/%E6%82%A6%E8%AF%BB/"},{"name":"工具箱","slug":"工具箱","permalink":"https://kingwdy.avosapps.us/tags/%E5%B7%A5%E5%85%B7%E7%AE%B1/"},{"name":"代码分享","slug":"代码分享","permalink":"https://kingwdy.avosapps.us/tags/%E4%BB%A3%E7%A0%81%E5%88%86%E4%BA%AB/"},{"name":"API图片","slug":"API图片","permalink":"https://kingwdy.avosapps.us/tags/API%E5%9B%BE%E7%89%87/"},{"name":"转载","slug":"转载","permalink":"https://kingwdy.avosapps.us/tags/%E8%BD%AC%E8%BD%BD/"},{"name":"Fontawesome 图标","slug":"Fontawesome-图标","permalink":"https://kingwdy.avosapps.us/tags/Fontawesome-%E5%9B%BE%E6%A0%87/"},{"name":"蚊子","slug":"蚊子","permalink":"https://kingwdy.avosapps.us/tags/%E8%9A%8A%E5%AD%90/"},{"name":"生物","slug":"生物","permalink":"https://kingwdy.avosapps.us/tags/%E7%94%9F%E7%89%A9/"},{"name":"百科","slug":"百科","permalink":"https://kingwdy.avosapps.us/tags/%E7%99%BE%E7%A7%91/"},{"name":"Markdown","slug":"Markdown","permalink":"https://kingwdy.avosapps.us/tags/Markdown/"},{"name":"blog","slug":"blog","permalink":"https://kingwdy.avosapps.us/tags/blog/"},{"name":"代码压缩","slug":"代码压缩","permalink":"https://kingwdy.avosapps.us/tags/%E4%BB%A3%E7%A0%81%E5%8E%8B%E7%BC%A9/"},{"name":"PicGo","slug":"PicGo","permalink":"https://kingwdy.avosapps.us/tags/PicGo/"},{"name":"GitHub图床","slug":"GitHub图床","permalink":"https://kingwdy.avosapps.us/tags/GitHub%E5%9B%BE%E5%BA%8A/"},{"name":"jQuery+CSS3","slug":"jQuery-CSS3","permalink":"https://kingwdy.avosapps.us/tags/jQuery-CSS3/"},{"name":"粒子特效","slug":"粒子特效","permalink":"https://kingwdy.avosapps.us/tags/%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88/"},{"name":"思维导图","slug":"思维导图","permalink":"https://kingwdy.avosapps.us/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"},{"name":"hexo-blog-lucky","slug":"hexo-blog-lucky","permalink":"https://kingwdy.avosapps.us/tags/hexo-blog-lucky/"},{"name":"博客搭建教程","slug":"博客搭建教程","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://kingwdy.avosapps.us/tags/Hexo/"},{"name":"渲染绕过","slug":"渲染绕过","permalink":"https://kingwdy.avosapps.us/tags/%E6%B8%B2%E6%9F%93%E7%BB%95%E8%BF%87/"},{"name":"博客","slug":"博客","permalink":"https://kingwdy.avosapps.us/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"阿里云","slug":"阿里云","permalink":"https://kingwdy.avosapps.us/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"Github","slug":"Github","permalink":"https://kingwdy.avosapps.us/tags/Github/"}]}